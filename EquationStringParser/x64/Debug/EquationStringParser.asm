; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30141.0 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?level@@3HA					; level
_BSS	SEGMENT
?level@@3HA DD	01H DUP (?)				; level
_BSS	ENDS
msvcjmc	SEGMENT
__3122E9E1_pch@h DB 01H
__5B9A3852_EquationStringParser@pch DB 01H
__F54903A0_xatomic@h DB 01H
__E458E21C_xstddef DB 01H
__1347750E_utility DB 01H
__B30C2184_iosfwd DB 01H
__038A2AA6_iterator DB 01H
__74AB0D97_streambuf DB 01H
__C12F3EA4_ostream DB 01H
__A2FF0B9E_istream DB 01H
__324884E2_vector DB 01H
__E80AFA59_expression@h DB 01H
__C90439AA_EquationStringParser@cpp DB 01H
__3F6EDB1A_tree_builder@h DB 01H
__5A687423_token@h DB 01H
__63E15800_op@h DB 01H
__B7987E10_string DB 01H
__845859A3_ios DB 01H
__4CB88277_xlocnum DB 01H
__4495FA24_xiosbase DB 01H
__D23FE460_xlocale DB 01H
__7D708D37_xlocinfo DB 01H
__6AECDA3E_ctype@h DB 01H
__EF0EAF83_xfacet DB 01H
__C34BF88C_memory DB 01H
__62F96EFF_typeinfo DB 01H
__65ADBEC9_vcruntime_typeinfo@h DB 01H
__1B354CA2_system_error DB 01H
__14D0A8C0_atomic DB 01H
__DDB379A0_xthreads@h DB 01H
__93FD7E51_time@h DB 01H
__A4685E82_xcall_once@h DB 01H
__760BB52B_stdexcept DB 01H
__0D019051_xstring DB 01H
__79D216CD_xmemory DB 01H
__7FE5F402_limits DB 01H
__FF458F76_exception DB 01H
__B0A13A33_vcruntime_exception@h DB 01H
__E5D9469F_malloc@h DB 01H
__12269DE6_xutility DB 01H
__589FA321_type_traits DB 01H
__4BE26BFD_wchar@h DB 01H
__72103B05_stat@h DB 01H
__18070508_corecrt_wtime@h DB 01H
__91FC0EDF_corecrt_wio@h DB 01H
__E387ED1C_corecrt_wconio@h DB 01H
__F787F5CD_string@h DB 01H
__5B29309E_corecrt_wstring@h DB 01H
__82377222_corecrt_memory@h DB 01H
__184F7456_corecrt_memcpy_s@h DB 01H
__B5C48800_stdio@h DB 01H
__A7F89B2B_corecrt_wstdio@h DB 01H
__C44F8F6B_corecrt_stdio_config@h DB 01H
__60BC708E_cmath DB 01H
__244AF085_cstdlib DB 01H
__71F46169_stdlib@h DB 01H
__92857972_corecrt_math@h DB 01H
__97D3638F_vcruntime_new@h DB 01H
msvcjmc	ENDS
CONST	SEGMENT
?supportedOps@@3QBDB DB 02bH				; supportedOps
	DB	02dH
	DB	02aH
	DB	02fH
	DB	05eH
	ORG $+3
?supportedVariableNames@@3QBDB DB 078H			; supportedVariableNames
	DB	079H
	DB	07aH
CONST	ENDS
PUBLIC	?__empty_global_delete@@YAXPEAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAX_K@Z		; __empty_global_delete
PUBLIC	??2@YAPEAX_KPEAX@Z				; operator new
PUBLIC	__local_stdio_printf_options
PUBLIC	_vsprintf_s_l
PUBLIC	_vscprintf_l
PUBLIC	sprintf_s
PUBLIC	_scprintf
PUBLIC	??0exception@std@@QEAA@QEBD@Z			; std::exception::exception
PUBLIC	??0exception@std@@QEAA@QEBDH@Z			; std::exception::exception
PUBLIC	??0exception@std@@QEAA@AEBV01@@Z		; std::exception::exception
PUBLIC	??1exception@std@@UEAA@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UEBAPEBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UEAAPEAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@AEAA@QEBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??1bad_alloc@std@@UEAA@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	??0bad_alloc@std@@QEAA@AEBV01@@Z		; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UEAAPEAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QEAA@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UEAA@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QEAA@AEBV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UEAAPEAXI@Z	; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?max@?$numeric_limits@_J@std@@SA_JXZ		; std::numeric_limits<__int64>::max
PUBLIC	?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
PUBLIC	?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
PUBLIC	??$_Convert_size@_K@std@@YA_K_K@Z		; std::_Convert_size<unsigned __int64>
PUBLIC	??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy
PUBLIC	??0_Container_base12@std@@QEAA@XZ		; std::_Container_base12::_Container_base12
PUBLIC	?_Orphan_all@_Container_base12@std@@QEAAXXZ	; std::_Container_base12::_Orphan_all
PUBLIC	?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators
PUBLIC	?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ ; std::_Container_base12::_Orphan_all_unlocked_v3
PUBLIC	?_Swap_proxy_and_iterators_unlocked@_Container_base12@std@@AEAAXAEAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators_unlocked
PUBLIC	?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ ; std::_Container_base12::_Orphan_all_locked_v3
PUBLIC	?_Swap_proxy_and_iterators_locked@_Container_base12@std@@AEAAXAEAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators_locked
PUBLIC	?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
PUBLIC	??0_Basic_container_proxy_ptr12@std@@IEAA@XZ	; std::_Basic_container_proxy_ptr12::_Basic_container_proxy_ptr12
PUBLIC	??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ; std::addressof<std::_Container_base12>
PUBLIC	??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
PUBLIC	?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z	; std::_Char_traits<char,int>::copy
PUBLIC	?move@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z	; std::_Char_traits<char,int>::move
PUBLIC	?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z ; std::_Narrow_char_traits<char,int>::compare
PUBLIC	?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
PUBLIC	?assign@?$_Narrow_char_traits@DH@std@@SAPEADQEAD_KD@Z ; std::_Narrow_char_traits<char,int>::assign
PUBLIC	?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign
PUBLIC	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
PUBLIC	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ	; std::_Narrow_char_traits<char,int>::eof
PUBLIC	?_Xlen_string@std@@YAXXZ			; std::_Xlen_string
PUBLIC	??0?$allocator@D@std@@QEAA@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QEAAPEAD_K@Z	; std::allocator<char>::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ; std::_Default_allocator_traits<std::allocator<char> >::max_size
PUBLIC	?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z ; std::_Default_allocator_traits<std::allocator<char> >::select_on_container_copy_construction
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
PUBLIC	?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z ; std::_String_val<std::_Simple_types<char> >::_Check_offset
PUBLIC	?_Check_offset_exclusive@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z ; std::_String_val<std::_Simple_types<char> >::_Check_offset_exclusive
PUBLIC	?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ ; std::_String_val<std::_Simple_types<char> >::_Xran
PUBLIC	?_Clamp_suffix_size@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_K_K0@Z ; std::_String_val<std::_Simple_types<char> >::_Clamp_suffix_size
PUBLIC	??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
PUBLIC	??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
PUBLIC	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEAV01@1@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?_Move_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Move_assign
PUBLIC	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
PUBLIC	?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Memcpy_val_from
PUBLIC	?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents
PUBLIC	?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct_lv_contents
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?_Copy_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@U?$integral_constant@_N$0A@@2@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy_assign
PUBLIC	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?at@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::at
PUBLIC	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
PUBLIC	?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
PUBLIC	?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr
PUBLIC	?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAHQEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
PUBLIC	?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator
PUBLIC	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
PUBLIC	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
PUBLIC	?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
PUBLIC	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
PUBLIC	?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators
PUBLIC	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
PUBLIC	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>
PUBLIC	??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAPEAXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
PUBLIC	?fixed@std@@YAAEAVios_base@1@AEAV21@@Z		; std::fixed
PUBLIC	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@N@Z ; std::to_string
PUBLIC	??0op@@QEAA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; op::op
PUBLIC	??1op@@QEAA@XZ					; op::~op
PUBLIC	??0op@@QEAA@AEBU0@@Z				; op::op
PUBLIC	??_Gop@@QEAAPEAXI@Z				; op::`scalar deleting destructor'
PUBLIC	?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate
PUBLIC	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@_K@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
PUBLIC	?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy
PUBLIC	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
PUBLIC	?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Getal
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>::_Get_first
PUBLIC	?__autoclassinit2@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAX_K@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::__autoclassinit2
PUBLIC	?deallocate@?$allocator@Uop@@@std@@QEAAXQEAUop@@_K@Z ; std::allocator<op>::deallocate
PUBLIC	?allocate@?$allocator@Uop@@@std@@QEAAPEAUop@@_K@Z ; std::allocator<op>::allocate
PUBLIC	?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@Uop@@@std@@@std@@SA?AV?$allocator@Uop@@@2@AEBV32@@Z ; std::_Default_allocator_traits<std::allocator<op> >::select_on_container_copy_construction
PUBLIC	??0?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@AEBV01@@Z ; std::vector<op,std::allocator<op> >::vector<op,std::allocator<op> >
PUBLIC	??1?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@XZ ; std::vector<op,std::allocator<op> >::~vector<op,std::allocator<op> >
PUBLIC	?_Unchecked_begin@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAAPEAUop@@XZ ; std::vector<op,std::allocator<op> >::_Unchecked_begin
PUBLIC	?_Unchecked_end@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAAPEAUop@@XZ ; std::vector<op,std::allocator<op> >::_Unchecked_end
PUBLIC	?size@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEBA_KXZ ; std::vector<op,std::allocator<op> >::size
PUBLIC	??A?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAAAEAUop@@_K@Z ; std::vector<op,std::allocator<op> >::operator[]
PUBLIC	?_Destroy@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@AEAAXPEAUop@@0@Z ; std::vector<op,std::allocator<op> >::_Destroy
PUBLIC	?_Buy_raw@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@AEAAX_K@Z ; std::vector<op,std::allocator<op> >::_Buy_raw
PUBLIC	?_Tidy@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@AEAAXXZ ; std::vector<op,std::allocator<op> >::_Tidy
PUBLIC	?_Getal@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@AEAAAEAV?$allocator@Uop@@@2@XZ ; std::vector<op,std::allocator<op> >::_Getal
PUBLIC	?_Getal@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@AEBAAEBV?$allocator@Uop@@@2@XZ ; std::vector<op,std::allocator<op> >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@Uop@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<op> >::_Vector_val<std::_Simple_types<op> >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@Uop@@@std@@V?$_Vector_val@U?$_Simple_types@Uop@@@std@@@2@$00@std@@QEAAAEAV?$allocator@Uop@@@2@XZ ; std::_Compressed_pair<std::allocator<op>,std::_Vector_val<std::_Simple_types<op> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@Uop@@@std@@V?$_Vector_val@U?$_Simple_types@Uop@@@std@@@2@$00@std@@QEBAAEBV?$allocator@Uop@@@2@XZ ; std::_Compressed_pair<std::allocator<op>,std::_Vector_val<std::_Simple_types<op> >,1>::_Get_first
PUBLIC	?__autoclassinit2@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAAX_K@Z ; std::vector<op,std::allocator<op> >::__autoclassinit2
PUBLIC	?deallocate@?$allocator@Ubraket_group@@@std@@QEAAXQEAUbraket_group@@_K@Z ; std::allocator<braket_group>::deallocate
PUBLIC	??1?$vector@Ubraket_group@@V?$allocator@Ubraket_group@@@std@@@std@@QEAA@XZ ; std::vector<braket_group,std::allocator<braket_group> >::~vector<braket_group,std::allocator<braket_group> >
PUBLIC	?_Destroy@?$vector@Ubraket_group@@V?$allocator@Ubraket_group@@@std@@@std@@AEAAXPEAUbraket_group@@0@Z ; std::vector<braket_group,std::allocator<braket_group> >::_Destroy
PUBLIC	?_Tidy@?$vector@Ubraket_group@@V?$allocator@Ubraket_group@@@std@@@std@@AEAAXXZ ; std::vector<braket_group,std::allocator<braket_group> >::_Tidy
PUBLIC	?_Getal@?$vector@Ubraket_group@@V?$allocator@Ubraket_group@@@std@@@std@@AEAAAEAV?$allocator@Ubraket_group@@@2@XZ ; std::vector<braket_group,std::allocator<braket_group> >::_Getal
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@Ubraket_group@@@std@@V?$_Vector_val@U?$_Simple_types@Ubraket_group@@@std@@@2@$00@std@@QEAAAEAV?$allocator@Ubraket_group@@@2@XZ ; std::_Compressed_pair<std::allocator<braket_group>,std::_Vector_val<std::_Simple_types<braket_group> >,1>::_Get_first
PUBLIC	??1expression@@QEAA@XZ				; expression::~expression
PUBLIC	?__autoclassinit2@expression@@QEAAX_K@Z		; expression::__autoclassinit2
PUBLIC	??0token@@QEAA@XZ				; token::token
PUBLIC	??1token@@QEAA@XZ				; token::~token
PUBLIC	?add@token@@QEAAXD@Z				; token::add
PUBLIC	?readString@token@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; token::readString
PUBLIC	?length@token@@QEBA_KXZ				; token::length
PUBLIC	?reset@token@@QEAAXXZ				; token::reset
PUBLIC	?__autoclassinit2@token@@QEAAX_K@Z		; token::__autoclassinit2
PUBLIC	?__autoclassinit2@node@@QEAAX_K@Z		; node::__autoclassinit2
PUBLIC	??_Gnode@@QEAAPEAXI@Z				; node::`scalar deleting destructor'
PUBLIC	??0?$allocator@PEAVnode@@@std@@QEAA@XZ		; std::allocator<node *>::allocator<node *>
PUBLIC	?deallocate@?$allocator@PEAVnode@@@std@@QEAAXQEAPEAVnode@@_K@Z ; std::allocator<node *>::deallocate
PUBLIC	?allocate@?$allocator@PEAVnode@@@std@@QEAAPEAPEAVnode@@_K@Z ; std::allocator<node *>::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@PEAVnode@@@std@@@std@@SA_KAEBV?$allocator@PEAVnode@@@2@@Z ; std::_Default_allocator_traits<std::allocator<node *> >::max_size
PUBLIC	??0?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAA@XZ ; std::vector<node *,std::allocator<node *> >::vector<node *,std::allocator<node *> >
PUBLIC	??1?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAA@XZ ; std::vector<node *,std::allocator<node *> >::~vector<node *,std::allocator<node *> >
PUBLIC	?push_back@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAXAEBQEAVnode@@@Z ; std::vector<node *,std::allocator<node *> >::push_back
PUBLIC	?clear@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAXXZ ; std::vector<node *,std::allocator<node *> >::clear
PUBLIC	?_Unchecked_begin@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAPEAPEAVnode@@XZ ; std::vector<node *,std::allocator<node *> >::_Unchecked_begin
PUBLIC	?_Unchecked_end@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAPEAPEAVnode@@XZ ; std::vector<node *,std::allocator<node *> >::_Unchecked_end
PUBLIC	?max_size@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEBA_KXZ ; std::vector<node *,std::allocator<node *> >::max_size
PUBLIC	?capacity@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEBA_KXZ ; std::vector<node *,std::allocator<node *> >::capacity
PUBLIC	?front@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAAEAPEAVnode@@XZ ; std::vector<node *,std::allocator<node *> >::front
PUBLIC	?_Umove@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAPEAPEAVnode@@PEAPEAV3@00@Z ; std::vector<node *,std::allocator<node *> >::_Umove
PUBLIC	?_Umove_if_noexcept1@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAXPEAPEAVnode@@00U?$integral_constant@_N$00@2@@Z ; std::vector<node *,std::allocator<node *> >::_Umove_if_noexcept1
PUBLIC	?_Umove_if_noexcept@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAXPEAPEAVnode@@00@Z ; std::vector<node *,std::allocator<node *> >::_Umove_if_noexcept
PUBLIC	?_Destroy@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAXPEAPEAVnode@@0@Z ; std::vector<node *,std::allocator<node *> >::_Destroy
PUBLIC	?_Calculate_growth@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEBA_K_K@Z ; std::vector<node *,std::allocator<node *> >::_Calculate_growth
PUBLIC	?_Change_array@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAXQEAPEAVnode@@_K1@Z ; std::vector<node *,std::allocator<node *> >::_Change_array
PUBLIC	?_Tidy@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAXXZ ; std::vector<node *,std::allocator<node *> >::_Tidy
PUBLIC	?_Xlength@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@CAXXZ ; std::vector<node *,std::allocator<node *> >::_Xlength
PUBLIC	?_Orphan_range_unlocked@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEBAXPEAPEAVnode@@0@Z ; std::vector<node *,std::allocator<node *> >::_Orphan_range_unlocked
PUBLIC	?_Orphan_range_locked@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEBAXPEAPEAVnode@@0@Z ; std::vector<node *,std::allocator<node *> >::_Orphan_range_locked
PUBLIC	?_Orphan_range@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEBAXPEAPEAVnode@@0@Z ; std::vector<node *,std::allocator<node *> >::_Orphan_range
PUBLIC	?_Getal@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAAEAV?$allocator@PEAVnode@@@2@XZ ; std::vector<node *,std::allocator<node *> >::_Getal
PUBLIC	?_Getal@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEBAAEBV?$allocator@PEAVnode@@@2@XZ ; std::vector<node *,std::allocator<node *> >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@PEAVnode@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<node *> >::_Vector_val<std::_Simple_types<node *> >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@PEAVnode@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVnode@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAVnode@@@2@XZ ; std::_Compressed_pair<std::allocator<node *>,std::_Vector_val<std::_Simple_types<node *> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@PEAVnode@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVnode@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAVnode@@@2@XZ ; std::_Compressed_pair<std::allocator<node *>,std::_Vector_val<std::_Simple_types<node *> >,1>::_Get_first
PUBLIC	?getNodeByNumber@binary_tree@@QEAAPEAVnode@@H@Z	; binary_tree::getNodeByNumber
PUBLIC	??1binary_tree@@QEAA@XZ				; binary_tree::~binary_tree
PUBLIC	??0binary_tree@@QEAA@XZ				; binary_tree::binary_tree
PUBLIC	??0tree_builder@@QEAA@PEAVexpression@@@Z	; tree_builder::tree_builder
PUBLIC	?generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ; tree_builder::generate_random_tree
PUBLIC	?randomDouble@tree_builder@@QEAANNN@Z		; tree_builder::randomDouble
PUBLIC	?getrand@tree_builder@@QEAAH_K@Z		; tree_builder::getrand
PUBLIC	?createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z ; tree_builder::createLeftRightNodes
PUBLIC	?print_node@tree_builder@@QEAAXPEAVnode@@@Z	; tree_builder::print_node
PUBLIC	?print_tree@tree_builder@@QEAAXXZ		; tree_builder::print_tree
PUBLIC	?to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; tree_builder::to_string
PUBLIC	?random_to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; tree_builder::random_to_string
PUBLIC	?get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; tree_builder::get_string
PUBLIC	?findMaxIndex@tree_builder@@QEAAHV?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@HHH@Z ; tree_builder::findMaxIndex
PUBLIC	?addLeft@tree_builder@@QEAAXPEAVnode@@H@Z	; tree_builder::addLeft
PUBLIC	?addRight@tree_builder@@QEAAXPEAVnode@@HH@Z	; tree_builder::addRight
PUBLIC	?build@tree_builder@@QEAAXXZ			; tree_builder::build
PUBLIC	?performOperation@tree_builder@@QEAANUop@@NN@Z	; tree_builder::performOperation
PUBLIC	?calcNode@tree_builder@@QEAANPEAVnode@@@Z	; tree_builder::calcNode
PUBLIC	?calc@tree_builder@@QEAANNNN@Z			; tree_builder::calc
PUBLIC	??1tree_builder@@QEAA@XZ			; tree_builder::~tree_builder
PUBLIC	?__autoclassinit2@tree_builder@@QEAAX_K@Z	; tree_builder::__autoclassinit2
PUBLIC	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
PUBLIC	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBDAEBV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?isTokenizable@@YA_ND@Z				; isTokenizable
PUBLIC	?IsSupportedVariableName@@YA_ND@Z		; IsSupportedVariableName
PUBLIC	?setPrev@@YA_NDPEAD@Z				; setPrev
PUBLIC	?IsOperator@@YA_ND@Z				; IsOperator
PUBLIC	main
PUBLIC	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
PUBLIC	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
PUBLIC	??$emplace_back@AEBQEAVnode@@@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAA?A_TAEBQEAVnode@@@Z ; std::vector<node *,std::allocator<node *> >::emplace_back<node * const &>
PUBLIC	??$forward@AEBQEAVnode@@@std@@YAAEBQEAVnode@@AEBQEAV1@@Z ; std::forward<node * const &>
PUBLIC	??$_Emplace_back_with_unused_capacity@AEBQEAVnode@@@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAA?A_TAEBQEAVnode@@@Z ; std::vector<node *,std::allocator<node *> >::_Emplace_back_with_unused_capacity<node * const &>
PUBLIC	??$_Unfancy@PEAVnode@@@std@@YAPEAPEAVnode@@PEAPEAV1@@Z ; std::_Unfancy<node *>
PUBLIC	??$construct@PEAVnode@@AEBQEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVnode@@@std@@@std@@SAXAEAV?$allocator@PEAVnode@@@1@QEAPEAVnode@@AEBQEAV3@@Z ; std::_Default_allocator_traits<std::allocator<node *> >::construct<node *,node * const &>
PUBLIC	??$_Emplace_reallocate@AEBQEAVnode@@@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAPEAPEAVnode@@QEAPEAV2@AEBQEAV2@@Z ; std::vector<node *,std::allocator<node *> >::_Emplace_reallocate<node * const &>
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	??$?0PEAVnode@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAVnode@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><node *>
PUBLIC	??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
PUBLIC	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@PEAVnode@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVnode@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<node *>,std::_Vector_val<std::_Simple_types<node *> >,1>::_Compressed_pair<std::allocator<node *>,std::_Vector_val<std::_Simple_types<node *> >,1><>
PUBLIC	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
PUBLIC	??$?0Ubraket_group@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@Ubraket_group@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><braket_group>
PUBLIC	??$?0Uop@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@Uop@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><op>
PUBLIC	??$?0V?$allocator@Uop@@@std@@$$V@?$_Compressed_pair@V?$allocator@Uop@@@std@@V?$_Vector_val@U?$_Simple_types@Uop@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@Uop@@@1@@Z ; std::_Compressed_pair<std::allocator<op>,std::_Vector_val<std::_Simple_types<op> >,1>::_Compressed_pair<std::allocator<op>,std::_Vector_val<std::_Simple_types<op> >,1><std::allocator<op> >
PUBLIC	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
PUBLIC	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
PUBLIC	??1?$_Tidy_guard@V?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<op,std::allocator<op> > >::~_Tidy_guard<std::vector<op,std::allocator<op> > >
PUBLIC	??$_Ucopy@PEAUop@@@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@AEAAPEAUop@@PEAU2@00@Z ; std::vector<op,std::allocator<op> >::_Ucopy<op *>
PUBLIC	??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
PUBLIC	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
PUBLIC	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
PUBLIC	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
PUBLIC	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
PUBLIC	??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
PUBLIC	??$min@_K@std@@YAAEB_KAEB_K0@Z			; std::min<unsigned __int64>
PUBLIC	??$_Traits_compare@U?$char_traits@D@std@@@std@@YAHQEBD_K01@Z ; std::_Traits_compare<std::char_traits<char> >
PUBLIC	??$addressof@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@@Z ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
PUBLIC	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
PUBLIC	??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ; std::move<std::allocator<char> &>
PUBLIC	??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
PUBLIC	??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
PUBLIC	??$_Destroy_range@V?$allocator@PEAVnode@@@std@@@std@@YAXPEAPEAVnode@@QEAPEAV1@AEAV?$allocator@PEAVnode@@@0@@Z ; std::_Destroy_range<std::allocator<node *> >
PUBLIC	??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z	; std::_Destroy_in_place<char *>
PUBLIC	??R<lambda_138c3d7c38c85abb84c7fc7bfe5747b7>@@QEBA@QEAD_KD@Z ; <lambda_138c3d7c38c85abb84c7fc7bfe5747b7>::operator()
PUBLIC	??$_Reallocate_for@V<lambda_138c3d7c38c85abb84c7fc7bfe5747b7>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_138c3d7c38c85abb84c7fc7bfe5747b7>@@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_138c3d7c38c85abb84c7fc7bfe5747b7>,char>
PUBLIC	??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBA@QEAD_KQEBD@Z ; <lambda_66f57f934f28d61049862f64df852ff0>::operator()
PUBLIC	??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
PUBLIC	??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBA@QEADQEBD_K12@Z ; <lambda_65e615be2a453ca0576c979606f46740>::operator()
PUBLIC	??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>
PUBLIC	??$_Pocca@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@AEBV10@@Z ; std::_Pocca<std::allocator<char> >
PUBLIC	??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>
PUBLIC	??$_Unfancy@D@std@@YAPEADPEAD@Z			; std::_Unfancy<char>
PUBLIC	??$_Construct_in_place@PEADAEAPEAD@std@@YAXAEAPEAD0@Z ; std::_Construct_in_place<char *,char * &>
PUBLIC	??$_Pocma@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@0@Z ; std::_Pocma<std::allocator<char> >
PUBLIC	??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> const &>
PUBLIC	??$max@_K@std@@YAAEB_KAEB_K0@Z			; std::max<unsigned __int64>
PUBLIC	??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z		; std::_Get_size_of_n<16>
PUBLIC	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>
PUBLIC	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z	; std::_Deallocate<16,0>
PUBLIC	??$_Destroy_range@V?$allocator@Ubraket_group@@@std@@@std@@YAXPEAUbraket_group@@QEAU1@AEAV?$allocator@Ubraket_group@@@0@@Z ; std::_Destroy_range<std::allocator<braket_group> >
PUBLIC	??$_Destroy_range@V?$allocator@Uop@@@std@@@std@@YAXPEAUop@@QEAU1@AEAV?$allocator@Uop@@@0@@Z ; std::_Destroy_range<std::allocator<op> >
PUBLIC	??$_Get_size_of_n@$0DA@@std@@YA_K_K@Z		; std::_Get_size_of_n<48>
PUBLIC	??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > >
PUBLIC	??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > const >
PUBLIC	??$_Get_size_of_n@$00@std@@YA_K_K@Z		; std::_Get_size_of_n<1>
PUBLIC	??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
PUBLIC	??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z ; std::_Voidify_iter<std::_Container_proxy *>
PUBLIC	??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ; std::forward<std::_Container_base12 *>
PUBLIC	??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z ; std::_Insert_string<char,std::char_traits<char>,unsigned __int64>
PUBLIC	??$_Voidify_iter@PEAPEAVnode@@@std@@YAPEAXPEAPEAVnode@@@Z ; std::_Voidify_iter<node * *>
PUBLIC	??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
PUBLIC	??$forward@V?$allocator@Uop@@@std@@@std@@YA$$QEAV?$allocator@Uop@@@0@AEAV10@@Z ; std::forward<std::allocator<op> >
PUBLIC	??$_Uninitialized_copy@PEAUop@@V?$allocator@Uop@@@std@@@std@@YAPEAUop@@QEAU1@0PEAU1@AEAV?$allocator@Uop@@@0@@Z ; std::_Uninitialized_copy<op *,std::allocator<op> >
PUBLIC	??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ; std::forward<std::allocator<char> >
PUBLIC	??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z	; std::addressof<char *>
PUBLIC	??$_Voidify_iter@PEAPEAD@std@@YAPEAXPEAPEAD@Z	; std::_Voidify_iter<char * *>
PUBLIC	??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z	; std::forward<char * const &>
PUBLIC	??$forward@AEAPEAD@std@@YAAEAPEADAEAPEAD@Z	; std::forward<char * &>
PUBLIC	??$forward@AEBV?$allocator@D@std@@@std@@YAAEBV?$allocator@D@0@AEBV10@@Z ; std::forward<std::allocator<char> const &>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??$_Unfancy@Uop@@@std@@YAPEAUop@@PEAU1@@Z	; std::_Unfancy<op>
PUBLIC	??$destroy@Uop@@@?$_Default_allocator_traits@V?$allocator@Uop@@@std@@@std@@SAXAEAV?$allocator@Uop@@@1@QEAUop@@@Z ; std::_Default_allocator_traits<std::allocator<op> >::destroy<op>
PUBLIC	??$_Unfancy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@@Z ; std::_Unfancy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Default_allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$_Uninitialized_move@PEAPEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@YAPEAPEAVnode@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVnode@@@0@@Z ; std::_Uninitialized_move<node * *,std::allocator<node *> >
PUBLIC	??$_Get_size_of_n@$07@std@@YA_K_K@Z		; std::_Get_size_of_n<8>
PUBLIC	??$?0AEAV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEAV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> &>
PUBLIC	??$_Allocators_equal@V?$allocator@D@std@@@std@@YA_NAEBV?$allocator@D@0@0@Z ; std::_Allocators_equal<std::allocator<char> >
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
PUBLIC	??$_Get_unwrapped@AEBQEAUop@@@std@@YA?A_TAEBQEAUop@@@Z ; std::_Get_unwrapped<op * const &>
PUBLIC	??0?$_Uninitialized_backout_al@V?$allocator@Uop@@@std@@@std@@QEAA@PEAUop@@AEAV?$allocator@Uop@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<op> >::_Uninitialized_backout_al<std::allocator<op> >
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@Uop@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<op> >::~_Uninitialized_backout_al<std::allocator<op> >
PUBLIC	?_Release@?$_Uninitialized_backout_al@V?$allocator@Uop@@@std@@@std@@QEAAPEAUop@@XZ ; std::_Uninitialized_backout_al<std::allocator<op> >::_Release
PUBLIC	?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@Uop@@@std@@@std@@QEAAX_K@Z ; std::_Uninitialized_backout_al<std::allocator<op> >::__autoclassinit2
PUBLIC	??$_Emplace_back@AEAUop@@@?$_Uninitialized_backout_al@V?$allocator@Uop@@@std@@@std@@QEAAXAEAUop@@@Z ; std::_Uninitialized_backout_al<std::allocator<op> >::_Emplace_back<op &>
PUBLIC	??$_Get_unwrapped@AEBQEAPEAVnode@@@std@@YA?A_TAEBQEAPEAVnode@@@Z ; std::_Get_unwrapped<node * * const &>
PUBLIC	??$move@AEAPEAVnode@@@std@@YA$$QEAPEAVnode@@AEAPEAV1@@Z ; std::move<node * &>
PUBLIC	??$_Copy_memmove@PEAPEAVnode@@PEAPEAV1@@std@@YAPEAPEAVnode@@PEAPEAV1@00@Z ; std::_Copy_memmove<node * *,node * *>
PUBLIC	??0?$_Uninitialized_backout_al@V?$allocator@PEAVnode@@@std@@@std@@QEAA@PEAPEAVnode@@AEAV?$allocator@PEAVnode@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<node *> >::_Uninitialized_backout_al<std::allocator<node *> >
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@PEAVnode@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<node *> >::~_Uninitialized_backout_al<std::allocator<node *> >
PUBLIC	?_Release@?$_Uninitialized_backout_al@V?$allocator@PEAVnode@@@std@@@std@@QEAAPEAPEAVnode@@XZ ; std::_Uninitialized_backout_al<std::allocator<node *> >::_Release
PUBLIC	?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@PEAVnode@@@std@@@std@@QEAAX_K@Z ; std::_Uninitialized_backout_al<std::allocator<node *> >::__autoclassinit2
PUBLIC	??$_Emplace_back@PEAVnode@@@?$_Uninitialized_backout_al@V?$allocator@PEAVnode@@@std@@@std@@QEAAX$$QEAPEAVnode@@@Z ; std::_Uninitialized_backout_al<std::allocator<node *> >::_Emplace_back<node *>
PUBLIC	??$forward@AEAV?$allocator@D@std@@@std@@YAAEAV?$allocator@D@0@AEAV10@@Z ; std::forward<std::allocator<char> &>
PUBLIC	??$forward@AEAUop@@@std@@YAAEAUop@@AEAU1@@Z	; std::forward<op &>
PUBLIC	??$construct@Uop@@AEAU1@@?$_Default_allocator_traits@V?$allocator@Uop@@@std@@@std@@SAXAEAV?$allocator@Uop@@@1@QEAUop@@AEAU3@@Z ; std::_Default_allocator_traits<std::allocator<op> >::construct<op,op &>
PUBLIC	??$_To_address@PEAPEAVnode@@@std@@YA?A_PAEBQEAPEAVnode@@@Z ; std::_To_address<node * *>
PUBLIC	??$forward@PEAVnode@@@std@@YA$$QEAPEAVnode@@AEAPEAV1@@Z ; std::forward<node *>
PUBLIC	??$construct@PEAVnode@@PEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVnode@@@std@@@std@@SAXAEAV?$allocator@PEAVnode@@@1@QEAPEAVnode@@$$QEAPEAV3@@Z ; std::_Default_allocator_traits<std::allocator<node *> >::construct<node *,node *>
PUBLIC	??$_Voidify_iter@PEAUop@@@std@@YAPEAXPEAUop@@@Z	; std::_Voidify_iter<op *>
PUBLIC	__JustMyCode_Default
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	_TI3?AVbad_array_new_length@std@@
PUBLIC	_CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
PUBLIC	?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA ; `std::_Adjust_manually_vector_aligned'::`1'::__LINE__Var
PUBLIC	??_C@_0BB@FCMFBGOM@invalid?5argument@		; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	??_C@_0GI@MNEMJBML@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1NA@MJBOBEJL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@ ; `string'
PUBLIC	??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ ; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long@		; `string'
PUBLIC	?_BUF_SIZE@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0_KB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_BUF_SIZE
PUBLIC	??_C@_00CNPNBAHC@@				; `string'
PUBLIC	??_C@_02NJPGOMH@?$CFf@				; `string'
PUBLIC	??_C@_01PKGAHCOL@?$CJ@				; `string'
PUBLIC	??_C@_01CLKCMJKC@?5@				; `string'
PUBLIC	??_C@_01ODHLEDKK@?$CI@				; `string'
PUBLIC	_TI2PEAVexception@std@@
PUBLIC	_CTA2PEAVexception@std@@
PUBLIC	??_R0PEAVexception@std@@@8			; std::exception * `RTTI Type Descriptor'
PUBLIC	_CT??_R0PEAVexception@std@@@88
PUBLIC	??_R0PEAX@8					; void * `RTTI Type Descriptor'
PUBLIC	_CT??_R0PEAX@88
PUBLIC	??_C@_0CJ@CHLOGLPG@undefined?5operator?5in?5performOp@ ; `string'
PUBLIC	??_C@_01FJMABOPO@x@				; `string'
PUBLIC	??_C@_01EANLCPLP@y@				; `string'
PUBLIC	??_C@_01GLPGHMHM@z@				; `string'
PUBLIC	??_C@_0EP@FLJIJNCO@?$CI45?445?5?9?5x?5?$FO?5?92?$CJ?5?$CK?5?94563?445?5?9?5y@ ; `string'
PUBLIC	??_C@_0BJ@GBABLGIM@unexpected?5variable?5name@	; `string'
PUBLIC	??_C@_0L@GKOFOFEA@?6Numbers?3?6@		; `string'
PUBLIC	??_C@_0N@ELNFFMMN@?6Operators?3?6@		; `string'
PUBLIC	??_C@_0L@OPDGNCOI@?6Brackets?6@			; `string'
PUBLIC	??_C@_07BEFECKPA@?6Tree?3?6@			; `string'
PUBLIC	??_C@_0BB@NNEFPPLJ@?6Tree?5to?5string?6@	; `string'
PUBLIC	??_C@_0L@JILAODGG@?6Results?3?6@		; `string'
PUBLIC	??_C@_0DK@DDLKBKO@?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD@ ; `string'
PUBLIC	??_C@_0BI@MLCIECCN@Generating?5random?5tree?6@	; `string'
PUBLIC	??_C@_04FOMPHDMB@?$CK?1?$CL?9@			; `string'
PUBLIC	??_C@_0BB@GEDOGCLG@?6random?5result?3?5@	; `string'
PUBLIC	??_C@_0BP@KGLJJIBC@front?$CI?$CJ?5called?5on?5empty?5vector@ ; `string'
PUBLIC	??_C@_0GH@KMHDIFOI@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1MO@NOHEJINP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1IK@COOKACPM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa@ ; `string'
PUBLIC	??_C@_1EC@GDGFILAB@?$AA?$CC?$AAf?$AAr?$AAo?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAc?$AAa?$AAl?$AAl?$AAe?$AAd@ ; `string'
PUBLIC	??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@ ; `string'
PUBLIC	??_C@_1IK@LEEOEPLD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr@ ; `string'
PUBLIC	??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@ ; `string'
PUBLIC	??_C@_1BME@NCIPHHDN@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa@ ; `string'
PUBLIC	??_C@_0BO@LFGPDMIB@string?5subscript?5out?5of?5range@ ; `string'
PUBLIC	??_C@_0GI@DEIBJNCC@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1NA@CHJCONEK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1EA@OADAPGGK@?$AA?$CC?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@ ; `string'
PUBLIC	??_C@_1LO@NPPEKPAI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAb?$AAa?$AAs?$AAi?$AAc?$AA_?$AAs?$AAt?$AAr?$AAi@ ; `string'
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position@	; `string'
PUBLIC	??_C@_0PC@KBJGOMJG@You?5cannot?5concatenate?5the?5same@ ; `string'
PUBLIC	??_C@_1CA@DFIMIFBJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAo?$AAp?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AA?$CL@ ; `string'
PUBLIC	??_C@_1BPK@IDOEFEOL@?$AA?$CC?$AAY?$AAo?$AAu?$AA?5?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAc?$AAo?$AAn@ ; `string'
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	??_C@_1EO@GFNCMDLA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA_@ ; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@4000000000000000
PUBLIC	__real@4010000000000000
PUBLIC	__real@4014000000000000
PUBLIC	__real@4059000000000000
PUBLIC	__real@40dfffc000000000
PUBLIC	__real@c059000000000000
EXTRN	??2@YAPEAX_K@Z:PROC				; operator new
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	??_U@YAPEAX_K@Z:PROC				; operator new[]
EXTRN	??_V@YAXPEAX@Z:PROC				; operator delete[]
EXTRN	__imp__invalid_parameter:PROC
EXTRN	__imp__CrtDbgReport:PROC
EXTRN	__imp_??0_Lockit@std@@QEAA@H@Z:PROC
EXTRN	__imp_??1_Lockit@std@@QEAA@XZ:PROC
EXTRN	pow:PROC
EXTRN	__imp_atof:PROC
EXTRN	__imp_srand:PROC
EXTRN	__imp_rand:PROC
EXTRN	__imp___stdio_common_vsprintf:PROC
EXTRN	__imp___stdio_common_vsprintf_s:PROC
EXTRN	memcmp:PROC
EXTRN	memcpy:PROC
EXTRN	memmove:PROC
EXTRN	memset:PROC
EXTRN	strlen:PROC
EXTRN	?_Xlength_error@std@@YAXPEBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPEBD@Z:PROC		; std::_Xout_of_range
EXTRN	?uncaught_exception@std@@YA_NXZ:PROC		; std::uncaught_exception
EXTRN	__std_exception_copy:PROC
EXTRN	__std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UEAAPEAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UEAAPEAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UEAAPEAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	__imp__time64:PROC
EXTRN	__imp_isdigit:PROC
EXTRN	__imp_?good@ios_base@std@@QEBA_NXZ:PROC
EXTRN	__imp_?flags@ios_base@std@@QEBAHXZ:PROC
EXTRN	__imp_?setf@ios_base@std@@QEAAHHH@Z:PROC
EXTRN	__imp_?width@ios_base@std@@QEBA_JXZ:PROC
EXTRN	__imp_?width@ios_base@std@@QEAA_J_J@Z:PROC
EXTRN	__imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z:PROC
EXTRN	__imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z:PROC
EXTRN	__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z:PROC
EXTRN	__imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ:PROC
EXTRN	__imp_?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z:PROC
EXTRN	__imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@N@Z:PROC
EXTRN	__imp_?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z:PROC
EXTRN	__imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ:PROC
EXTRN	??0expression@@QEAA@XZ:PROC			; expression::expression
EXTRN	?getOperators@expression@@QEAA?AV?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@XZ:PROC ; expression::getOperators
EXTRN	?getNumbers@expression@@QEAA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ:PROC ; expression::getNumbers
EXTRN	?addNumber@expression@@QEAAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:PROC ; expression::addNumber
EXTRN	?addOperator@expression@@QEAAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:PROC ; expression::addOperator
EXTRN	?openBraket@expression@@QEAAXXZ:PROC		; expression::openBraket
EXTRN	?closeBraket@expression@@QEAAXXZ:PROC		; expression::closeBraket
EXTRN	?print_numbers@expression@@QEBAXXZ:PROC		; expression::print_numbers
EXTRN	?print_operators@expression@@QEBAXXZ:PROC	; expression::print_operators
EXTRN	?print_brakets@expression@@QEBAXXZ:PROC		; expression::print_brakets
EXTRN	??0node@@QEAA@Uop@@@Z:PROC			; node::node
EXTRN	??0node@@QEAA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:PROC ; node::node
EXTRN	??1node@@QEAA@XZ:PROC				; node::~node
EXTRN	?isOperator@node@@QEBA_NXZ:PROC			; node::isOperator
EXTRN	?IsConstant@node@@QEBA_NXZ:PROC			; node::IsConstant
EXTRN	?getOperatorNumber@node@@QEBAHXZ:PROC		; node::getOperatorNumber
EXTRN	?getOperator@node@@QEBA?AUop@@XZ:PROC		; node::getOperator
EXTRN	?getConstant@node@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ:PROC ; node::getConstant
EXTRN	_CxxThrowException:PROC
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CheckForDebuggerJustMyCode:PROC
EXTRN	__CxxFrameHandler4:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__GSHandlerCheck_EH4:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
EXTRN	__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A:BYTE
EXTRN	__ImageBase:BYTE
EXTRN	__security_cookie:QWORD
EXTRN	_fltused:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??2@YAPEAX_KPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??2@YAPEAX_KPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$__local_stdio_printf_options DD imagerel $LN3
	DD	imagerel $LN3+44
	DD	imagerel $unwind$__local_stdio_printf_options
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vsprintf_s_l DD imagerel $LN5
	DD	imagerel $LN5+151
	DD	imagerel $unwind$_vsprintf_s_l
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vscprintf_l DD imagerel $LN5
	DD	imagerel $LN5+144
	DD	imagerel $unwind$_vscprintf_l
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$sprintf_s DD imagerel $LN3
	DD	imagerel $LN3+196
	DD	imagerel $unwind$sprintf_s
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_scprintf DD imagerel $LN3
	DD	imagerel $LN3+176
	DD	imagerel $unwind$_scprintf
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@QEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+210
	DD	imagerel $unwind$??0exception@std@@QEAA@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@QEBDH@Z DD imagerel $LN3
	DD	imagerel $LN3+116
	DD	imagerel $unwind$??0exception@std@@QEAA@QEBDH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+123
	DD	imagerel $unwind$??0exception@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1exception@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$??1exception@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?what@exception@std@@UEBAPEBDXZ DD imagerel $LN5
	DD	imagerel $LN5+96
	DD	imagerel $unwind$?what@exception@std@@UEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gexception@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+82
	DD	imagerel $unwind$??_Gexception@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@AEAA@QEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+95
	DD	imagerel $unwind$??0bad_alloc@std@@AEAA@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_alloc@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$??1bad_alloc@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_alloc@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+82
	DD	imagerel $unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_array_new_length@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$??1bad_array_new_length@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+82
	DD	imagerel $unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Throw_bad_array_new_length@std@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$?_Throw_bad_array_new_length@std@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max@?$numeric_limits@_J@std@@SA_JXZ DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$?max@?$numeric_limits@_J@std@@SA_JXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD imagerel $LN21
	DD	imagerel $LN21+453
	DD	imagerel $unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Convert_size@_K@std@@YA_K_K@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$_Convert_size@_K@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+85
	DD	imagerel $unwind$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Container_base12@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$??0_Container_base12@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ DD imagerel $LN7
	DD	imagerel $LN7+138
	DD	imagerel $unwind$?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Swap_proxy_and_iterators_unlocked@_Container_base12@std@@AEAAXAEAU12@@Z DD imagerel $LN5
	DD	imagerel $LN5+160
	DD	imagerel $unwind$?_Swap_proxy_and_iterators_unlocked@_Container_base12@std@@AEAAXAEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+151
	DD	imagerel $unwind$?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Swap_proxy_and_iterators_locked@_Container_base12@std@@AEAAXAEAU12@@Z DD imagerel $LN3
	DD	imagerel $LN3+163
	DD	imagerel $unwind$?_Swap_proxy_and_iterators_locked@_Container_base12@std@@AEAAXAEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+55
	DD	imagerel $unwind$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Basic_container_proxy_ptr12@std@@IEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$??0_Basic_container_proxy_ptr12@std@@IEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+113
	DD	imagerel $unwind$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?move@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$?move@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$_Narrow_char_traits@DH@std@@SAPEADQEAD_KD@Z DD imagerel $LN3
	DD	imagerel $LN3+79
	DD	imagerel $unwind$?assign@?$_Narrow_char_traits@DH@std@@SAPEADQEAD_KD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z DD imagerel $LN5
	DD	imagerel $LN5+95
	DD	imagerel $unwind$?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?eof@?$_Narrow_char_traits@DH@std@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$?eof@?$_Narrow_char_traits@DH@std@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlen_string@std@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Xlen_string@std@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@D@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??0?$allocator@D@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+66
	DD	imagerel $unwind$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+109
	DD	imagerel $unwind$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ DD imagerel $LN4
	DD	imagerel $LN4+99
	DD	imagerel $unwind$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ DD imagerel $LN4
	DD	imagerel $LN4+99
	DD	imagerel $unwind$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+84
	DD	imagerel $unwind$?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+71
	DD	imagerel $unwind$?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Check_offset_exclusive@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+71
	DD	imagerel $unwind$?_Check_offset_exclusive@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Clamp_suffix_size@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_K_K0@Z DD imagerel $LN3
	DD	imagerel $LN3+101
	DD	imagerel $unwind$?_Clamp_suffix_size@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_K_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z DD imagerel $LN5
	DD	imagerel $LN5+277
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA+36
	DD	imagerel $unwind$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+124
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z DD imagerel $LN5
	DD	imagerel $LN5+293
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z@4HA DD imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z@4HA
	DD	imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z@4HA+36
	DD	imagerel $unwind$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z DD imagerel $LN5
	DD	imagerel $LN5+262
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA DD imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
	DD	imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA+36
	DD	imagerel $unwind$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z DD imagerel $LN5
	DD	imagerel $LN5+275
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z@4HA DD imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z@4HA
	DD	imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z@4HA+36
	DD	imagerel $unwind$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+156
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z DD imagerel $LN8
	DD	imagerel $LN8+677
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z@4HA DD imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z@4HA
	DD	imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z@4HA+39
	DD	imagerel $unwind$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEAV01@1@Z DD imagerel $LN13
	DD	imagerel $LN13+1250
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEAV01@1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEAV01@1@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEAV01@1@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEAV01@1@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEAV01@1@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEAV01@1@Z@4HA DD imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEAV01@1@Z@4HA
	DD	imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEAV01@1@Z@4HA+39
	DD	imagerel $unwind$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEAV01@1@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Move_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+131
	DD	imagerel $unwind$?_Move_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+120
	DD	imagerel $unwind$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+111
	DD	imagerel $unwind$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z DD imagerel $LN7
	DD	imagerel $LN7+332
	DD	imagerel $unwind$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z DD imagerel $LN6
	DD	imagerel $LN6+480
	DD	imagerel $unwind$?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+214
	DD	imagerel $unwind$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Copy_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@U?$integral_constant@_N$0A@@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+141
	DD	imagerel $unwind$?_Copy_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@U?$integral_constant@_N$0A@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+120
	DD	imagerel $unwind$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD imagerel $LN4
	DD	imagerel $LN4+303
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+88
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K_K@Z DD imagerel $LN3
	DD	imagerel $LN3+158
	DD	imagerel $unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD imagerel $LN4
	DD	imagerel $LN4+232
	DD	imagerel $unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+88
	DD	imagerel $unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z DD imagerel $LN4
	DD	imagerel $LN4+234
	DD	imagerel $unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?at@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$?at@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z DD imagerel $LN12
	DD	imagerel $LN12+207
	DD	imagerel $unwind$??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+226
	DD	imagerel $unwind$?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z DD imagerel $LN5
	DD	imagerel $LN5+145
	DD	imagerel $unwind$?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAHQEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+113
	DD	imagerel $unwind$?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAHQEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z DD imagerel $LN5
	DD	imagerel $LN5+271
	DD	imagerel $unwind$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+116
	DD	imagerel $unwind$?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+232
	DD	imagerel $unwind$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+44
	DD	imagerel $unwind$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+82
	DD	imagerel $unwind$??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$time DD	imagerel time
	DD	imagerel time+54
	DD	imagerel $unwind$time
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?fixed@std@@YAAEAVios_base@1@AEAV21@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$?fixed@std@@YAAEAVios_base@1@AEAV21@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@N@Z DD imagerel $LN6
	DD	imagerel $LN6+293
	DD	imagerel $unwind$?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0op@@QEAA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD imagerel $LN5
	DD	imagerel $LN5+118
	DD	imagerel $unwind$??0op@@QEAA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0op@@QEAA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD imagerel ?dtor$0@?0???0op@@QEAA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DD	imagerel ?dtor$0@?0???0op@@QEAA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0op@@QEAA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0op@@QEAA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD imagerel ?dtor$1@?0???0op@@QEAA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DD	imagerel ?dtor$1@?0???0op@@QEAA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA+39
	DD	imagerel $unwind$?dtor$1@?0???0op@@QEAA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1op@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+44
	DD	imagerel $unwind$??1op@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0op@@QEAA@AEBU0@@Z DD imagerel $LN4
	DD	imagerel $LN4+83
	DD	imagerel $unwind$??0op@@QEAA@AEBU0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gop@@QEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+82
	DD	imagerel $unwind$??_Gop@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+203
	DD	imagerel $unwind$??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@_K@Z DD imagerel $LN12
	DD	imagerel $LN12+230
	DD	imagerel $unwind$??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z DD imagerel $LN3
	DD	imagerel $LN3+85
	DD	imagerel $unwind$?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+241
	DD	imagerel $unwind$?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$?__autoclassinit2@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@Uop@@@std@@QEAAXQEAUop@@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$?deallocate@?$allocator@Uop@@@std@@QEAAXQEAUop@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@Uop@@@std@@QEAAPEAUop@@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+66
	DD	imagerel $unwind$?allocate@?$allocator@Uop@@@std@@QEAAPEAUop@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@Uop@@@std@@@std@@SA?AV?$allocator@Uop@@@2@AEBV32@@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@Uop@@@std@@@std@@SA?AV?$allocator@Uop@@@2@AEBV32@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@AEBV01@@Z DD imagerel $LN6
	DD	imagerel $LN6+451
	DD	imagerel $unwind$??0?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?dtor$0@?0???0?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@AEBV01@@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?dtor$1@?0???0?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$1@?0???0?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@AEBV01@@Z@4HA+39
	DD	imagerel $unwind$?dtor$1@?0???0?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+203
	DD	imagerel $unwind$??1?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unchecked_begin@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAAPEAUop@@XZ DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$?_Unchecked_begin@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAAPEAUop@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unchecked_end@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAAPEAUop@@XZ DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$?_Unchecked_end@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAAPEAUop@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?size@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+81
	DD	imagerel $unwind$?size@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAAAEAUop@@_K@Z DD imagerel $LN12
	DD	imagerel $LN12+230
	DD	imagerel $unwind$??A?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAAAEAUop@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Destroy@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@AEAAXPEAUop@@0@Z DD imagerel $LN3
	DD	imagerel $LN3+85
	DD	imagerel $unwind$?_Destroy@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@AEAAXPEAUop@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_raw@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@AEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+183
	DD	imagerel $unwind$?_Buy_raw@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+241
	DD	imagerel $unwind$?_Tidy@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@AEAAAEAV?$allocator@Uop@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$?_Getal@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@AEAAAEAV?$allocator@Uop@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@AEBAAEBV?$allocator@Uop@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$?_Getal@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@AEBAAEBV?$allocator@Uop@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@Uop@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+105
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@Uop@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@Uop@@@std@@V?$_Vector_val@U?$_Simple_types@Uop@@@std@@@2@$00@std@@QEAAAEAV?$allocator@Uop@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@Uop@@@std@@V?$_Vector_val@U?$_Simple_types@Uop@@@std@@@2@$00@std@@QEAAAEAV?$allocator@Uop@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@Uop@@@std@@V?$_Vector_val@U?$_Simple_types@Uop@@@std@@@2@$00@std@@QEBAAEBV?$allocator@Uop@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@Uop@@@std@@V?$_Vector_val@U?$_Simple_types@Uop@@@std@@@2@$00@std@@QEBAAEBV?$allocator@Uop@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$?__autoclassinit2@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@Ubraket_group@@@std@@QEAAXQEAUbraket_group@@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?deallocate@?$allocator@Ubraket_group@@@std@@QEAAXQEAUbraket_group@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@Ubraket_group@@V?$allocator@Ubraket_group@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+203
	DD	imagerel $unwind$??1?$vector@Ubraket_group@@V?$allocator@Ubraket_group@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Destroy@?$vector@Ubraket_group@@V?$allocator@Ubraket_group@@@std@@@std@@AEAAXPEAUbraket_group@@0@Z DD imagerel $LN3
	DD	imagerel $LN3+85
	DD	imagerel $unwind$?_Destroy@?$vector@Ubraket_group@@V?$allocator@Ubraket_group@@@std@@@std@@AEAAXPEAUbraket_group@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@Ubraket_group@@V?$allocator@Ubraket_group@@@std@@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+231
	DD	imagerel $unwind$?_Tidy@?$vector@Ubraket_group@@V?$allocator@Ubraket_group@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@Ubraket_group@@V?$allocator@Ubraket_group@@@std@@@std@@AEAAAEAV?$allocator@Ubraket_group@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$?_Getal@?$vector@Ubraket_group@@V?$allocator@Ubraket_group@@@std@@@std@@AEAAAEAV?$allocator@Ubraket_group@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@Ubraket_group@@@std@@V?$_Vector_val@U?$_Simple_types@Ubraket_group@@@std@@@2@$00@std@@QEAAAEAV?$allocator@Ubraket_group@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@Ubraket_group@@@std@@V?$_Vector_val@U?$_Simple_types@Ubraket_group@@@std@@@2@$00@std@@QEAAAEAV?$allocator@Ubraket_group@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1expression@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+82
	DD	imagerel $unwind$??1expression@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@expression@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$?__autoclassinit2@expression@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0token@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+109
	DD	imagerel $unwind$??0token@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1token@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$??1token@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?add@token@@QEAAXD@Z DD imagerel $LN3
	DD	imagerel $LN3+115
	DD	imagerel $unwind$?add@token@@QEAAXD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?readString@token@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD imagerel $LN6
	DD	imagerel $LN6+201
	DD	imagerel $unwind$?readString@token@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@token@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$?length@token@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reset@token@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+100
	DD	imagerel $unwind$?reset@token@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@token@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$?__autoclassinit2@token@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@node@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$?__autoclassinit2@node@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gnode@@QEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+82
	DD	imagerel $unwind$??_Gnode@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@PEAVnode@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??0?$allocator@PEAVnode@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@PEAVnode@@@std@@QEAAXQEAPEAVnode@@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?deallocate@?$allocator@PEAVnode@@@std@@QEAAXQEAPEAVnode@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@PEAVnode@@@std@@QEAAPEAPEAVnode@@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+66
	DD	imagerel $unwind$?allocate@?$allocator@PEAVnode@@@std@@QEAAPEAPEAVnode@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@PEAVnode@@@std@@@std@@SA_KAEBV?$allocator@PEAVnode@@@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@PEAVnode@@@std@@@std@@SA_KAEBV?$allocator@PEAVnode@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+112
	DD	imagerel $unwind$??0?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+203
	DD	imagerel $unwind$??1?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push_back@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAXAEBQEAVnode@@@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$?push_back@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAXAEBQEAVnode@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+125
	DD	imagerel $unwind$?clear@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unchecked_begin@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAPEAPEAVnode@@XZ DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$?_Unchecked_begin@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAPEAPEAVnode@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unchecked_end@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAPEAPEAVnode@@XZ DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$?_Unchecked_end@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAPEAPEAVnode@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+102
	DD	imagerel $unwind$?max_size@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?capacity@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$?capacity@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?front@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAAEAPEAVnode@@XZ DD imagerel $LN12
	DD	imagerel $LN12+197
	DD	imagerel $unwind$?front@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAAEAPEAVnode@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Umove@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAPEAPEAVnode@@PEAPEAV3@00@Z DD imagerel $LN3
	DD	imagerel $LN3+97
	DD	imagerel $unwind$?_Umove@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAPEAPEAVnode@@PEAPEAV3@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Umove_if_noexcept1@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAXPEAPEAVnode@@00U?$integral_constant@_N$00@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+97
	DD	imagerel $unwind$?_Umove_if_noexcept1@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAXPEAPEAVnode@@00U?$integral_constant@_N$00@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Umove_if_noexcept@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAXPEAPEAVnode@@00@Z DD imagerel $LN3
	DD	imagerel $LN3+119
	DD	imagerel $unwind$?_Umove_if_noexcept@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAXPEAPEAVnode@@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Destroy@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAXPEAPEAVnode@@0@Z DD imagerel $LN3
	DD	imagerel $LN3+85
	DD	imagerel $unwind$?_Destroy@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAXPEAPEAVnode@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEBA_K_K@Z DD imagerel $LN5
	DD	imagerel $LN5+168
	DD	imagerel $unwind$?_Calculate_growth@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEBA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Change_array@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAXQEAPEAVnode@@_K1@Z DD imagerel $LN4
	DD	imagerel $LN4+277
	DD	imagerel $unwind$?_Change_array@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAXQEAPEAVnode@@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+231
	DD	imagerel $unwind$?_Tidy@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@CAXXZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Xlength@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range_unlocked@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEBAXPEAPEAVnode@@0@Z DD imagerel $LN8
	DD	imagerel $LN8+184
	DD	imagerel $unwind$?_Orphan_range_unlocked@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEBAXPEAPEAVnode@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range_locked@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEBAXPEAPEAVnode@@0@Z DD imagerel $LN4
	DD	imagerel $LN4+177
	DD	imagerel $unwind$?_Orphan_range_locked@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEBAXPEAPEAVnode@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Orphan_range_locked@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEBAXPEAPEAVnode@@0@Z@4HA DD imagerel ?dtor$0@?0??_Orphan_range_locked@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEBAXPEAPEAVnode@@0@Z@4HA
	DD	imagerel ?dtor$0@?0??_Orphan_range_locked@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEBAXPEAPEAVnode@@0@Z@4HA+37
	DD	imagerel $unwind$?dtor$0@?0??_Orphan_range_locked@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEBAXPEAPEAVnode@@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEBAXPEAPEAVnode@@0@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?_Orphan_range@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEBAXPEAPEAVnode@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAAEAV?$allocator@PEAVnode@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$?_Getal@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAAEAV?$allocator@PEAVnode@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEBAAEBV?$allocator@PEAVnode@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$?_Getal@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEBAAEBV?$allocator@PEAVnode@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@PEAVnode@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+105
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@PEAVnode@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@PEAVnode@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVnode@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAVnode@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@PEAVnode@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVnode@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAVnode@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@PEAVnode@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVnode@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAVnode@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@PEAVnode@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVnode@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAVnode@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?getNodeByNumber@binary_tree@@QEAAPEAVnode@@H@Z DD imagerel $LN7
	DD	imagerel $LN7+144
	DD	imagerel $unwind$?getNodeByNumber@binary_tree@@QEAAPEAVnode@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1binary_tree@@QEAA@XZ DD imagerel $LN8
	DD	imagerel $LN8+203
	DD	imagerel $unwind$??1binary_tree@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0binary_tree@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0binary_tree@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0tree_builder@@QEAA@PEAVexpression@@@Z DD imagerel $LN4
	DD	imagerel $LN4+104
	DD	imagerel $unwind$??0tree_builder@@QEAA@PEAVexpression@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z DD imagerel $LN13
	DD	imagerel $LN13+611
	DD	imagerel $unwind$?generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA DD imagerel ?dtor$0@?0??generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA
	DD	imagerel ?dtor$0@?0??generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0??generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0??generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA DD imagerel ?dtor$1@?0??generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA
	DD	imagerel ?dtor$1@?0??generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA+39
	DD	imagerel $unwind$?dtor$1@?0??generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$3@?0??generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA DD imagerel ?dtor$3@?0??generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA
	DD	imagerel ?dtor$3@?0??generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA+36
	DD	imagerel $unwind$?dtor$3@?0??generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$4@?0??generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA DD imagerel ?dtor$4@?0??generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA
	DD	imagerel ?dtor$4@?0??generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA+44
	DD	imagerel $unwind$?dtor$4@?0??generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$6@?0??generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA DD imagerel ?dtor$6@?0??generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA
	DD	imagerel ?dtor$6@?0??generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA+39
	DD	imagerel $unwind$?dtor$6@?0??generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?randomDouble@tree_builder@@QEAANNN@Z DD imagerel $LN3
	DD	imagerel $LN3+119
	DD	imagerel $unwind$?randomDouble@tree_builder@@QEAANNN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?getrand@tree_builder@@QEAAH_K@Z DD imagerel $LN3
	DD	imagerel $LN3+66
	DD	imagerel $unwind$?getrand@tree_builder@@QEAAH_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z DD imagerel $LN49
	DD	imagerel $LN49+2302
	DD	imagerel $unwind$?createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA DD imagerel ?dtor$0@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA
	DD	imagerel ?dtor$0@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA DD imagerel ?dtor$1@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA
	DD	imagerel ?dtor$1@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA+39
	DD	imagerel $unwind$?dtor$1@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA DD imagerel ?dtor$2@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA
	DD	imagerel ?dtor$2@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA+44
	DD	imagerel $unwind$?dtor$2@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$4@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA DD imagerel ?dtor$4@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA
	DD	imagerel ?dtor$4@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA+44
	DD	imagerel $unwind$?dtor$4@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$6@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA DD imagerel ?dtor$6@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA
	DD	imagerel ?dtor$6@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA+44
	DD	imagerel $unwind$?dtor$6@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$8@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA DD imagerel ?dtor$8@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA
	DD	imagerel ?dtor$8@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA+44
	DD	imagerel $unwind$?dtor$8@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$11@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA DD imagerel ?dtor$11@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA
	DD	imagerel ?dtor$11@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA+39
	DD	imagerel $unwind$?dtor$11@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$12@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA DD imagerel ?dtor$12@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA
	DD	imagerel ?dtor$12@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA+44
	DD	imagerel $unwind$?dtor$12@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$15@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA DD imagerel ?dtor$15@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA
	DD	imagerel ?dtor$15@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA+39
	DD	imagerel $unwind$?dtor$15@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$16@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA DD imagerel ?dtor$16@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA
	DD	imagerel ?dtor$16@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA+44
	DD	imagerel $unwind$?dtor$16@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$18@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA DD imagerel ?dtor$18@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA
	DD	imagerel ?dtor$18@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA+39
	DD	imagerel $unwind$?dtor$18@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$20@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA DD imagerel ?dtor$20@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA
	DD	imagerel ?dtor$20@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA+39
	DD	imagerel $unwind$?dtor$20@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?print_node@tree_builder@@QEAAXPEAVnode@@@Z DD imagerel $LN13
	DD	imagerel $LN13+458
	DD	imagerel $unwind$?print_node@tree_builder@@QEAAXPEAVnode@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0??print_node@tree_builder@@QEAAXPEAVnode@@@Z@4HA DD imagerel ?dtor$1@?0??print_node@tree_builder@@QEAAXPEAVnode@@@Z@4HA
	DD	imagerel ?dtor$1@?0??print_node@tree_builder@@QEAAXPEAVnode@@@Z@4HA+39
	DD	imagerel $unwind$?dtor$1@?0??print_node@tree_builder@@QEAAXPEAVnode@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0??print_node@tree_builder@@QEAAXPEAVnode@@@Z@4HA DD imagerel ?dtor$2@?0??print_node@tree_builder@@QEAAXPEAVnode@@@Z@4HA
	DD	imagerel ?dtor$2@?0??print_node@tree_builder@@QEAAXPEAVnode@@@Z@4HA+39
	DD	imagerel $unwind$?dtor$2@?0??print_node@tree_builder@@QEAAXPEAVnode@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?print_tree@tree_builder@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+214
	DD	imagerel $unwind$?print_tree@tree_builder@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??print_tree@tree_builder@@QEAAXXZ@4HA DD imagerel ?dtor$0@?0??print_tree@tree_builder@@QEAAXXZ@4HA
	DD	imagerel ?dtor$0@?0??print_tree@tree_builder@@QEAAXXZ@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??print_tree@tree_builder@@QEAAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD imagerel $LN7
	DD	imagerel $LN7+315
	DD	imagerel $unwind$?to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD imagerel ?dtor$0@?0??to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
	DD	imagerel ?dtor$0@?0??to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0??to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD imagerel ?dtor$1@?0??to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
	DD	imagerel ?dtor$1@?0??to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA+39
	DD	imagerel $unwind$?dtor$1@?0??to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?random_to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD imagerel $LN6
	DD	imagerel $LN6+245
	DD	imagerel $unwind$?random_to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??random_to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD imagerel ?dtor$0@?0??random_to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
	DD	imagerel ?dtor$0@?0??random_to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??random_to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD imagerel $LN15
	DD	imagerel $LN15+733
	DD	imagerel $unwind$?get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD imagerel ?dtor$1@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DD	imagerel ?dtor$1@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA+36
	DD	imagerel $unwind$?dtor$1@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD imagerel ?dtor$2@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DD	imagerel ?dtor$2@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA+36
	DD	imagerel $unwind$?dtor$2@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$3@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD imagerel ?dtor$3@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DD	imagerel ?dtor$3@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA+39
	DD	imagerel $unwind$?dtor$3@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$4@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD imagerel ?dtor$4@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DD	imagerel ?dtor$4@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA+39
	DD	imagerel $unwind$?dtor$4@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$5@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD imagerel ?dtor$5@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DD	imagerel ?dtor$5@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA+39
	DD	imagerel $unwind$?dtor$5@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$6@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD imagerel ?dtor$6@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DD	imagerel ?dtor$6@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA+39
	DD	imagerel $unwind$?dtor$6@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$7@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD imagerel ?dtor$7@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DD	imagerel ?dtor$7@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA+39
	DD	imagerel $unwind$?dtor$7@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$8@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD imagerel ?dtor$8@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DD	imagerel ?dtor$8@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA+39
	DD	imagerel $unwind$?dtor$8@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?findMaxIndex@tree_builder@@QEAAHV?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@HHH@Z DD imagerel $LN14
	DD	imagerel $LN14+570
	DD	imagerel $unwind$?findMaxIndex@tree_builder@@QEAAHV?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@HHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??findMaxIndex@tree_builder@@QEAAHV?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@HHH@Z@4HA DD imagerel ?dtor$0@?0??findMaxIndex@tree_builder@@QEAAHV?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@HHH@Z@4HA
	DD	imagerel ?dtor$0@?0??findMaxIndex@tree_builder@@QEAAHV?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@HHH@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0??findMaxIndex@tree_builder@@QEAAHV?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@HHH@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0??findMaxIndex@tree_builder@@QEAAHV?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@HHH@Z@4HA DD imagerel ?dtor$1@?0??findMaxIndex@tree_builder@@QEAAHV?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@HHH@Z@4HA
	DD	imagerel ?dtor$1@?0??findMaxIndex@tree_builder@@QEAAHV?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@HHH@Z@4HA+39
	DD	imagerel $unwind$?dtor$1@?0??findMaxIndex@tree_builder@@QEAAHV?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@HHH@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?addLeft@tree_builder@@QEAAXPEAVnode@@H@Z DD imagerel $LN29
	DD	imagerel $LN29+1329
	DD	imagerel $unwind$?addLeft@tree_builder@@QEAAXPEAVnode@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA DD imagerel ?dtor$0@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA
	DD	imagerel ?dtor$0@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA+44
	DD	imagerel $unwind$?dtor$0@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA DD imagerel ?dtor$1@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA
	DD	imagerel ?dtor$1@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA+59
	DD	imagerel $unwind$?dtor$1@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$5@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA DD imagerel ?dtor$5@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA
	DD	imagerel ?dtor$5@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA+39
	DD	imagerel $unwind$?dtor$5@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$6@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA DD imagerel ?dtor$6@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA
	DD	imagerel ?dtor$6@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA+36
	DD	imagerel $unwind$?dtor$6@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$7@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA DD imagerel ?dtor$7@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA
	DD	imagerel ?dtor$7@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA+44
	DD	imagerel $unwind$?dtor$7@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$9@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA DD imagerel ?dtor$9@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA
	DD	imagerel ?dtor$9@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA+44
	DD	imagerel $unwind$?dtor$9@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$10@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA DD imagerel ?dtor$10@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA
	DD	imagerel ?dtor$10@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA+59
	DD	imagerel $unwind$?dtor$10@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?addRight@tree_builder@@QEAAXPEAVnode@@HH@Z DD imagerel $LN21
	DD	imagerel $LN21+1060
	DD	imagerel $unwind$?addRight@tree_builder@@QEAAXPEAVnode@@HH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??addRight@tree_builder@@QEAAXPEAVnode@@HH@Z@4HA DD imagerel ?dtor$0@?0??addRight@tree_builder@@QEAAXPEAVnode@@HH@Z@4HA
	DD	imagerel ?dtor$0@?0??addRight@tree_builder@@QEAAXPEAVnode@@HH@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??addRight@tree_builder@@QEAAXPEAVnode@@HH@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$3@?0??addRight@tree_builder@@QEAAXPEAVnode@@HH@Z@4HA DD imagerel ?dtor$3@?0??addRight@tree_builder@@QEAAXPEAVnode@@HH@Z@4HA
	DD	imagerel ?dtor$3@?0??addRight@tree_builder@@QEAAXPEAVnode@@HH@Z@4HA+39
	DD	imagerel $unwind$?dtor$3@?0??addRight@tree_builder@@QEAAXPEAVnode@@HH@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$4@?0??addRight@tree_builder@@QEAAXPEAVnode@@HH@Z@4HA DD imagerel ?dtor$4@?0??addRight@tree_builder@@QEAAXPEAVnode@@HH@Z@4HA
	DD	imagerel ?dtor$4@?0??addRight@tree_builder@@QEAAXPEAVnode@@HH@Z@4HA+39
	DD	imagerel $unwind$?dtor$4@?0??addRight@tree_builder@@QEAAXPEAVnode@@HH@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$5@?0??addRight@tree_builder@@QEAAXPEAVnode@@HH@Z@4HA DD imagerel ?dtor$5@?0??addRight@tree_builder@@QEAAXPEAVnode@@HH@Z@4HA
	DD	imagerel ?dtor$5@?0??addRight@tree_builder@@QEAAXPEAVnode@@HH@Z@4HA+44
	DD	imagerel $unwind$?dtor$5@?0??addRight@tree_builder@@QEAAXPEAVnode@@HH@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$7@?0??addRight@tree_builder@@QEAAXPEAVnode@@HH@Z@4HA DD imagerel ?dtor$7@?0??addRight@tree_builder@@QEAAXPEAVnode@@HH@Z@4HA
	DD	imagerel ?dtor$7@?0??addRight@tree_builder@@QEAAXPEAVnode@@HH@Z@4HA+44
	DD	imagerel $unwind$?dtor$7@?0??addRight@tree_builder@@QEAAXPEAVnode@@HH@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$8@?0??addRight@tree_builder@@QEAAXPEAVnode@@HH@Z@4HA DD imagerel ?dtor$8@?0??addRight@tree_builder@@QEAAXPEAVnode@@HH@Z@4HA
	DD	imagerel ?dtor$8@?0??addRight@tree_builder@@QEAAXPEAVnode@@HH@Z@4HA+59
	DD	imagerel $unwind$?dtor$8@?0??addRight@tree_builder@@QEAAXPEAVnode@@HH@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?build@tree_builder@@QEAAXXZ DD imagerel $LN11
	DD	imagerel $LN11+583
	DD	imagerel $unwind$?build@tree_builder@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??build@tree_builder@@QEAAXXZ@4HA DD imagerel ?dtor$0@?0??build@tree_builder@@QEAAXXZ@4HA
	DD	imagerel ?dtor$0@?0??build@tree_builder@@QEAAXXZ@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??build@tree_builder@@QEAAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0??build@tree_builder@@QEAAXXZ@4HA DD imagerel ?dtor$1@?0??build@tree_builder@@QEAAXXZ@4HA
	DD	imagerel ?dtor$1@?0??build@tree_builder@@QEAAXXZ@4HA+36
	DD	imagerel $unwind$?dtor$1@?0??build@tree_builder@@QEAAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$3@?0??build@tree_builder@@QEAAXXZ@4HA DD imagerel ?dtor$3@?0??build@tree_builder@@QEAAXXZ@4HA
	DD	imagerel ?dtor$3@?0??build@tree_builder@@QEAAXXZ@4HA+39
	DD	imagerel $unwind$?dtor$3@?0??build@tree_builder@@QEAAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$4@?0??build@tree_builder@@QEAAXXZ@4HA DD imagerel ?dtor$4@?0??build@tree_builder@@QEAAXXZ@4HA
	DD	imagerel ?dtor$4@?0??build@tree_builder@@QEAAXXZ@4HA+44
	DD	imagerel $unwind$?dtor$4@?0??build@tree_builder@@QEAAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?performOperation@tree_builder@@QEAANUop@@NN@Z DD imagerel $LN15
	DD	imagerel $LN15+395
	DD	imagerel $unwind$?performOperation@tree_builder@@QEAANUop@@NN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??performOperation@tree_builder@@QEAANUop@@NN@Z@4HA DD imagerel ?dtor$0@?0??performOperation@tree_builder@@QEAANUop@@NN@Z@4HA
	DD	imagerel ?dtor$0@?0??performOperation@tree_builder@@QEAANUop@@NN@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0??performOperation@tree_builder@@QEAANUop@@NN@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?calcNode@tree_builder@@QEAANPEAVnode@@@Z DD imagerel $LN13
	DD	imagerel $LN13+471
	DD	imagerel $unwind$?calcNode@tree_builder@@QEAANPEAVnode@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?calc@tree_builder@@QEAANNNN@Z DD imagerel $LN3
	DD	imagerel $LN3+171
	DD	imagerel $unwind$?calc@tree_builder@@QEAANNNN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1tree_builder@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??1tree_builder@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@tree_builder@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$?__autoclassinit2@tree_builder@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+102
	DD	imagerel $unwind$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+115
	DD	imagerel $unwind$??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBDAEBV10@@Z DD imagerel $LN6
	DD	imagerel $LN6+245
	DD	imagerel $unwind$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBDAEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z DD imagerel $LN5
	DD	imagerel $LN5+125
	DD	imagerel $unwind$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z DD imagerel $LN5
	DD	imagerel $LN5+125
	DD	imagerel $unwind$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@0@Z DD imagerel $LN14
	DD	imagerel $LN14+278
	DD	imagerel $unwind$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?isTokenizable@@YA_ND@Z DD imagerel $LN5
	DD	imagerel $LN5+100
	DD	imagerel $unwind$?isTokenizable@@YA_ND@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsSupportedVariableName@@YA_ND@Z DD imagerel $LN7
	DD	imagerel $LN7+127
	DD	imagerel $unwind$?IsSupportedVariableName@@YA_ND@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?setPrev@@YA_NDPEAD@Z DD imagerel $LN5
	DD	imagerel $LN5+81
	DD	imagerel $unwind$?setPrev@@YA_NDPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsOperator@@YA_ND@Z DD imagerel $LN7
	DD	imagerel $LN7+127
	DD	imagerel $unwind$?IsOperator@@YA_ND@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$main DD	imagerel $LN52
	DD	imagerel $LN52+2323
	DD	imagerel $unwind$main
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$main$dtor$0 DD imagerel main$dtor$0
	DD	imagerel main$dtor$0+39
	DD	imagerel $unwind$main$dtor$0
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$main$dtor$1 DD imagerel main$dtor$1
	DD	imagerel main$dtor$1+39
	DD	imagerel $unwind$main$dtor$1
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$main$dtor$2 DD imagerel main$dtor$2
	DD	imagerel main$dtor$2+39
	DD	imagerel $unwind$main$dtor$2
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$main$dtor$10 DD imagerel main$dtor$10
	DD	imagerel main$dtor$10+39
	DD	imagerel $unwind$main$dtor$10
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$main$dtor$11 DD imagerel main$dtor$11
	DD	imagerel main$dtor$11+39
	DD	imagerel $unwind$main$dtor$11
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$main$dtor$12 DD imagerel main$dtor$12
	DD	imagerel main$dtor$12+39
	DD	imagerel $unwind$main$dtor$12
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$main$dtor$13 DD imagerel main$dtor$13
	DD	imagerel main$dtor$13+39
	DD	imagerel $unwind$main$dtor$13
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$main$dtor$15 DD imagerel main$dtor$15
	DD	imagerel main$dtor$15+39
	DD	imagerel $unwind$main$dtor$15
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD imagerel $LN25
	DD	imagerel $LN25+1036
	DD	imagerel $unwind$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD imagerel ?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	imagerel ?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA+80
	DD	imagerel $unwind$?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z DD imagerel $LN23
	DD	imagerel $LN23+1003
	DD	imagerel $unwind$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA DD imagerel ?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA
	DD	imagerel ?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA DD imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA
	DD	imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA+80
	DD	imagerel $unwind$?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$emplace_back@AEBQEAVnode@@@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAA?A_TAEBQEAVnode@@@Z DD imagerel $LN4
	DD	imagerel $LN4+153
	DD	imagerel $unwind$??$emplace_back@AEBQEAVnode@@@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAA?A_TAEBQEAVnode@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBQEAVnode@@@std@@YAAEBQEAVnode@@AEBQEAV1@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$forward@AEBQEAVnode@@@std@@YAAEBQEAVnode@@AEBQEAV1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back_with_unused_capacity@AEBQEAVnode@@@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAA?A_TAEBQEAVnode@@@Z DD imagerel $LN3
	DD	imagerel $LN3+202
	DD	imagerel $unwind$??$_Emplace_back_with_unused_capacity@AEBQEAVnode@@@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAA?A_TAEBQEAVnode@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@PEAVnode@@@std@@YAPEAPEAVnode@@PEAPEAV1@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$_Unfancy@PEAVnode@@@std@@YAPEAPEAVnode@@PEAPEAV1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@PEAVnode@@AEBQEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVnode@@@std@@@std@@SAXAEAV?$allocator@PEAVnode@@@1@QEAPEAVnode@@AEBQEAV3@@Z DD imagerel $LN3
	DD	imagerel $LN3+108
	DD	imagerel $unwind$??$construct@PEAVnode@@AEBQEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVnode@@@std@@@std@@SAXAEAV?$allocator@PEAVnode@@@1@QEAPEAVnode@@AEBQEAV3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_reallocate@AEBQEAVnode@@@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAPEAPEAVnode@@QEAPEAV2@AEBQEAV2@@Z DD imagerel $LN13
	DD	imagerel $LN13+582
	DD	imagerel $unwind$??$_Emplace_reallocate@AEBQEAVnode@@@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAPEAPEAVnode@@QEAPEAV2@AEBQEAV2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$_Emplace_reallocate@AEBQEAVnode@@@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAPEAPEAVnode@@QEAPEAV2@AEBQEAV2@@Z@4HA DD imagerel ?catch$0@?0???$_Emplace_reallocate@AEBQEAVnode@@@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAPEAPEAVnode@@QEAPEAV2@AEBQEAV2@@Z@4HA
	DD	imagerel ?catch$0@?0???$_Emplace_reallocate@AEBQEAVnode@@@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAPEAPEAVnode@@QEAPEAV2@AEBQEAV2@@Z@4HA+94
	DD	imagerel $unwind$?catch$0@?0???$_Emplace_reallocate@AEBQEAVnode@@@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAPEAPEAVnode@@QEAPEAV2@AEBQEAV2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+66
	DD	imagerel $unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0PEAVnode@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAVnode@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??$?0PEAVnode@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAVnode@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@V?$allocator@PEAVnode@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVnode@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+79
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@PEAVnode@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVnode@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+133
	DD	imagerel $unwind$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0Ubraket_group@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@Ubraket_group@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??$?0Ubraket_group@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@Ubraket_group@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0Uop@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@Uop@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??$?0Uop@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@Uop@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0V?$allocator@Uop@@@std@@$$V@?$_Compressed_pair@V?$allocator@Uop@@@std@@V?$_Vector_val@U?$_Simple_types@Uop@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@Uop@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$??$?0V?$allocator@Uop@@@std@@$$V@?$_Compressed_pair@V?$allocator@Uop@@@std@@V?$_Vector_val@U?$_Simple_types@Uop@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@Uop@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+184
	DD	imagerel $unwind$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+80
	DD	imagerel $unwind$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Tidy_guard@V?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+69
	DD	imagerel $unwind$??1?$_Tidy_guard@V?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Ucopy@PEAUop@@@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@AEAAPEAUop@@PEAU2@00@Z DD imagerel $LN3
	DD	imagerel $LN3+97
	DD	imagerel $unwind$??$_Ucopy@PEAUop@@@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@AEAAPEAUop@@PEAU2@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD imagerel $LN4
	DD	imagerel $LN4+148
	DD	imagerel $unwind$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+120
	DD	imagerel $unwind$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD imagerel $LN7
	DD	imagerel $LN7+261
	DD	imagerel $unwind$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA DD imagerel ?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA
	DD	imagerel ?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel $LN6
	DD	imagerel $LN6+116
	DD	imagerel $unwind$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$min@_K@std@@YAAEB_KAEB_K0@Z DD imagerel $LN5
	DD	imagerel $LN5+119
	DD	imagerel $unwind$??$min@_K@std@@YAAEB_KAEB_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Traits_compare@U?$char_traits@D@std@@@std@@YAHQEBD_K01@Z DD imagerel $LN6
	DD	imagerel $LN6+159
	DD	imagerel $unwind$??$_Traits_compare@U?$char_traits@D@std@@@std@@YAHQEBD_K01@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$addressof@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+79
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@PEAVnode@@@std@@@std@@YAXPEAPEAVnode@@QEAPEAV1@AEAV?$allocator@PEAVnode@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@PEAVnode@@@std@@@std@@YAXPEAPEAVnode@@QEAPEAV1@AEAV?$allocator@PEAVnode@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_138c3d7c38c85abb84c7fc7bfe5747b7>@@QEBA@QEAD_KD@Z DD imagerel $LN3
	DD	imagerel $LN3+125
	DD	imagerel $unwind$??R<lambda_138c3d7c38c85abb84c7fc7bfe5747b7>@@QEBA@QEAD_KD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Reallocate_for@V<lambda_138c3d7c38c85abb84c7fc7bfe5747b7>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_138c3d7c38c85abb84c7fc7bfe5747b7>@@D@Z DD imagerel $LN6
	DD	imagerel $LN6+421
	DD	imagerel $unwind$??$_Reallocate_for@V<lambda_138c3d7c38c85abb84c7fc7bfe5747b7>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_138c3d7c38c85abb84c7fc7bfe5747b7>@@D@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBA@QEAD_KQEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+124
	DD	imagerel $unwind$??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBA@QEAD_KQEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z DD imagerel $LN6
	DD	imagerel $LN6+420
	DD	imagerel $unwind$??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBA@QEADQEBD_K12@Z DD imagerel $LN3
	DD	imagerel $LN3+179
	DD	imagerel $unwind$??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBA@QEADQEBD_K12@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z DD imagerel $LN6
	DD	imagerel $LN6+580
	DD	imagerel $unwind$??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Pocca@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@AEBV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$??$_Pocca@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+111
	DD	imagerel $unwind$??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@D@std@@YAPEADPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$_Unfancy@D@std@@YAPEADPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@PEADAEAPEAD@std@@YAXAEAPEAD0@Z DD imagerel $LN3
	DD	imagerel $LN3+111
	DD	imagerel $unwind$??$_Construct_in_place@PEADAEAPEAD@std@@YAXAEAPEAD0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Pocma@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@0@Z DD imagerel $LN3
	DD	imagerel $LN3+58
	DD	imagerel $unwind$??$_Pocma@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$max@_K@std@@YAAEB_KAEB_K0@Z DD imagerel $LN5
	DD	imagerel $LN5+119
	DD	imagerel $unwind$??$max@_K@std@@YAAEB_KAEB_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+91
	DD	imagerel $unwind$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD imagerel $LN5
	DD	imagerel $LN5+94
	DD	imagerel $unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+98
	DD	imagerel $unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@Ubraket_group@@@std@@@std@@YAXPEAUbraket_group@@QEAU1@AEAV?$allocator@Ubraket_group@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@Ubraket_group@@@std@@@std@@YAXPEAUbraket_group@@QEAU1@AEAV?$allocator@Ubraket_group@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@Uop@@@std@@@std@@YAXPEAUop@@QEAU1@AEAV?$allocator@Uop@@@0@@Z DD imagerel $LN6
	DD	imagerel $LN6+116
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@Uop@@@std@@@std@@YAXPEAUop@@QEAU1@AEAV?$allocator@Uop@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$0DA@@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+91
	DD	imagerel $unwind$??$_Get_size_of_n@$0DA@@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z DD imagerel $LN6
	DD	imagerel $LN6+116
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$00@std@@YA_K_K@Z DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$??$_Get_size_of_n@$00@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z DD imagerel $LN26
	DD	imagerel $LN26+1015
	DD	imagerel $unwind$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA DD imagerel ?dtor$0@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$1@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA DD imagerel ?catch$1@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA
	DD	imagerel ?catch$1@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA+80
	DD	imagerel $unwind$?catch$1@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Voidify_iter@PEAPEAVnode@@@std@@YAPEAXPEAPEAVnode@@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$_Voidify_iter@PEAPEAVnode@@@std@@YAPEAXPEAPEAVnode@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@V?$allocator@Uop@@@std@@@std@@YA$$QEAV?$allocator@Uop@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$forward@V?$allocator@Uop@@@std@@@std@@YA$$QEAV?$allocator@Uop@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_copy@PEAUop@@V?$allocator@Uop@@@std@@@std@@YAPEAUop@@QEAU1@0PEAU1@AEAV?$allocator@Uop@@@0@@Z DD imagerel $LN7
	DD	imagerel $LN7+276
	DD	imagerel $unwind$??$_Uninitialized_copy@PEAUop@@V?$allocator@Uop@@@std@@@std@@YAPEAUop@@QEAU1@0PEAU1@AEAV?$allocator@Uop@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Uninitialized_copy@PEAUop@@V?$allocator@Uop@@@std@@@std@@YAPEAUop@@QEAU1@0PEAU1@AEAV?$allocator@Uop@@@0@@Z@4HA DD imagerel ?dtor$0@?0???$_Uninitialized_copy@PEAUop@@V?$allocator@Uop@@@std@@@std@@YAPEAUop@@QEAU1@0PEAU1@AEAV?$allocator@Uop@@@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Uninitialized_copy@PEAUop@@V?$allocator@Uop@@@std@@@std@@YAPEAUop@@QEAU1@0PEAU1@AEAV?$allocator@Uop@@@0@@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0???$_Uninitialized_copy@PEAUop@@V?$allocator@Uop@@@std@@@std@@YAPEAUop@@QEAU1@0PEAU1@AEAV?$allocator@Uop@@@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Voidify_iter@PEAPEAD@std@@YAPEAXPEAPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$_Voidify_iter@PEAPEAD@std@@YAPEAXPEAPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEAPEAD@std@@YAAEAPEADAEAPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$forward@AEAPEAD@std@@YAAEAPEADAEAPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBV?$allocator@D@std@@@std@@YAAEBV?$allocator@D@0@AEBV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$forward@AEBV?$allocator@D@std@@@std@@YAAEBV?$allocator@D@0@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD imagerel $LN13
	DD	imagerel $LN13+277
	DD	imagerel $unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@Uop@@@std@@YAPEAUop@@PEAU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$_Unfancy@Uop@@@std@@YAPEAUop@@PEAU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@Uop@@@?$_Default_allocator_traits@V?$allocator@Uop@@@std@@@std@@SAXAEAV?$allocator@Uop@@@1@QEAUop@@@Z DD imagerel $LN3
	DD	imagerel $LN3+60
	DD	imagerel $unwind$??$destroy@Uop@@@?$_Default_allocator_traits@V?$allocator@Uop@@@std@@@std@@SAXAEAV?$allocator@Uop@@@1@QEAUop@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$_Unfancy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+60
	DD	imagerel $unwind$??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move@PEAPEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@YAPEAPEAVnode@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVnode@@@0@@Z DD imagerel $LN7
	DD	imagerel $LN7+342
	DD	imagerel $unwind$??$_Uninitialized_move@PEAPEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@YAPEAPEAVnode@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVnode@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Uninitialized_move@PEAPEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@YAPEAPEAVnode@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVnode@@@0@@Z@4HA DD imagerel ?dtor$0@?0???$_Uninitialized_move@PEAPEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@YAPEAPEAVnode@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVnode@@@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Uninitialized_move@PEAPEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@YAPEAPEAVnode@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVnode@@@0@@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0???$_Uninitialized_move@PEAPEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@YAPEAPEAVnode@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVnode@@@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$07@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+94
	DD	imagerel $unwind$??$_Get_size_of_n@$07@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEAV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEAV?$allocator@D@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$??$?0AEAV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEAV?$allocator@D@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocators_equal@V?$allocator@D@std@@@std@@YA_NAEBV?$allocator@D@0@0@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$_Allocators_equal@V?$allocator@D@std@@@std@@YA_NAEBV?$allocator@D@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@AEBQEAUop@@@std@@YA?A_TAEBQEAUop@@@Z DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??$_Get_unwrapped@AEBQEAUop@@@std@@YA?A_TAEBQEAUop@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Uninitialized_backout_al@V?$allocator@Uop@@@std@@@std@@QEAA@PEAUop@@AEAV?$allocator@Uop@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+111
	DD	imagerel $unwind$??0?$_Uninitialized_backout_al@V?$allocator@Uop@@@std@@@std@@QEAA@PEAUop@@AEAV?$allocator@Uop@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Uninitialized_backout_al@V?$allocator@Uop@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$??1?$_Uninitialized_backout_al@V?$allocator@Uop@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@?$_Uninitialized_backout_al@V?$allocator@Uop@@@std@@@std@@QEAAPEAUop@@XZ DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@Uop@@@std@@@std@@QEAAPEAUop@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@Uop@@@std@@@std@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@Uop@@@std@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@AEAUop@@@?$_Uninitialized_backout_al@V?$allocator@Uop@@@std@@@std@@QEAAXAEAUop@@@Z DD imagerel $LN3
	DD	imagerel $LN3+136
	DD	imagerel $unwind$??$_Emplace_back@AEAUop@@@?$_Uninitialized_backout_al@V?$allocator@Uop@@@std@@@std@@QEAAXAEAUop@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@AEBQEAPEAVnode@@@std@@YA?A_TAEBQEAPEAVnode@@@Z DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??$_Get_unwrapped@AEBQEAPEAVnode@@@std@@YA?A_TAEBQEAPEAVnode@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAPEAVnode@@@std@@YA$$QEAPEAVnode@@AEAPEAV1@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$move@AEAPEAVnode@@@std@@YA$$QEAPEAVnode@@AEAPEAV1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_memmove@PEAPEAVnode@@PEAPEAV1@@std@@YAPEAPEAVnode@@PEAPEAV1@00@Z DD imagerel $LN3
	DD	imagerel $LN3+196
	DD	imagerel $unwind$??$_Copy_memmove@PEAPEAVnode@@PEAPEAV1@@std@@YAPEAPEAVnode@@PEAPEAV1@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Uninitialized_backout_al@V?$allocator@PEAVnode@@@std@@@std@@QEAA@PEAPEAVnode@@AEAV?$allocator@PEAVnode@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+111
	DD	imagerel $unwind$??0?$_Uninitialized_backout_al@V?$allocator@PEAVnode@@@std@@@std@@QEAA@PEAPEAVnode@@AEAV?$allocator@PEAVnode@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Uninitialized_backout_al@V?$allocator@PEAVnode@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$??1?$_Uninitialized_backout_al@V?$allocator@PEAVnode@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@?$_Uninitialized_backout_al@V?$allocator@PEAVnode@@@std@@@std@@QEAAPEAPEAVnode@@XZ DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@PEAVnode@@@std@@@std@@QEAAPEAPEAVnode@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@PEAVnode@@@std@@@std@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@PEAVnode@@@std@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@PEAVnode@@@?$_Uninitialized_backout_al@V?$allocator@PEAVnode@@@std@@@std@@QEAAX$$QEAPEAVnode@@@Z DD imagerel $LN3
	DD	imagerel $LN3+136
	DD	imagerel $unwind$??$_Emplace_back@PEAVnode@@@?$_Uninitialized_backout_al@V?$allocator@PEAVnode@@@std@@@std@@QEAAX$$QEAPEAVnode@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEAV?$allocator@D@std@@@std@@YAAEAV?$allocator@D@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$forward@AEAV?$allocator@D@std@@@std@@YAAEAV?$allocator@D@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEAUop@@@std@@YAAEAUop@@AEAU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$forward@AEAUop@@@std@@YAAEAUop@@AEAU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@Uop@@AEAU1@@?$_Default_allocator_traits@V?$allocator@Uop@@@std@@@std@@SAXAEAV?$allocator@Uop@@@1@QEAUop@@AEAU3@@Z DD imagerel $LN3
	DD	imagerel $LN3+110
	DD	imagerel $unwind$??$construct@Uop@@AEAU1@@?$_Default_allocator_traits@V?$allocator@Uop@@@std@@@std@@SAXAEAV?$allocator@Uop@@@1@QEAUop@@AEAU3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_To_address@PEAPEAVnode@@@std@@YA?A_PAEBQEAPEAVnode@@@Z DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??$_To_address@PEAPEAVnode@@@std@@YA?A_PAEBQEAPEAVnode@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@PEAVnode@@@std@@YA$$QEAPEAVnode@@AEAPEAV1@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$forward@PEAVnode@@@std@@YA$$QEAPEAVnode@@AEAPEAV1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@PEAVnode@@PEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVnode@@@std@@@std@@SAXAEAV?$allocator@PEAVnode@@@1@QEAPEAVnode@@$$QEAPEAV3@@Z DD imagerel $LN3
	DD	imagerel $LN3+108
	DD	imagerel $unwind$??$construct@PEAVnode@@PEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVnode@@@std@@@std@@SAXAEAV?$allocator@PEAVnode@@@1@QEAPEAVnode@@$$QEAPEAV3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Voidify_iter@PEAUop@@@std@@YAPEAXPEAUop@@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$_Voidify_iter@PEAUop@@@std@@YAPEAXPEAUop@@@Z
pdata	ENDS
;	COMDAT __real@c059000000000000
CONST	SEGMENT
__real@c059000000000000 DQ 0c059000000000000r	; -100
CONST	ENDS
;	COMDAT __real@40dfffc000000000
CONST	SEGMENT
__real@40dfffc000000000 DQ 040dfffc000000000r	; 32767
CONST	ENDS
;	COMDAT __real@4059000000000000
CONST	SEGMENT
__real@4059000000000000 DQ 04059000000000000r	; 100
CONST	ENDS
;	COMDAT __real@4014000000000000
CONST	SEGMENT
__real@4014000000000000 DQ 04014000000000000r	; 5
CONST	ENDS
;	COMDAT __real@4010000000000000
CONST	SEGMENT
__real@4010000000000000 DQ 04010000000000000r	; 4
CONST	ENDS
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD imagerel ??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD imagerel ??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@bad_alloc@std@@8
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 01H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	imagerel ??_R3bad_array_new_length@std@@8
	DD	imagerel ??_R4bad_array_new_length@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD imagerel ??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD imagerel ??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 01H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	imagerel ??_R3bad_alloc@std@@8
	DD	imagerel ??_R4bad_alloc@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD imagerel ??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD imagerel ??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 01H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	imagerel ??_R3exception@std@@8
	DD	imagerel ??_R4exception@std@@6B@
rdata$r	ENDS
;	COMDAT ??_C@_1EO@GFNCMDLA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA_@
CONST	SEGMENT
??_C@_1EO@GFNCMDLA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA_@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'A', 00H
	DB	'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'e'
	DB	00H, '_', 00H, 'm', 00H, 'a', 00H, 'n', 00H, 'u', 00H, 'a', 00H
	DB	'l', 00H, 'l', 00H, 'y', 00H, '_', 00H, 'v', 00H, 'e', 00H, 'c'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BPK@IDOEFEOL@?$AA?$CC?$AAY?$AAo?$AAu?$AA?5?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAc?$AAo?$AAn@
CONST	SEGMENT
??_C@_1BPK@IDOEFEOL@?$AA?$CC?$AAY?$AAo?$AAu?$AA?5?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAc?$AAo?$AAn@ DB '"'
	DB	00H, 'Y', 00H, 'o', 00H, 'u', 00H, ' ', 00H, 'c', 00H, 'a', 00H
	DB	'n', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H, 'c', 00H, 'o'
	DB	00H, 'n', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'n', 00H
	DB	'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 't', 00H, 'h', 00H, 'e'
	DB	00H, ' ', 00H, 's', 00H, 'a', 00H, 'm', 00H, 'e', 00H, ' ', 00H
	DB	'm', 00H, 'o', 00H, 'v', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 's'
	DB	00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, ' ', 00H
	DB	't', 00H, 'o', 00H, ' ', 00H, 'i', 00H, 't', 00H, 's', 00H, 'e'
	DB	00H, 'l', 00H, 'f', 00H, '.', 00H, ' ', 00H, 'S', 00H, 'e', 00H
	DB	'e', 00H, ' ', 00H, '"', 00H, ' ', 00H, '"', 00H, 'N', 00H, '4'
	DB	00H, '8', 00H, '4', 00H, '9', 00H, ' ', 00H, '[', 00H, 'r', 00H
	DB	'e', 00H, 's', 00H, '.', 00H, 'o', 00H, 'n', 00H, '.', 00H, 'a'
	DB	00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm', 00H, 'e', 00H, 'n', 00H
	DB	't', 00H, 's', 00H, ']', 00H, '/', 00H, '1', 00H, '.', 00H, '3'
	DB	00H, ':', 00H, ' ', 00H, 'I', 00H, 'f', 00H, ' ', 00H, 'a', 00H
	DB	' ', 00H, 'f', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H
	DB	'u', 00H, 'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, ' ', 00H, 'b'
	DB	00H, 'i', 00H, 'n', 00H, 'd', 00H, 's', 00H, ' ', 00H, 't', 00H
	DB	'o', 00H, ' ', 00H, 'a', 00H, 'n', 00H, ' ', 00H, 'r', 00H, 'v'
	DB	00H, 'a', 00H, 'l', 00H, 'u', 00H, 'e', 00H, ' ', 00H, 'r', 00H
	DB	'e', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'n', 00H, 'c'
	DB	00H, 'e', 00H, ' ', 00H, '"', 00H, ' ', 00H, '"', 00H, 'p', 00H
	DB	'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 't', 00H, 'e'
	DB	00H, 'r', 00H, ',', 00H, ' ', 00H, 't', 00H, 'h', 00H, 'e', 00H
	DB	' ', 00H, 'i', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, 'a', 00H, 't', 00H, 'i', 00H
	DB	'o', 00H, 'n', 00H, ' ', 00H, 'm', 00H, 'a', 00H, 'y', 00H, ' '
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, 'u', 00H, 'm', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'h', 00H, 'a', 00H, 't', 00H, ' ', 00H, 't'
	DB	00H, 'h', 00H, 'i', 00H, 's', 00H, ' ', 00H, 'p', 00H, 'a', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 't', 00H, 'e', 00H, 'r'
	DB	00H, ' ', 00H, 'i', 00H, 's', 00H, ' ', 00H, 'a', 00H, ' ', 00H
	DB	'u', 00H, 'n', 00H, 'i', 00H, 'q', 00H, 'u', 00H, 'e', 00H, ' '
	DB	00H, 'r', 00H, 'e', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'e', 00H
	DB	'n', 00H, 'c', 00H, 'e', 00H, ' ', 00H, '"', 00H, ' ', 00H, '"'
	DB	00H, 't', 00H, 'o', 00H, ' ', 00H, 't', 00H, 'h', 00H, 'i', 00H
	DB	's', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CA@DFIMIFBJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAo?$AAp?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AA?$CL@
CONST	SEGMENT
??_C@_1CA@DFIMIFBJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAo?$AAp?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AA?$CL@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' '
	DB	00H, '+', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0PC@KBJGOMJG@You?5cannot?5concatenate?5the?5same@
CONST	SEGMENT
??_C@_0PC@KBJGOMJG@You?5cannot?5concatenate?5the?5same@ DB 'You cannot co'
	DB	'ncatenate the same moved string to itself. See N4849 [res.on.'
	DB	'arguments]/1.3: If a function argument binds to an rvalue ref'
	DB	'erence parameter, the implementation may assume that this par'
	DB	'ameter is a unique reference to this argument', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position@ DB 'invalid string position'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1LO@NPPEKPAI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAb?$AAa?$AAs?$AAi?$AAc?$AA_?$AAs?$AAt?$AAr?$AAi@
CONST	SEGMENT
??_C@_1LO@NPPEKPAI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAb?$AAa?$AAs?$AAi?$AAc?$AA_?$AAs?$AAt?$AAr?$AAi@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'b', 00H, 'a', 00H
	DB	's', 00H, 'i', 00H, 'c', 00H, '_', 00H, 's', 00H, 't', 00H, 'r'
	DB	00H, 'i', 00H, 'n', 00H, 'g', 00H, '<', 00H, 'c', 00H, 'h', 00H
	DB	'a', 00H, 'r', 00H, ',', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u'
	DB	00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H
	DB	':', 00H, ':', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, '_'
	DB	00H, 't', 00H, 'r', 00H, 'a', 00H, 'i', 00H, 't', 00H, 's', 00H
	DB	'<', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, '>', 00H, ','
	DB	00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H
	DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l'
	DB	00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, '<', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, '>'
	DB	00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' '
	DB	00H, '[', 00H, ']', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1EA@OADAPGGK@?$AA?$CC?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@
CONST	SEGMENT
??_C@_1EA@OADAPGGK@?$AA?$CC?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@ DB '"'
	DB	00H, 's', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H
	DB	' ', 00H, 's', 00H, 'u', 00H, 'b', 00H, 's', 00H, 'c', 00H, 'r'
	DB	00H, 'i', 00H, 'p', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'u', 00H
	DB	't', 00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'r', 00H, 'a'
	DB	00H, 'n', 00H, 'g', 00H, 'e', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1NA@CHJCONEK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NA@CHJCONEK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '9', 00H, '.', 00H, '3', 00H, '0', 00H, '1', 00H
	DB	'3', 00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 's', 00H
	DB	't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GI@DEIBJNCC@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GI@DEIBJNCC@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.29.30133\include\xstring', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@LFGPDMIB@string?5subscript?5out?5of?5range@
CONST	SEGMENT
??_C@_0BO@LFGPDMIB@string?5subscript?5out?5of?5range@ DB 'string subscrip'
	DB	't out of range', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BME@NCIPHHDN@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa@
CONST	SEGMENT
??_C@_1BME@NCIPHHDN@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H
	DB	'd', 00H, ':', 00H, ':', 00H, 'b', 00H, 'a', 00H, 's', 00H, 'i'
	DB	00H, 'c', 00H, '_', 00H, 's', 00H, 't', 00H, 'r', 00H, 'i', 00H
	DB	'n', 00H, 'g', 00H, '<', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r'
	DB	00H, ',', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H
	DB	't', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':'
	DB	00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, '_', 00H, 't', 00H
	DB	'r', 00H, 'a', 00H, 'i', 00H, 't', 00H, 's', 00H, '<', 00H, 'c'
	DB	00H, 'h', 00H, 'a', 00H, 'r', 00H, '>', 00H, ',', 00H, 'c', 00H
	DB	'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't'
	DB	00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H
	DB	'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<'
	DB	00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, '>', 00H, ' ', 00H
	DB	'>', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's'
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H
	DB	'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H
	DB	's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':'
	DB	00H, ':', 00H, 'b', 00H, 'a', 00H, 's', 00H, 'i', 00H, 'c', 00H
	DB	'_', 00H, 's', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, '<', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, ',', 00H
	DB	's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'c', 00H
	DB	'h', 00H, 'a', 00H, 'r', 00H, '_', 00H, 't', 00H, 'r', 00H, 'a'
	DB	00H, 'i', 00H, 't', 00H, 's', 00H, '<', 00H, 'c', 00H, 'h', 00H
	DB	'a', 00H, 'r', 00H, '>', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a'
	DB	00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H
	DB	':', 00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c', 00H
	DB	'h', 00H, 'a', 00H, 'r', 00H, '>', 00H, ' ', 00H, '>', 00H, ' '
	DB	00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H
	DB	'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, ' ', 00H, '[', 00H, ']', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@
CONST	SEGMENT
??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@ DB '"'
	DB	00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, 's', 00H, 'u', 00H, 'b', 00H, 's', 00H, 'c', 00H, 'r'
	DB	00H, 'i', 00H, 'p', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'u', 00H
	DB	't', 00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'r', 00H, 'a'
	DB	00H, 'n', 00H, 'g', 00H, 'e', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1IK@LEEOEPLD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr@
CONST	SEGMENT
??_C@_1IK@LEEOEPLD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'o', 00H
	DB	'p', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's'
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H
	DB	'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, '<', 00H, 's', 00H, 't', 00H, 'r', 00H
	DB	'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'p', 00H, '>'
	DB	00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' '
	DB	00H, '[', 00H, ']', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@
CONST	SEGMENT
??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@ DB 'vector subscrip'
	DB	't out of range', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1EC@GDGFILAB@?$AA?$CC?$AAf?$AAr?$AAo?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAc?$AAa?$AAl?$AAl?$AAe?$AAd@
CONST	SEGMENT
??_C@_1EC@GDGFILAB@?$AA?$CC?$AAf?$AAr?$AAo?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAc?$AAa?$AAl?$AAl?$AAe?$AAd@ DB '"'
	DB	00H, 'f', 00H, 'r', 00H, 'o', 00H, 'n', 00H, 't', 00H, '(', 00H
	DB	')', 00H, ' ', 00H, 'c', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'e'
	DB	00H, 'd', 00H, ' ', 00H, 'o', 00H, 'n', 00H, ' ', 00H, 'e', 00H
	DB	'm', 00H, 'p', 00H, 't', 00H, 'y', 00H, ' ', 00H, 'v', 00H, 'e'
	DB	00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1IK@COOKACPM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa@
CONST	SEGMENT
??_C@_1IK@COOKACPM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'n', 00H, 'o', 00H
	DB	'd', 00H, 'e', 00H, ' ', 00H, '*', 00H, ',', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H
	DB	'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o'
	DB	00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H
	DB	'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'n'
	DB	00H, 'o', 00H, 'd', 00H, 'e', 00H, ' ', 00H, '*', 00H, '>', 00H
	DB	' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'f', 00H, 'r', 00H, 'o'
	DB	00H, 'n', 00H, 't', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1MO@NOHEJINP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1MO@NOHEJINP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '9', 00H, '.', 00H, '3', 00H, '0', 00H, '1', 00H
	DB	'3', 00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GH@KMHDIFOI@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GH@KMHDIFOI@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.29.30133\include\vector', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@KGLJJIBC@front?$CI?$CJ?5called?5on?5empty?5vector@
CONST	SEGMENT
??_C@_0BP@KGLJJIBC@front?$CI?$CJ?5called?5on?5empty?5vector@ DB 'front() '
	DB	'called on empty vector', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GEDOGCLG@?6random?5result?3?5@
CONST	SEGMENT
??_C@_0BB@GEDOGCLG@?6random?5result?3?5@ DB 0aH, 'random result: ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04FOMPHDMB@?$CK?1?$CL?9@
CONST	SEGMENT
??_C@_04FOMPHDMB@?$CK?1?$CL?9@ DB '*/+-', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@MLCIECCN@Generating?5random?5tree?6@
CONST	SEGMENT
??_C@_0BI@MLCIECCN@Generating?5random?5tree?6@ DB 'Generating random tree'
	DB	0aH, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@DDLKBKO@?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD@
CONST	SEGMENT
??_C@_0DK@DDLKBKO@?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD@ DB '#'
	DB	'#######################################################', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@JILAODGG@?6Results?3?6@
CONST	SEGMENT
??_C@_0L@JILAODGG@?6Results?3?6@ DB 0aH, 'Results:', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@NNEFPPLJ@?6Tree?5to?5string?6@
CONST	SEGMENT
??_C@_0BB@NNEFPPLJ@?6Tree?5to?5string?6@ DB 0aH, 'Tree to string', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07BEFECKPA@?6Tree?3?6@
CONST	SEGMENT
??_C@_07BEFECKPA@?6Tree?3?6@ DB 0aH, 'Tree:', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@OPDGNCOI@?6Brackets?6@
CONST	SEGMENT
??_C@_0L@OPDGNCOI@?6Brackets?6@ DB 0aH, 'Brackets', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@ELNFFMMN@?6Operators?3?6@
CONST	SEGMENT
??_C@_0N@ELNFFMMN@?6Operators?3?6@ DB 0aH, 'Operators:', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GKOFOFEA@?6Numbers?3?6@
CONST	SEGMENT
??_C@_0L@GKOFOFEA@?6Numbers?3?6@ DB 0aH, 'Numbers:', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@GBABLGIM@unexpected?5variable?5name@
CONST	SEGMENT
??_C@_0BJ@GBABLGIM@unexpected?5variable?5name@ DB 'unexpected variable na'
	DB	'me', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0EP@FLJIJNCO@?$CI45?445?5?9?5x?5?$FO?5?92?$CJ?5?$CK?5?94563?445?5?9?5y@
CONST	SEGMENT
??_C@_0EP@FLJIJNCO@?$CI45?445?5?9?5x?5?$FO?5?92?$CJ?5?$CK?5?94563?445?5?9?5y@ DB '('
	DB	'45.45 - x ^ -2) * -4563.45 - y * (4.4586 - (2.7562 * z / 3)) '
	DB	'/ (4585 * 45.45)', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01GLPGHMHM@z@
CONST	SEGMENT
??_C@_01GLPGHMHM@z@ DB 'z', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_01EANLCPLP@y@
CONST	SEGMENT
??_C@_01EANLCPLP@y@ DB 'y', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_01FJMABOPO@x@
CONST	SEGMENT
??_C@_01FJMABOPO@x@ DB 'x', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@CHLOGLPG@undefined?5operator?5in?5performOp@
CONST	SEGMENT
??_C@_0CJ@CHLOGLPG@undefined?5operator?5in?5performOp@ DB 'undefined oper'
	DB	'ator in performOperation()', 00H		; `string'
CONST	ENDS
;	COMDAT _CT??_R0PEAX@88
xdata$x	SEGMENT
_CT??_R0PEAX@88 DD 01H
	DD	imagerel ??_R0PEAX@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	08H
	DD	00H
xdata$x	ENDS
;	COMDAT ??_R0PEAX@8
data$r	SEGMENT
??_R0PEAX@8 DQ	FLAT:??_7type_info@@6B@			; void * `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.PEAX', 00H
data$r	ENDS
;	COMDAT _CT??_R0PEAVexception@std@@@88
xdata$x	SEGMENT
_CT??_R0PEAVexception@std@@@88 DD 01H
	DD	imagerel ??_R0PEAVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	08H
	DD	00H
xdata$x	ENDS
;	COMDAT ??_R0PEAVexception@std@@@8
data$r	SEGMENT
??_R0PEAVexception@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::exception * `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.PEAVexception@std@@', 00H
data$r	ENDS
;	COMDAT _CTA2PEAVexception@std@@
xdata$x	SEGMENT
_CTA2PEAVexception@std@@ DD 02H
	DD	imagerel _CT??_R0PEAVexception@std@@@88
	DD	imagerel _CT??_R0PEAX@88
xdata$x	ENDS
;	COMDAT _TI2PEAVexception@std@@
xdata$x	SEGMENT
_TI2PEAVexception@std@@ DD 00H
	DD	00H
	DD	00H
	DD	imagerel _CTA2PEAVexception@std@@
xdata$x	ENDS
;	COMDAT ??_C@_01ODHLEDKK@?$CI@
CONST	SEGMENT
??_C@_01ODHLEDKK@?$CI@ DB '(', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01CLKCMJKC@?5@
CONST	SEGMENT
??_C@_01CLKCMJKC@?5@ DB ' ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01PKGAHCOL@?$CJ@
CONST	SEGMENT
??_C@_01PKGAHCOL@?$CJ@ DB ')', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02NJPGOMH@?$CFf@
CONST	SEGMENT
??_C@_02NJPGOMH@?$CFf@ DB '%f', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@@
CONST	SEGMENT
??_C@_00CNPNBAHC@@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ?_BUF_SIZE@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0_KB
CONST	SEGMENT
?_BUF_SIZE@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0_KB DQ 0000000000000010H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_BUF_SIZE
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
CONST	SEGMENT
??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
CONST	SEGMENT
??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'A', 00H
	DB	'd', 00H, 'j', 00H, 'u', 00H, 's', 00H, 't', 00H, '_', 00H, 'm'
	DB	00H, 'a', 00H, 'n', 00H, 'u', 00H, 'a', 00H, 'l', 00H, 'l', 00H
	DB	'y', 00H, '_', 00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, '_', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'g', 00H
	DB	'n', 00H, 'e', 00H, 'd', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1NA@MJBOBEJL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NA@MJBOBEJL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '9', 00H, '.', 00H, '3', 00H, '0', 00H, '1', 00H
	DB	'3', 00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'm', 00H
	DB	'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GI@MNEMJBML@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GI@MNEMJBML@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.29.30133\include\xmemory', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FCMFBGOM@invalid?5argument@
CONST	SEGMENT
??_C@_0BB@FCMFBGOM@invalid?5argument@ DB 'invalid argument', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA DD 099H ; `std::_Adjust_manually_vector_aligned'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0exception@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24 DD 010H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_alloc@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT _CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	imagerel _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	ENDS
;	COMDAT _TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_TI3?AVbad_array_new_length@std@@ DD 00H
	DD	imagerel ??1bad_array_new_length@std@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DQ FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DQ	FLAT:??_Ebad_array_new_length@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DQ FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DQ	FLAT:??_Ebad_alloc@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DQ FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DQ	FLAT:??_Eexception@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Voidify_iter@PEAUop@@@std@@YAPEAXPEAUop@@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@PEAVnode@@PEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVnode@@@std@@@std@@SAXAEAV?$allocator@PEAVnode@@@1@QEAPEAVnode@@$$QEAPEAV3@@Z DD 025051d01H
	DD	0118231dH
	DD	070110021H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@PEAVnode@@@std@@YA$$QEAPEAVnode@@AEAPEAV1@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_To_address@PEAPEAVnode@@@std@@YA?A_PAEBQEAPEAVnode@@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@Uop@@AEAU1@@?$_Default_allocator_traits@V?$allocator@Uop@@@std@@@std@@SAXAEAV?$allocator@Uop@@@1@QEAUop@@AEAU3@@Z DD 025051d01H
	DD	0118231dH
	DD	070110021H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEAUop@@@std@@YAAEAUop@@AEAU1@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEAV?$allocator@D@std@@@std@@YAAEAV?$allocator@D@0@AEAV10@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@PEAVnode@@@?$_Uninitialized_backout_al@V?$allocator@PEAVnode@@@std@@@std@@QEAAX$$QEAPEAVnode@@@Z DD 025051801H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@PEAVnode@@@std@@@std@@QEAAX_K@Z DD 05051601H
	DD	01130316H
	DD	0700c0019H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@PEAVnode@@@std@@@std@@QEAAPEAPEAVnode@@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Uninitialized_backout_al@V?$allocator@PEAVnode@@@std@@@std@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Uninitialized_backout_al@V?$allocator@PEAVnode@@@std@@@std@@QEAA@PEAPEAVnode@@AEAV?$allocator@PEAVnode@@@1@@Z DD 025051d01H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_memmove@PEAPEAVnode@@PEAPEAV1@@std@@YAPEAPEAVnode@@PEAPEAV1@00@Z DD 025051d01H
	DD	0118231dH
	DD	070110039H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAPEAVnode@@@std@@YA$$QEAPEAVnode@@AEAPEAV1@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@AEBQEAPEAVnode@@@std@@YA?A_TAEBQEAPEAVnode@@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@AEAUop@@@?$_Uninitialized_backout_al@V?$allocator@Uop@@@std@@@std@@QEAAXAEAUop@@@Z DD 025051801H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@Uop@@@std@@@std@@QEAAX_K@Z DD 05051601H
	DD	01130316H
	DD	0700c0019H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@Uop@@@std@@@std@@QEAAPEAUop@@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Uninitialized_backout_al@V?$allocator@Uop@@@std@@@std@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Uninitialized_backout_al@V?$allocator@Uop@@@std@@@std@@QEAA@PEAUop@@AEAV?$allocator@Uop@@@1@@Z DD 025051d01H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@AEBQEAUop@@@std@@YA?A_TAEBQEAUop@@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z DD 025051d01H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocators_equal@V?$allocator@D@std@@@std@@YA_NAEBV?$allocator@D@0@0@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEAV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEAV?$allocator@D@1@@Z DD 025051c01H
	DD	0117231cH
	DD	07010001dH
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$07@std@@YA_K_K@Z DD 025051301H
	DD	010e2313H
	DD	070070025H
	DD	05006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	045H
	DW	013dH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Uninitialized_move@PEAPEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@YAPEAPEAVnode@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVnode@@@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_move@PEAPEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@YAPEAPEAVnode@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVnode@@@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_move@PEAPEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@YAPEAPEAVnode@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVnode@@@0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Uninitialized_move@PEAPEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@YAPEAPEAVnode@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVnode@@@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Uninitialized_move@PEAPEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@YAPEAPEAVnode@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVnode@@@0@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_move@PEAPEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@YAPEAPEAVnode@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVnode@@@0@@Z
	DD	imagerel $ip2state$??$_Uninitialized_move@PEAPEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@YAPEAPEAVnode@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVnode@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move@PEAPEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@YAPEAPEAVnode@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVnode@@@0@@Z DD 025054c19H
	DD	011d2322H
	DD	07016002fH
	DD	05015H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$_Uninitialized_move@PEAPEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@YAPEAPEAVnode@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVnode@@@0@@Z
	DD	016aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Uninitialized_move@PEAPEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@YAPEAPEAVnode@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVnode@@@0@@Z$rtcName$0 DB 05fH ; std::_Uninitialized_move<node * *,std::allocator<node *> >
	DB	042H
	DB	061H
	DB	063H
	DB	06bH
	DB	06fH
	DB	075H
	DB	074H
	DB	00H
	ORG $+7
??$_Uninitialized_move@PEAPEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@YAPEAPEAVnode@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVnode@@@0@@Z$rtcVarDesc DD 068H ; std::_Uninitialized_move<node * *,std::allocator<node *> >
	DD	018H
	DQ	FLAT:??$_Uninitialized_move@PEAPEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@YAPEAPEAVnode@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVnode@@@0@@Z$rtcName$0
	ORG $+48
??$_Uninitialized_move@PEAPEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@YAPEAPEAVnode@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVnode@@@0@@Z$rtcFrameData DD 01H ; std::_Uninitialized_move<node * *,std::allocator<node *> >
	DD	00H
	DQ	FLAT:??$_Uninitialized_move@PEAPEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@YAPEAPEAVnode@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVnode@@@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@Uop@@@?$_Default_allocator_traits@V?$allocator@Uop@@@std@@@std@@SAXAEAV?$allocator@Uop@@@1@QEAUop@@@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@Uop@@@std@@YAPEAUop@@PEAU1@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD 035051301H
	DD	010e3313H
	DD	07007002bH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBV?$allocator@D@std@@@std@@YAAEBV?$allocator@D@0@AEBV10@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEAPEAD@std@@YAAEAPEADAEAPEAD@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Voidify_iter@PEAPEAD@std@@YAPEAXPEAPEAD@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	045H
	DB	0fbH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Uninitialized_copy@PEAUop@@V?$allocator@Uop@@@std@@@std@@YAPEAUop@@QEAU1@0PEAU1@AEAV?$allocator@Uop@@@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_copy@PEAUop@@V?$allocator@Uop@@@std@@@std@@YAPEAUop@@QEAU1@0PEAU1@AEAV?$allocator@Uop@@@0@@Z DB 06H
	DB	00H
	DB	00H
	DB	'y', 02H
	DB	02H
	DB	'n'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_copy@PEAUop@@V?$allocator@Uop@@@std@@@std@@YAPEAUop@@QEAU1@0PEAU1@AEAV?$allocator@Uop@@@0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Uninitialized_copy@PEAUop@@V?$allocator@Uop@@@std@@@std@@YAPEAUop@@QEAU1@0PEAU1@AEAV?$allocator@Uop@@@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Uninitialized_copy@PEAUop@@V?$allocator@Uop@@@std@@@std@@YAPEAUop@@QEAU1@0PEAU1@AEAV?$allocator@Uop@@@0@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_copy@PEAUop@@V?$allocator@Uop@@@std@@@std@@YAPEAUop@@QEAU1@0PEAU1@AEAV?$allocator@Uop@@@0@@Z
	DD	imagerel $ip2state$??$_Uninitialized_copy@PEAUop@@V?$allocator@Uop@@@std@@@std@@YAPEAUop@@QEAU1@0PEAU1@AEAV?$allocator@Uop@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_copy@PEAUop@@V?$allocator@Uop@@@std@@@std@@YAPEAUop@@QEAU1@0PEAU1@AEAV?$allocator@Uop@@@0@@Z DD 025054c19H
	DD	011d2322H
	DD	07016002fH
	DD	05015H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$_Uninitialized_copy@PEAUop@@V?$allocator@Uop@@@std@@@std@@YAPEAUop@@QEAU1@0PEAU1@AEAV?$allocator@Uop@@@0@@Z
	DD	016aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Uninitialized_copy@PEAUop@@V?$allocator@Uop@@@std@@@std@@YAPEAUop@@QEAU1@0PEAU1@AEAV?$allocator@Uop@@@0@@Z$rtcName$0 DB 05fH ; std::_Uninitialized_copy<op *,std::allocator<op> >
	DB	042H
	DB	061H
	DB	063H
	DB	06bH
	DB	06fH
	DB	075H
	DB	074H
	DB	00H
	ORG $+7
??$_Uninitialized_copy@PEAUop@@V?$allocator@Uop@@@std@@@std@@YAPEAUop@@QEAU1@0PEAU1@AEAV?$allocator@Uop@@@0@@Z$rtcVarDesc DD 068H ; std::_Uninitialized_copy<op *,std::allocator<op> >
	DD	018H
	DQ	FLAT:??$_Uninitialized_copy@PEAUop@@V?$allocator@Uop@@@std@@@std@@YAPEAUop@@QEAU1@0PEAU1@AEAV?$allocator@Uop@@@0@@Z$rtcName$0
	ORG $+48
??$_Uninitialized_copy@PEAUop@@V?$allocator@Uop@@@std@@@std@@YAPEAUop@@QEAU1@0PEAU1@AEAV?$allocator@Uop@@@0@@Z$rtcFrameData DD 01H ; std::_Uninitialized_copy<op *,std::allocator<op> >
	DD	00H
	DQ	FLAT:??$_Uninitialized_copy@PEAUop@@V?$allocator@Uop@@@std@@@std@@YAPEAUop@@QEAU1@0PEAU1@AEAV?$allocator@Uop@@@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@V?$allocator@Uop@@@std@@@std@@YA$$QEAV?$allocator@Uop@@@0@AEAV10@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 060H
	DD	imagerel $ip2state$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD 025051819H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Voidify_iter@PEAPEAVnode@@@std@@YAPEAXPEAPEAVnode@@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	040H
	DW	03deH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$1@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z DB 0aH
	DB	00H
	DB	00H
	DB	0e9H, 03H
	DB	02H
	DB	'<'
	DB	04H
	DB	099H, 09H
	DB	02H
	DB	't'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z DB 02H
	DB	01H
	DB	080H
	DD	imagerel ?catch$1@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z DB 02H
	DB	02H
	DB	02H
	DB	04H
	DD	imagerel $handlerMap$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z DB 06H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA
	DB	028H
	DB	030H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z DB 038H
	DD	imagerel $stateUnwindMap$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z
	DD	imagerel $tryMap$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z
	DD	imagerel $ip2state$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z DD 025054719H
	DD	0118231dH
	DD	070110041H
	DD	05010H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z
	DD	01fbH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z$rtcName$0 DB 05fH ; std::_Insert_string<char,std::char_traits<char>,unsigned __int64>
	DB	04fH
	DB	06bH
	DB	00H
	ORG $+12
??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z$rtcVarDesc DD 068H ; std::_Insert_string<char,std::char_traits<char>,unsigned __int64>
	DD	010H
	DQ	FLAT:??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z$rtcName$0
	ORG $+48
??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z$rtcFrameData DD 01H ; std::_Insert_string<char,std::char_traits<char>,unsigned __int64>
	DD	00H
	DQ	FLAT:??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$00@std@@YA_K_K@Z DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z DB 060H
	DD	imagerel $ip2state$??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z DD 025051d19H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$0DA@@std@@YA_K_K@Z DD 025051301H
	DD	010e2313H
	DD	070070025H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Destroy_range@V?$allocator@Uop@@@std@@@std@@YAXPEAUop@@QEAU1@AEAV?$allocator@Uop@@@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Destroy_range@V?$allocator@Uop@@@std@@@std@@YAXPEAUop@@QEAU1@AEAV?$allocator@Uop@@@0@@Z DB 060H
	DD	imagerel $ip2state$??$_Destroy_range@V?$allocator@Uop@@@std@@@std@@YAXPEAUop@@QEAU1@AEAV?$allocator@Uop@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@Uop@@@std@@@std@@YAXPEAUop@@QEAU1@AEAV?$allocator@Uop@@@0@@Z DD 025051d19H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Destroy_range@V?$allocator@Uop@@@std@@@std@@YAXPEAUop@@QEAU1@AEAV?$allocator@Uop@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@Ubraket_group@@@std@@@std@@YAXPEAUbraket_group@@QEAU1@AEAV?$allocator@Ubraket_group@@@0@@Z DD 025051d01H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DB 060H
	DD	imagerel $ip2state$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD 025051819H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z DD 025051301H
	DD	010e2313H
	DD	070070025H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$max@_K@std@@YAAEB_KAEB_K0@Z DD 025051801H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z DD 025051c01H
	DD	0117231cH
	DD	07010001dH
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Pocma@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@0@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@PEADAEAPEAD@std@@YAXAEAPEAD0@Z DD 025051801H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@D@std@@YAPEADPEAD@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z DD 025051801H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Pocca@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@AEBV10@@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	045H
	DW	022bH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z DD 035054c19H
	DD	011d3322H
	DD	070160043H
	DD	05015H
	DD	imagerel __GSHandlerCheck
	DD	0208H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>
	DB	04eH
	DB	065H
	DB	077H
	DB	05fH
	DB	070H
	DB	074H
	DB	072H
	DB	00H
	ORG $+7
??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z$rtcVarDesc DD 0f8H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>
	DD	08H
	DQ	FLAT:??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z$rtcName$0
	ORG $+48
??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>
	DD	00H
	DQ	FLAT:??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBA@QEADQEBD_K12@Z DD 025052201H
	DD	011d2322H
	DD	070160021H
	DD	05015H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	045H
	DW	018bH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z DD 025054c19H
	DD	011d2322H
	DD	07016002dH
	DD	05015H
	DD	imagerel __GSHandlerCheck
	DD	0158H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
	DB	04eH
	DB	065H
	DB	077H
	DB	05fH
	DB	070H
	DB	074H
	DB	072H
	DB	00H
	ORG $+7
??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcVarDesc DD 088H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
	DD	08H
	DQ	FLAT:??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcName$0
	ORG $+48
??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
	DD	00H
	DQ	FLAT:??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBA@QEAD_KQEBD@Z DD 025052201H
	DD	011d2322H
	DD	070160021H
	DD	05015H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	045H
	DW	018cH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Reallocate_for@V<lambda_138c3d7c38c85abb84c7fc7bfe5747b7>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_138c3d7c38c85abb84c7fc7bfe5747b7>@@D@Z DD 025054c19H
	DD	011d2322H
	DD	07016002dH
	DD	05015H
	DD	imagerel __GSHandlerCheck
	DD	0158H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Reallocate_for@V<lambda_138c3d7c38c85abb84c7fc7bfe5747b7>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_138c3d7c38c85abb84c7fc7bfe5747b7>@@D@Z$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_138c3d7c38c85abb84c7fc7bfe5747b7>,char>
	DB	04eH
	DB	065H
	DB	077H
	DB	05fH
	DB	070H
	DB	074H
	DB	072H
	DB	00H
	ORG $+7
??$_Reallocate_for@V<lambda_138c3d7c38c85abb84c7fc7bfe5747b7>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_138c3d7c38c85abb84c7fc7bfe5747b7>@@D@Z$rtcVarDesc DD 088H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_138c3d7c38c85abb84c7fc7bfe5747b7>,char>
	DD	08H
	DQ	FLAT:??$_Reallocate_for@V<lambda_138c3d7c38c85abb84c7fc7bfe5747b7>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_138c3d7c38c85abb84c7fc7bfe5747b7>@@D@Z$rtcName$0
	ORG $+48
??$_Reallocate_for@V<lambda_138c3d7c38c85abb84c7fc7bfe5747b7>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_138c3d7c38c85abb84c7fc7bfe5747b7>@@D@Z$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_138c3d7c38c85abb84c7fc7bfe5747b7>,char>
	DD	00H
	DQ	FLAT:??$_Reallocate_for@V<lambda_138c3d7c38c85abb84c7fc7bfe5747b7>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_138c3d7c38c85abb84c7fc7bfe5747b7>@@D@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_138c3d7c38c85abb84c7fc7bfe5747b7>@@QEBA@QEAD_KD@Z DD 025052201H
	DD	011d2322H
	DD	070160021H
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@PEAVnode@@@std@@@std@@YAXPEAPEAVnode@@QEAPEAV1@AEAV?$allocator@PEAVnode@@@0@@Z DD 025051d01H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z DD 025051c01H
	DD	0117231cH
	DD	07010001dH
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Traits_compare@U?$char_traits@D@std@@@std@@YAHQEBD_K01@Z DD 025052201H
	DD	011d2322H
	DD	070160021H
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$min@_K@std@@YAAEB_KAEB_K0@Z DD 025051801H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 025051319H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DB 06H
	DB	00H
	DB	00H
	DB	'p'
	DB	02H
	DB	0f1H, 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DB 028H
	DD	imagerel $stateUnwindMap$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
	DD	imagerel $ip2state$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 025051811H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 025051319H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 025051801H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Ucopy@PEAUop@@@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@AEAAPEAUop@@PEAU2@00@Z DD 025052201H
	DD	011d2322H
	DD	07016001dH
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Tidy_guard@V?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@@std@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z DD 025051d01H
	DD	0118231dH
	DD	070110021H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0V?$allocator@Uop@@@std@@$$V@?$_Compressed_pair@V?$allocator@Uop@@@std@@V?$_Vector_val@U?$_Simple_types@Uop@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@Uop@@@1@@Z DD 025051c01H
	DD	0117231cH
	DD	07010001dH
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0Uop@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@Uop@@@1@@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0Ubraket_group@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@Ubraket_group@@@1@@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z DD 025051801H
	DD	01132318H
	DD	0700c0025H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@PEAVnode@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVnode@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z DD 025051801H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0PEAVnode@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAVnode@@@1@@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$_Emplace_reallocate@AEBQEAVnode@@@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAPEAPEAVnode@@QEAPEAV2@AEBQEAV2@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Emplace_reallocate@AEBQEAVnode@@@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAPEAPEAVnode@@QEAPEAV2@AEBQEAV2@@Z DB 06H
	DB	00H
	DB	00H
	DB	'm', 04H
	DB	02H
	DB	0b1H, 03H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$_Emplace_reallocate@AEBQEAVnode@@@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAPEAPEAVnode@@QEAPEAV2@AEBQEAV2@@Z DB 02H
	DB	01H
	DB	080H
	DD	imagerel ?catch$0@?0???$_Emplace_reallocate@AEBQEAVnode@@@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAPEAPEAVnode@@QEAPEAV2@AEBQEAV2@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Emplace_reallocate@AEBQEAVnode@@@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAPEAPEAVnode@@QEAPEAV2@AEBQEAV2@@Z DB 02H
	DB	00H
	DB	00H
	DB	02H
	DD	imagerel $handlerMap$??$_Emplace_reallocate@AEBQEAVnode@@@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAPEAPEAVnode@@QEAPEAV2@AEBQEAV2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Emplace_reallocate@AEBQEAVnode@@@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAPEAPEAVnode@@QEAPEAV2@AEBQEAV2@@Z DB 04H
	DB	08H
	DB	010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Emplace_reallocate@AEBQEAVnode@@@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAPEAPEAVnode@@QEAPEAV2@AEBQEAV2@@Z DB 038H
	DD	imagerel $stateUnwindMap$??$_Emplace_reallocate@AEBQEAVnode@@@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAPEAPEAVnode@@QEAPEAV2@AEBQEAV2@@Z
	DD	imagerel $tryMap$??$_Emplace_reallocate@AEBQEAVnode@@@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAPEAPEAVnode@@QEAPEAV2@AEBQEAV2@@Z
	DD	imagerel $ip2state$??$_Emplace_reallocate@AEBQEAVnode@@@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAPEAPEAVnode@@QEAPEAV2@AEBQEAV2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_reallocate@AEBQEAVnode@@@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAPEAPEAVnode@@QEAPEAV2@AEBQEAV2@@Z DD 025051d19H
	DD	0118231dH
	DD	070110049H
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Emplace_reallocate@AEBQEAVnode@@@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAPEAPEAVnode@@QEAPEAV2@AEBQEAV2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@PEAVnode@@AEBQEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVnode@@@std@@@std@@SAXAEAV?$allocator@PEAVnode@@@1@QEAPEAVnode@@AEBQEAV3@@Z DD 025051d01H
	DD	0118231dH
	DD	070110021H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@PEAVnode@@@std@@YAPEAPEAVnode@@PEAPEAV1@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back_with_unused_capacity@AEBQEAVnode@@@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAA?A_TAEBQEAVnode@@@Z DD 025051801H
	DD	01132318H
	DD	0700c002bH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBQEAVnode@@@std@@YAAEBQEAVnode@@AEBQEAV1@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$emplace_back@AEBQEAVnode@@@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAA?A_TAEBQEAVnode@@@Z DD 025051801H
	DD	01132318H
	DD	0700c0029H
	DD	0500bH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	03aH
	DW	03d2H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z DB 0aH
	DB	00H
	DB	00H
	DB	0caH
	DB	02H
	DB	011H, 02H
	DB	04H
	DB	08dH, 09H
	DB	02H
	DB	0c0H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z DB 02H
	DB	01H
	DB	080H
	DD	imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z DB 02H
	DB	02H
	DB	02H
	DB	04H
	DD	imagerel $handlerMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z DB 06H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA
	DB	028H
	DB	030H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z DB 038H
	DD	imagerel $stateUnwindMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z
	DD	imagerel $tryMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z
	DD	imagerel $ip2state$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z DD 025054119H
	DD	01122317H
	DD	0700b0049H
	DD	0500aH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z
	DD	023bH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z$rtcName$0 DB 05fH ; std::operator<<<std::char_traits<char> >
	DB	04fH
	DB	06bH
	DB	00H
	ORG $+12
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z$rtcVarDesc DD 048H ; std::operator<<<std::char_traits<char> >
	DD	010H
	DQ	FLAT:??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z$rtcName$0
	ORG $+48
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z$rtcFrameData DD 01H ; std::operator<<<std::char_traits<char> >
	DD	00H
	DQ	FLAT:??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	03bH
	DW	03f3H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 0aH
	DB	00H
	DB	00H
	DB	'A', 04H
	DB	02H
	DB	'<'
	DB	04H
	DB	095H, 09H
	DB	02H
	DB	't'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 02H
	DB	01H
	DB	080H
	DD	imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 02H
	DB	02H
	DB	02H
	DB	04H
	DD	imagerel $handlerMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 06H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DB	028H
	DB	030H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 038H
	DD	imagerel $stateUnwindMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	imagerel $tryMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	imagerel $ip2state$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD 025054219H
	DD	01132318H
	DD	0700c0045H
	DD	0500bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	021bH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcName$0 DB 05fH ; std::operator<<<std::char_traits<char> >
	DB	04fH
	DB	06bH
	DB	00H
	ORG $+12
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcVarDesc DD 088H ; std::operator<<<std::char_traits<char> >
	DD	010H
	DQ	FLAT:??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcName$0
	ORG $+48
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcFrameData DD 01H ; std::operator<<<std::char_traits<char> >
	DD	00H
	DQ	FLAT:??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	02aH
	DW	0895H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$main$dtor$15 DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$main$dtor$13 DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$main$dtor$12 DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$main$dtor$11 DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$main$dtor$10 DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$main$dtor$2 DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$main$dtor$1 DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$main$dtor$0 DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$main DB '('
	DB	00H
	DB	00H
	DB	0f5H, 02H
	DB	02H
	DB	'<'
	DB	04H
	DB	'i', 03H
	DB	06H
	DB	08cH
	DB	04H
	DB	0a1H, 05H
	DB	02H
	DB	04H
	DB	04H
	DB	'1', 09H
	DB	08H
	DB	'u', 02H
	DB	0aH
	DB	'H'
	DB	08H
	DB	0aaH
	DB	04H
	DB	01aH
	DB	02H
	DB	01aH
	DB	00H
	DB	0aeH
	DB	0cH
	DB	088H
	DB	0eH
	DB	'4'
	DB	0cH
	DB	08eH
	DB	010H
	DB	'H'
	DB	0cH
	DB	0d8H
	DB	00H
	DB	086H
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$main DB 010H
	DB	0eH
	DD	imagerel main$dtor$0
	DB	02eH
	DD	imagerel main$dtor$1
	DB	02eH
	DD	imagerel main$dtor$2
	DB	056H
	DD	imagerel main$dtor$10
	DB	02eH
	DD	imagerel main$dtor$11
	DB	0d6H
	DD	imagerel main$dtor$12
	DB	02eH
	DD	imagerel main$dtor$13
	DB	056H
	DD	imagerel main$dtor$15
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$main DB 028H
	DD	imagerel $stateUnwindMap$main
	DD	imagerel $ip2state$main
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$main DD	025053119H
	DD	010a230fH
	DD	070030145H
	DD	05002H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$main
	DD	0a12H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
main$rtcName$0 DB 073H
	DB	075H
	DB	070H
	DB	070H
	DB	06fH
	DB	072H
	DB	074H
	DB	065H
	DB	064H
	DB	04fH
	DB	070H
	DB	073H
	DB	00H
	ORG $+3
main$rtcName$1 DB 074H
	DB	06fH
	DB	06bH
	DB	00H
	ORG $+4
main$rtcName$2 DB 06dH
	DB	061H
	DB	06eH
	DB	061H
	DB	067H
	DB	065H
	DB	072H
	DB	00H
main$rtcName$3 DB 070H
	DB	072H
	DB	065H
	DB	076H
	DB	043H
	DB	068H
	DB	061H
	DB	072H
	DB	00H
	ORG $+7
main$rtcName$4 DB 074H
	DB	06fH
	DB	06bH
	DB	06cH
	DB	06fH
	DB	063H
	DB	061H
	DB	06cH
	DB	00H
	ORG $+7
main$rtcName$5 DB 062H
	DB	075H
	DB	069H
	DB	06cH
	DB	064H
	DB	065H
	DB	072H
	DB	00H
main$rtcName$6 DB 062H
	DB	075H
	DB	069H
	DB	06cH
	DB	064H
	DB	065H
	DB	072H
	DB	032H
	DB	00H
	ORG $+7
main$rtcFrameData DD 07H
	DD	00H
	DQ	FLAT:main$rtcVarDesc
	ORG $+8
main$rtcVarDesc DD 0250H
	DD	040H
	DQ	FLAT:main$rtcName$6
	DD	01d0H
	DD	040H
	DQ	FLAT:main$rtcName$5
	DD	0188H
	DD	028H
	DQ	FLAT:main$rtcName$4
	DD	0164H
	DD	01H
	DQ	FLAT:main$rtcName$3
	DD	0e0H
	DD	068H
	DQ	FLAT:main$rtcName$2
	DD	0a8H
	DD	018H
	DQ	FLAT:main$rtcName$1
	DD	024H
	DD	05H
	DQ	FLAT:main$rtcName$0
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsOperator@@YA_ND@Z DD 025051201H
	DD	010d2312H
	DD	07006002dH
	DD	05005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?setPrev@@YA_NDPEAD@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsSupportedVariableName@@YA_ND@Z DD 025051201H
	DD	010d2312H
	DD	07006002dH
	DD	05005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?isTokenizable@@YA_ND@Z DD 025051201H
	DD	010d2312H
	DD	07006001fH
	DD	05005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@0@Z DD 035051d01H
	DD	0118331dH
	DD	070110027H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z DD 025051d01H
	DD	0118231dH
	DD	070110021H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z DD 025051d01H
	DD	0118231dH
	DD	070110021H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBDAEBV10@@Z DD 045051d01H
	DD	0118431dH
	DD	070110035H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z DD 025051801H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@tree_builder@@QEAAX_K@Z DD 05051601H
	DD	01130316H
	DD	0700c0019H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1tree_builder@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?calc@tree_builder@@QEAANNNN@Z DD 035052501H
	DD	01203325H
	DD	070190027H
	DD	05018H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	03bH
	DW	01beH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?calcNode@tree_builder@@QEAANPEAVnode@@@Z DD 035054219H
	DD	01133318H
	DD	0700c0043H
	DD	0500bH
	DD	imagerel __GSHandlerCheck
	DD	0200H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?calcNode@tree_builder@@QEAANPEAVnode@@@Z$rtcName$0 DB 063H ; tree_builder::calcNode
	DB	00H
	ORG $+14
?calcNode@tree_builder@@QEAANPEAVnode@@@Z$rtcVarDesc DD 058H ; tree_builder::calcNode
	DD	028H
	DQ	FLAT:?calcNode@tree_builder@@QEAANPEAVnode@@@Z$rtcName$0
	ORG $+48
?calcNode@tree_builder@@QEAANPEAVnode@@@Z$rtcFrameData DD 01H ; tree_builder::calcNode
	DD	00H
	DQ	FLAT:?calcNode@tree_builder@@QEAANPEAVnode@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??performOperation@tree_builder@@QEAANUop@@NN@Z@4HA DD 031001H
	DD	0700c6210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?performOperation@tree_builder@@QEAANUop@@NN@Z DB 06H
	DB	00H
	DB	00H
	DB	'H'
	DB	02H
	DB	'%', 05H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?performOperation@tree_builder@@QEAANUop@@NN@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??performOperation@tree_builder@@QEAANUop@@NN@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?performOperation@tree_builder@@QEAANUop@@NN@Z DB 028H
	DD	imagerel $stateUnwindMap$?performOperation@tree_builder@@QEAANUop@@NN@Z
	DD	imagerel $ip2state$?performOperation@tree_builder@@QEAANUop@@NN@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?performOperation@tree_builder@@QEAANUop@@NN@Z DD 035052411H
	DD	011f3324H
	DD	07018002fH
	DD	05017H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?performOperation@tree_builder@@QEAANUop@@NN@Z
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	036H
	DW	022eH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$4@?0??build@tree_builder@@QEAAXXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$3@?0??build@tree_builder@@QEAAXXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0??build@tree_builder@@QEAAXXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??build@tree_builder@@QEAAXXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?build@tree_builder@@QEAAXXZ DB 012H
	DB	00H
	DB	00H
	DB	0d6H
	DB	02H
	DB	'D'
	DB	04H
	DB	011H, 02H
	DB	06H
	DB	'"'
	DB	08H
	DB	0f0H
	DB	06H
	DB	0c8H
	DB	04H
	DB	01aH
	DB	02H
	DB	014H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?build@tree_builder@@QEAAXXZ DB 08H
	DB	0eH
	DD	imagerel ?dtor$0@?0??build@tree_builder@@QEAAXXZ@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??build@tree_builder@@QEAAXXZ@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0??build@tree_builder@@QEAAXXZ@4HA
	DB	02eH
	DD	imagerel ?dtor$4@?0??build@tree_builder@@QEAAXXZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?build@tree_builder@@QEAAXXZ DB 028H
	DD	imagerel $stateUnwindMap$?build@tree_builder@@QEAAXXZ
	DD	imagerel $ip2state$?build@tree_builder@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?build@tree_builder@@QEAAXXZ DD 035053d19H
	DD	010e3313H
	DD	070070081H
	DD	05006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?build@tree_builder@@QEAAXXZ
	DD	03faH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?build@tree_builder@@QEAAXXZ$rtcName$0 DB 06fH		; tree_builder::build
	DB	070H
	DB	065H
	DB	072H
	DB	061H
	DB	074H
	DB	06fH
	DB	072H
	DB	073H
	DB	00H
	ORG $+6
?build@tree_builder@@QEAAXXZ$rtcName$1 DB 06eH		; tree_builder::build
	DB	075H
	DB	06dH
	DB	062H
	DB	065H
	DB	072H
	DB	073H
	DB	00H
?build@tree_builder@@QEAAXXZ$rtcName$2 DB 06dH		; tree_builder::build
	DB	061H
	DB	078H
	DB	04eH
	DB	06fH
	DB	064H
	DB	065H
	DB	00H
?build@tree_builder@@QEAAXXZ$rtcName$3 DB 06eH		; tree_builder::build
	DB	065H
	DB	077H
	DB	04eH
	DB	06fH
	DB	064H
	DB	065H
	DB	00H
	ORG $+8
?build@tree_builder@@QEAAXXZ$rtcVarDesc DD 0148H	; tree_builder::build
	DD	08H
	DQ	FLAT:?build@tree_builder@@QEAAXXZ$rtcName$3
	DD	0f8H
	DD	030H
	DQ	FLAT:?build@tree_builder@@QEAAXXZ$rtcName$2
	DD	078H
	DD	020H
	DQ	FLAT:?build@tree_builder@@QEAAXXZ$rtcName$1
	DD	038H
	DD	020H
	DQ	FLAT:?build@tree_builder@@QEAAXXZ$rtcName$0
	ORG $+192
?build@tree_builder@@QEAAXXZ$rtcFrameData DD 04H	; tree_builder::build
	DD	00H
	DQ	FLAT:?build@tree_builder@@QEAAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	045H
	DW	040bH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$8@?0??addRight@tree_builder@@QEAAXPEAVnode@@HH@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$7@?0??addRight@tree_builder@@QEAAXPEAVnode@@HH@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$5@?0??addRight@tree_builder@@QEAAXPEAVnode@@HH@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$4@?0??addRight@tree_builder@@QEAAXPEAVnode@@HH@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$3@?0??addRight@tree_builder@@QEAAXPEAVnode@@HH@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??addRight@tree_builder@@QEAAXPEAVnode@@HH@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?addRight@tree_builder@@QEAAXPEAVnode@@HH@Z DB 01cH
	DB	00H
	DB	00H
	DB	011H, 02H
	DB	02H
	DB	0a5H, 03H
	DB	04H
	DB	'L'
	DB	08H
	DB	':'
	DB	0aH
	DB	0f0H
	DB	08H
	DB	0f2H
	DB	02H
	DB	'D'
	DB	0cH
	DB	0d2H
	DB	0eH
	DB	0aeH
	DB	0cH
	DB	016H
	DB	0eH
	DB	01cH
	DB	010H
	DB	'*'
	DB	02H
	DB	082H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?addRight@tree_builder@@QEAAXPEAVnode@@HH@Z DB 010H
	DB	0eH
	DD	imagerel ?dtor$0@?0??addRight@tree_builder@@QEAAXPEAVnode@@HH@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0??addRight@tree_builder@@QEAAXPEAVnode@@HH@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$4@?0??addRight@tree_builder@@QEAAXPEAVnode@@HH@Z@4HA
	DB	07eH
	DD	imagerel ?dtor$4@?0??addRight@tree_builder@@QEAAXPEAVnode@@HH@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$5@?0??addRight@tree_builder@@QEAAXPEAVnode@@HH@Z@4HA
	DB	0ceH
	DD	imagerel ?dtor$7@?0??addRight@tree_builder@@QEAAXPEAVnode@@HH@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$8@?0??addRight@tree_builder@@QEAAXPEAVnode@@HH@Z@4HA
	DB	03dH
	DB	02H
	DD	imagerel ?dtor$8@?0??addRight@tree_builder@@QEAAXPEAVnode@@HH@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?addRight@tree_builder@@QEAAXPEAVnode@@HH@Z DB 028H
	DD	imagerel $stateUnwindMap$?addRight@tree_builder@@QEAAXPEAVnode@@HH@Z
	DD	imagerel $ip2state$?addRight@tree_builder@@QEAAXPEAVnode@@HH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?addRight@tree_builder@@QEAAXPEAVnode@@HH@Z DD 035054c19H
	DD	011d3322H
	DD	0701600a9H
	DD	05015H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?addRight@tree_builder@@QEAAXPEAVnode@@HH@Z
	DD	0532H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?addRight@tree_builder@@QEAAXPEAVnode@@HH@Z$rtcName$0 DB 06fH ; tree_builder::addRight
	DB	070H
	DB	065H
	DB	072H
	DB	061H
	DB	074H
	DB	06fH
	DB	072H
	DB	073H
	DB	00H
	ORG $+6
?addRight@tree_builder@@QEAAXPEAVnode@@HH@Z$rtcName$1 DB 06eH ; tree_builder::addRight
	DB	065H
	DB	078H
	DB	074H
	DB	04dH
	DB	061H
	DB	078H
	DB	069H
	DB	06dH
	DB	075H
	DB	06dH
	DB	04eH
	DB	06fH
	DB	064H
	DB	065H
	DB	00H
?addRight@tree_builder@@QEAAXPEAVnode@@HH@Z$rtcVarDesc DD 0b8H ; tree_builder::addRight
	DD	030H
	DQ	FLAT:?addRight@tree_builder@@QEAAXPEAVnode@@HH@Z$rtcName$1
	DD	038H
	DD	020H
	DQ	FLAT:?addRight@tree_builder@@QEAAXPEAVnode@@HH@Z$rtcName$0
	ORG $+96
?addRight@tree_builder@@QEAAXPEAVnode@@HH@Z$rtcFrameData DD 02H ; tree_builder::addRight
	DD	00H
	DQ	FLAT:?addRight@tree_builder@@QEAAXPEAVnode@@HH@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	040H
	DW	0518H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$10@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$9@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$7@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$6@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$5@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?addLeft@tree_builder@@QEAAXPEAVnode@@H@Z DB '$'
	DB	00H
	DB	00H
	DB	0f6H
	DB	02H
	DB	0ccH
	DB	04H
	DB	0aeH
	DB	02H
	DB	016H
	DB	04H
	DB	01cH
	DB	06H
	DB	'*'
	DB	00H
	DB	0a9H, 04H
	DB	08H
	DB	'F'
	DB	0cH
	DB	':'
	DB	0eH
	DB	0eaH
	DB	0cH
	DB	0f2H
	DB	00H
	DB	'>'
	DB	010H
	DB	0ccH
	DB	012H
	DB	0aeH
	DB	010H
	DB	016H
	DB	012H
	DB	01cH
	DB	014H
	DB	'*'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?addLeft@tree_builder@@QEAAXPEAVnode@@H@Z DB 014H
	DB	0eH
	DD	imagerel ?dtor$0@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA
	DB	05eH
	DD	imagerel ?dtor$1@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA
	DB	086H
	DD	imagerel ?dtor$5@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$6@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA
	DB	0d6H
	DD	imagerel ?dtor$6@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$7@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA
	DB	04dH
	DB	02H
	DD	imagerel ?dtor$9@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA
	DB	036H
	DD	imagerel ?dtor$10@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA
	DB	0fdH
	DB	02H
	DD	imagerel ?dtor$10@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?addLeft@tree_builder@@QEAAXPEAVnode@@H@Z DB 028H
	DD	imagerel $stateUnwindMap$?addLeft@tree_builder@@QEAAXPEAVnode@@H@Z
	DD	imagerel $ip2state$?addLeft@tree_builder@@QEAAXPEAVnode@@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?addLeft@tree_builder@@QEAAXPEAVnode@@H@Z DD 035054719H
	DD	0118331dH
	DD	0701100d5H
	DD	05010H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?addLeft@tree_builder@@QEAAXPEAVnode@@H@Z
	DD	0692H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?addLeft@tree_builder@@QEAAXPEAVnode@@H@Z$rtcName$0 DB 06eH ; tree_builder::addLeft
	DB	065H
	DB	078H
	DB	074H
	DB	04dH
	DB	061H
	DB	078H
	DB	069H
	DB	06dH
	DB	075H
	DB	06dH
	DB	04eH
	DB	06fH
	DB	064H
	DB	065H
	DB	00H
?addLeft@tree_builder@@QEAAXPEAVnode@@H@Z$rtcVarDesc DD 078H ; tree_builder::addLeft
	DD	030H
	DQ	FLAT:?addLeft@tree_builder@@QEAAXPEAVnode@@H@Z$rtcName$0
	ORG $+48
?addLeft@tree_builder@@QEAAXPEAVnode@@H@Z$rtcFrameData DD 01H ; tree_builder::addLeft
	DD	00H
	DQ	FLAT:?addLeft@tree_builder@@QEAAXPEAVnode@@H@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	045H
	DW	0221H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0??findMaxIndex@tree_builder@@QEAAHV?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@HHH@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??findMaxIndex@tree_builder@@QEAAHV?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@HHH@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?findMaxIndex@tree_builder@@QEAAHV?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@HHH@Z DB 0eH
	DB	00H
	DB	00H
	DB	098H
	DB	02H
	DB	'!', 02H
	DB	04H
	DB	095H, 03H
	DB	02H
	DB	'"'
	DB	04H
	DB	'.'
	DB	02H
	DB	'4'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?findMaxIndex@tree_builder@@QEAAHV?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@HHH@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0??findMaxIndex@tree_builder@@QEAAHV?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@HHH@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??findMaxIndex@tree_builder@@QEAAHV?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@HHH@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?findMaxIndex@tree_builder@@QEAAHV?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@HHH@Z DB 028H
	DD	imagerel $stateUnwindMap$?findMaxIndex@tree_builder@@QEAAHV?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@HHH@Z
	DD	imagerel $ip2state$?findMaxIndex@tree_builder@@QEAAHV?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@HHH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?findMaxIndex@tree_builder@@QEAAHV?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@HHH@Z DD 025054c19H
	DD	011d2322H
	DD	070160057H
	DD	05015H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?findMaxIndex@tree_builder@@QEAAHV?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@HHH@Z
	DD	02aaH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?findMaxIndex@tree_builder@@QEAAHV?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@HHH@Z$rtcName$0 DB 06fH ; tree_builder::findMaxIndex
	DB	070H
	DB	065H
	DB	072H
	DB	00H
	ORG $+11
?findMaxIndex@tree_builder@@QEAAHV?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@HHH@Z$rtcVarDesc DD 0e8H ; tree_builder::findMaxIndex
	DD	030H
	DQ	FLAT:?findMaxIndex@tree_builder@@QEAAHV?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@HHH@Z$rtcName$0
	ORG $+48
?findMaxIndex@tree_builder@@QEAAHV?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@HHH@Z$rtcFrameData DD 01H ; tree_builder::findMaxIndex
	DD	00H
	DQ	FLAT:?findMaxIndex@tree_builder@@QEAAHV?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@HHH@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	040H
	DW	02c4H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$8@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$7@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$6@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$5@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$4@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$3@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB '"'
	DB	00H
	DB	00H
	DB	0b9H, 02H
	DB	02H
	DB	014H
	DB	04H
	DB	0c8H
	DB	06H
	DB	't'
	DB	08H
	DB	'^'
	DB	0aH
	DB	'd'
	DB	0cH
	DB	'^'
	DB	0eH
	DB	'X'
	DB	010H
	DB	082H
	DB	0eH
	DB	01aH
	DB	0cH
	DB	01aH
	DB	0aH
	DB	01aH
	DB	08H
	DB	01aH
	DB	06H
	DB	01aH
	DB	04H
	DB	01aH
	DB	02H
	DB	014H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 010H
	DB	0eH
	DD	imagerel ?dtor$1@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$4@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$5@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$6@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$7@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$8@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 028H
	DD	imagerel $stateUnwindMap$?get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	imagerel $ip2state$?get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 025054719H
	DD	0118231dH
	DD	070110095H
	DD	05010H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	049aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$rtcName$0 DB 06cH ; tree_builder::get_string
	DB	065H
	DB	066H
	DB	074H
	DB	05fH
	DB	073H
	DB	074H
	DB	072H
	DB	00H
	ORG $+7
?get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$rtcName$1 DB 072H ; tree_builder::get_string
	DB	069H
	DB	067H
	DB	068H
	DB	074H
	DB	05fH
	DB	073H
	DB	074H
	DB	072H
	DB	00H
	ORG $+6
?get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$rtcVarDesc DD 068H ; tree_builder::get_string
	DD	028H
	DQ	FLAT:?get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$rtcName$1
	DD	028H
	DD	028H
	DQ	FLAT:?get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$rtcName$0
	ORG $+96
?get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$rtcFrameData DD 02H ; tree_builder::get_string
	DD	00H
	DQ	FLAT:?get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	03bH
	DB	0dcH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??random_to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?random_to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DB 06H
	DB	00H
	DB	00H
	DB	0dH, 02H
	DB	02H
	DB	'f'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?random_to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??random_to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?random_to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DB 028H
	DD	imagerel $stateUnwindMap$?random_to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	imagerel $ip2state$?random_to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?random_to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 025054219H
	DD	01132318H
	DD	0700c002dH
	DD	0500bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?random_to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	015aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?random_to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$rtcName$0 DB 065H ; tree_builder::random_to_string
	DB	071H
	DB	00H
	ORG $+13
?random_to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$rtcVarDesc DD 048H ; tree_builder::random_to_string
	DD	028H
	DQ	FLAT:?random_to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$rtcName$0
	ORG $+48
?random_to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$rtcFrameData DD 01H ; tree_builder::random_to_string
	DD	00H
	DQ	FLAT:?random_to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	03bH
	DW	0122H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0??to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DB 0aH
	DB	00H
	DB	00H
	DB	0f4H
	DB	02H
	DB	'x'
	DB	04H
	DB	'r'
	DB	02H
	DB	01aH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0??to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DB 028H
	DD	imagerel $stateUnwindMap$?to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	imagerel $ip2state$?to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 025054219H
	DD	01132318H
	DD	0700c0039H
	DD	0500bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	01baH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$rtcName$0 DB 06fH ; tree_builder::to_string
	DB	070H
	DB	065H
	DB	072H
	DB	061H
	DB	074H
	DB	06fH
	DB	072H
	DB	073H
	DB	00H
	ORG $+2
?to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$rtcName$1 DB 065H ; tree_builder::to_string
	DB	071H
	DB	00H
	ORG $+1
?to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$rtcVarDesc DD 0a8H ; tree_builder::to_string
	DD	028H
	DQ	FLAT:?to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$rtcName$1
	DD	028H
	DD	020H
	DQ	FLAT:?to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$rtcName$0
	ORG $+96
?to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$rtcFrameData DD 02H ; tree_builder::to_string
	DD	00H
	DQ	FLAT:?to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	036H
	DB	0bdH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??print_tree@tree_builder@@QEAAXXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?print_tree@tree_builder@@QEAAXXZ DB 06H
	DB	00H
	DB	00H
	DB	0d6H
	DB	02H
	DB	'r'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?print_tree@tree_builder@@QEAAXXZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??print_tree@tree_builder@@QEAAXXZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?print_tree@tree_builder@@QEAAXXZ DB 028H
	DD	imagerel $stateUnwindMap$?print_tree@tree_builder@@QEAAXXZ
	DD	imagerel $ip2state$?print_tree@tree_builder@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?print_tree@tree_builder@@QEAAXXZ DD 025053d19H
	DD	010e2313H
	DD	07007002dH
	DD	05006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?print_tree@tree_builder@@QEAAXXZ
	DD	015aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?print_tree@tree_builder@@QEAAXXZ$rtcName$0 DB 06fH	; tree_builder::print_tree
	DB	070H
	DB	065H
	DB	072H
	DB	061H
	DB	074H
	DB	06fH
	DB	072H
	DB	073H
	DB	00H
	ORG $+6
?print_tree@tree_builder@@QEAAXXZ$rtcVarDesc DD 028H	; tree_builder::print_tree
	DD	020H
	DQ	FLAT:?print_tree@tree_builder@@QEAAXXZ$rtcName$0
	ORG $+48
?print_tree@tree_builder@@QEAAXXZ$rtcFrameData DD 01H	; tree_builder::print_tree
	DD	00H
	DQ	FLAT:?print_tree@tree_builder@@QEAAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0??print_node@tree_builder@@QEAAXPEAVnode@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0??print_node@tree_builder@@QEAAXPEAVnode@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?print_node@tree_builder@@QEAAXPEAVnode@@@Z DB 0aH
	DB	00H
	DB	00H
	DB	0fdH, 03H
	DB	02H
	DB	'N'
	DB	00H
	DB	'l'
	DB	04H
	DB	'H'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?print_node@tree_builder@@QEAAXPEAVnode@@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$1@?0??print_node@tree_builder@@QEAAXPEAVnode@@@Z@4HA
	DB	036H
	DD	imagerel ?dtor$2@?0??print_node@tree_builder@@QEAAXPEAVnode@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?print_node@tree_builder@@QEAAXPEAVnode@@@Z DB 028H
	DD	imagerel $stateUnwindMap$?print_node@tree_builder@@QEAAXPEAVnode@@@Z
	DD	imagerel $ip2state$?print_node@tree_builder@@QEAAXPEAVnode@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?print_node@tree_builder@@QEAAXPEAVnode@@@Z DD 025051811H
	DD	01132318H
	DD	0700c0043H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?print_node@tree_builder@@QEAAXPEAVnode@@@Z
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	044H
	DW	08e5H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$20@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$18@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$16@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$15@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$12@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$11@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$8@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$6@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$4@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z DB '0'
	DB	00H
	DB	00H
	DB	096H
	DB	04H
	DB	'y', 02H
	DB	06H
	DB	015H, 02H
	DB	04H
	DB	0d8H
	DB	08H
	DB	0ecH
	DB	04H
	DB	'i', 03H
	DB	0aH
	DB	015H, 02H
	DB	04H
	DB	0deH
	DB	0cH
	DB	0f2H
	DB	04H
	DB	'=', 03H
	DB	0eH
	DB	'"'
	DB	010H
	DB	0f0H
	DB	0eH
	DB	')', 03H
	DB	012H
	DB	'"'
	DB	014H
	DB	0f0H
	DB	012H
	DB	0f2H
	DB	016H
	DB	'D'
	DB	012H
	DB	0e6H
	DB	018H
	DB	'D'
	DB	012H
	DB	'`'
	DB	0eH
	DB	01aH
	DB	04H
	DB	01aH
	DB	02H
	DB	01aH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z DB 018H
	DB	0eH
	DD	imagerel ?dtor$0@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA
	DB	056H
	DD	imagerel ?dtor$4@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA
	DB	07eH
	DD	imagerel ?dtor$6@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA
	DB	0a6H
	DD	imagerel ?dtor$8@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA
	DB	0ceH
	DD	imagerel ?dtor$11@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$12@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA
	DB	056H
	DD	imagerel ?dtor$15@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$16@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA
	DB	056H
	DD	imagerel ?dtor$18@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA
	DB	07eH
	DD	imagerel ?dtor$20@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z DB 028H
	DD	imagerel $stateUnwindMap$?createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z
	DD	imagerel $ip2state$?createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z DD 035054b19H
	DD	011c3321H
	DD	07015015bH
	DD	05014H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z
	DD	0ac2H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z$rtcName$0 DB 06fH ; tree_builder::createLeftRightNodes
	DB	070H
	DB	065H
	DB	072H
	DB	04cH
	DB	00H
	ORG $+2
?createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z$rtcName$1 DB 06fH ; tree_builder::createLeftRightNodes
	DB	070H
	DB	065H
	DB	072H
	DB	052H
	DB	00H
	ORG $+2
?createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z$rtcVarDesc DD 0148H ; tree_builder::createLeftRightNodes
	DD	030H
	DQ	FLAT:?createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z$rtcName$1
	DD	0f8H
	DD	030H
	DQ	FLAT:?createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z$rtcName$0
	ORG $+96
?createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z$rtcFrameData DD 02H ; tree_builder::createLeftRightNodes
	DD	00H
	DQ	FLAT:?createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?getrand@tree_builder@@QEAAH_K@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?randomDouble@tree_builder@@QEAANNN@Z DD 035051f01H
	DD	011a331fH
	DD	070130023H
	DD	05012H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	044H
	DW	024aH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$6@?0??generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$4@?0??generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$3@?0??generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0??generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z DB 014H
	DB	00H
	DB	00H
	DB	096H
	DB	04H
	DB	'a', 02H
	DB	06H
	DB	'"'
	DB	08H
	DB	0eaH
	DB	06H
	DB	0ccH
	DB	0aH
	DB	'D'
	DB	06H
	DB	'L'
	DB	04H
	DB	014H
	DB	02H
	DB	01aH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z DB 0aH
	DB	0eH
	DD	imagerel ?dtor$0@?0??generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0??generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$4@?0??generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA
	DB	056H
	DD	imagerel ?dtor$6@?0??generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z DB 028H
	DD	imagerel $stateUnwindMap$?generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
	DD	imagerel $ip2state$?generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z DD 035054b19H
	DD	011c3321H
	DD	070150087H
	DD	05014H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
	DD	0422H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$rtcName$0 DB 06fH ; tree_builder::generate_random_tree
	DB	070H
	DB	065H
	DB	072H
	DB	00H
	ORG $+3
?generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$rtcName$1 DB 06eH ; tree_builder::generate_random_tree
	DB	00H
	ORG $+6
?generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$rtcVarDesc DD 0a8H ; tree_builder::generate_random_tree
	DD	08H
	DQ	FLAT:?generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$rtcName$1
	DD	058H
	DD	030H
	DQ	FLAT:?generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$rtcName$0
	ORG $+96
?generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$rtcFrameData DD 02H ; tree_builder::generate_random_tree
	DD	00H
	DQ	FLAT:?generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0tree_builder@@QEAA@PEAVexpression@@@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0binary_tree@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1binary_tree@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	070070031H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?getNodeByNumber@binary_tree@@QEAAPEAVnode@@H@Z DD 025051701H
	DD	01122317H
	DD	0700b002dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@PEAVnode@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVnode@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAVnode@@@2@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@PEAVnode@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVnode@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAVnode@@@2@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@PEAVnode@@@std@@@std@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEBAAEBV?$allocator@PEAVnode@@@2@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAAEAV?$allocator@PEAVnode@@@2@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEBAXPEAPEAVnode@@0@Z DD 025051d01H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	040H
	DB	098H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Orphan_range_locked@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEBAXPEAPEAVnode@@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_range_locked@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEBAXPEAPEAVnode@@0@Z DB 06H
	DB	00H
	DB	00H
	DB	0c6H
	DB	02H
	DB	'6'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Orphan_range_locked@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEBAXPEAPEAVnode@@0@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Orphan_range_locked@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEBAXPEAPEAVnode@@0@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Orphan_range_locked@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEBAXPEAPEAVnode@@0@Z DB 028H
	DD	imagerel $stateUnwindMap$?_Orphan_range_locked@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEBAXPEAPEAVnode@@0@Z
	DD	imagerel $ip2state$?_Orphan_range_locked@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEBAXPEAPEAVnode@@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range_locked@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEBAXPEAPEAVnode@@0@Z DD 025054719H
	DD	0118231dH
	DD	070110021H
	DD	05010H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?_Orphan_range_locked@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEBAXPEAPEAVnode@@0@Z
	DD	0faH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Orphan_range_locked@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEBAXPEAPEAVnode@@0@Z$rtcName$0 DB 05fH ; std::vector<node *,std::allocator<node *> >::_Orphan_range_locked
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Orphan_range_locked@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEBAXPEAPEAVnode@@0@Z$rtcVarDesc DD 024H ; std::vector<node *,std::allocator<node *> >::_Orphan_range_locked
	DD	04H
	DQ	FLAT:?_Orphan_range_locked@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEBAXPEAPEAVnode@@0@Z$rtcName$0
	ORG $+48
?_Orphan_range_locked@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEBAXPEAPEAVnode@@0@Z$rtcFrameData DD 01H ; std::vector<node *,std::allocator<node *> >::_Orphan_range_locked
	DD	00H
	DQ	FLAT:?_Orphan_range_locked@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEBAXPEAPEAVnode@@0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range_unlocked@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEBAXPEAPEAVnode@@0@Z DD 025051d01H
	DD	0118231dH
	DD	07011002dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@CAXXZ DD 025050f01H
	DD	010a230fH
	DD	07003001dH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Tidy@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAXXZ DD 025051319H
	DD	010e2313H
	DD	07007002dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Change_array@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAXQEAPEAVnode@@_K1@Z DD 025052201H
	DD	011d2322H
	DD	07016002dH
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEBA_K_K@Z DD 025051801H
	DD	01132318H
	DD	0700c0029H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Destroy@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAXPEAPEAVnode@@0@Z DD 025051d01H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Umove_if_noexcept@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAXPEAPEAVnode@@00@Z DD 035052201H
	DD	011d3322H
	DD	070160023H
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Umove_if_noexcept1@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAXPEAPEAVnode@@00U?$integral_constant@_N$00@2@@Z DD 025052201H
	DD	011d2322H
	DD	07016001dH
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Umove@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAPEAPEAVnode@@PEAPEAV3@00@Z DD 025052201H
	DD	011d2322H
	DD	07016001dH
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?front@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAAEAPEAVnode@@XZ DD 035051301H
	DD	010e3313H
	DD	070070023H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?capacity@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEBA_KXZ DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEBA_KXZ DD 025051301H
	DD	010e2313H
	DD	070070025H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unchecked_end@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAPEAPEAVnode@@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unchecked_begin@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAPEAPEAVnode@@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?clear@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?clear@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAXXZ DB 060H
	DD	imagerel $ip2state$?clear@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAXXZ DD 025051319H
	DD	010e2313H
	DD	070070029H
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?clear@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAXAEBQEAVnode@@@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	036H
	DB	0b2H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAA@XZ DD 025053d19H
	DD	010e2313H
	DD	070070029H
	DD	05006H
	DD	imagerel __GSHandlerCheck
	DD	0138H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::vector<node *,std::allocator<node *> >::~vector<node *,std::allocator<node *> >
	DB	053H
	DB	031H
	DB	00H
	ORG $+12
??1?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAA@XZ$rtcVarDesc DD 044H ; std::vector<node *,std::allocator<node *> >::~vector<node *,std::allocator<node *> >
	DD	01H
	DQ	FLAT:??1?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::vector<node *,std::allocator<node *> >::~vector<node *,std::allocator<node *> >
	DD	00H
	DQ	FLAT:??1?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??0?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAA@XZ DD 025051319H
	DD	010e2313H
	DD	070070025H
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@PEAVnode@@@std@@@std@@SA_KAEBV?$allocator@PEAVnode@@@2@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@PEAVnode@@@std@@QEAAPEAPEAVnode@@_K@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@PEAVnode@@@std@@QEAAXQEAPEAVnode@@_K@Z DD 025051d01H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@PEAVnode@@@std@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gnode@@QEAAPEAXI@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@node@@QEAAX_K@Z DD 05051601H
	DD	01130316H
	DD	0700c0019H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@token@@QEAAX_K@Z DD 05051601H
	DD	01130316H
	DD	0700c0019H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reset@token@@QEAAXXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@token@@QEBA_KXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	03bH
	DB	0b0H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?readString@token@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 025054219H
	DD	01132318H
	DD	0700c0029H
	DD	0500bH
	DD	imagerel __GSHandlerCheck
	DD	0138H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?readString@token@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$rtcName$0 DB 073H ; token::readString
	DB	00H
	ORG $+14
?readString@token@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$rtcVarDesc DD 028H ; token::readString
	DD	028H
	DQ	FLAT:?readString@token@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$rtcName$0
	ORG $+48
?readString@token@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$rtcFrameData DD 01H ; token::readString
	DD	00H
	DQ	FLAT:?readString@token@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?add@token@@QEAAXD@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1token@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0token@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@expression@@QEAAX_K@Z DD 05051601H
	DD	01130316H
	DD	0700c0019H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1expression@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@Ubraket_group@@@std@@V?$_Vector_val@U?$_Simple_types@Ubraket_group@@@std@@@2@$00@std@@QEAAAEAV?$allocator@Ubraket_group@@@2@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@Ubraket_group@@V?$allocator@Ubraket_group@@@std@@@std@@AEAAAEAV?$allocator@Ubraket_group@@@2@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@Ubraket_group@@V?$allocator@Ubraket_group@@@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@Ubraket_group@@V?$allocator@Ubraket_group@@@std@@@std@@AEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Tidy@?$vector@Ubraket_group@@V?$allocator@Ubraket_group@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@Ubraket_group@@V?$allocator@Ubraket_group@@@std@@@std@@AEAAXXZ DD 025051319H
	DD	010e2313H
	DD	07007002dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@Ubraket_group@@V?$allocator@Ubraket_group@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Destroy@?$vector@Ubraket_group@@V?$allocator@Ubraket_group@@@std@@@std@@AEAAXPEAUbraket_group@@0@Z DD 025051d01H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	036H
	DB	0b2H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@Ubraket_group@@V?$allocator@Ubraket_group@@@std@@@std@@QEAA@XZ DD 025053d19H
	DD	010e2313H
	DD	070070029H
	DD	05006H
	DD	imagerel __GSHandlerCheck
	DD	0138H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$vector@Ubraket_group@@V?$allocator@Ubraket_group@@@std@@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::vector<braket_group,std::allocator<braket_group> >::~vector<braket_group,std::allocator<braket_group> >
	DB	053H
	DB	032H
	DB	00H
	ORG $+12
??1?$vector@Ubraket_group@@V?$allocator@Ubraket_group@@@std@@@std@@QEAA@XZ$rtcVarDesc DD 044H ; std::vector<braket_group,std::allocator<braket_group> >::~vector<braket_group,std::allocator<braket_group> >
	DD	01H
	DQ	FLAT:??1?$vector@Ubraket_group@@V?$allocator@Ubraket_group@@@std@@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$vector@Ubraket_group@@V?$allocator@Ubraket_group@@@std@@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::vector<braket_group,std::allocator<braket_group> >::~vector<braket_group,std::allocator<braket_group> >
	DD	00H
	DQ	FLAT:??1?$vector@Ubraket_group@@V?$allocator@Ubraket_group@@@std@@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@Ubraket_group@@@std@@QEAAXQEAUbraket_group@@_K@Z DD 025051d01H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAAX_K@Z DD 05051601H
	DD	01130316H
	DD	0700c0019H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@Uop@@@std@@V?$_Vector_val@U?$_Simple_types@Uop@@@std@@@2@$00@std@@QEBAAEBV?$allocator@Uop@@@2@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@Uop@@@std@@V?$_Vector_val@U?$_Simple_types@Uop@@@std@@@2@$00@std@@QEAAAEAV?$allocator@Uop@@@2@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@Uop@@@std@@@std@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@AEBAAEBV?$allocator@Uop@@@2@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@AEAAAEAV?$allocator@Uop@@@2@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@AEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Tidy@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@AEAAXXZ DD 025051319H
	DD	010e2313H
	DD	07007002dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_raw@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@AEAAX_K@Z DD 025051801H
	DD	01132318H
	DD	0700c0031H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Destroy@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@AEAAXPEAUop@@0@Z DD 025051d01H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAAAEAUop@@_K@Z DD 035051801H
	DD	01133318H
	DD	0700c0023H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?size@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEBA_KXZ DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unchecked_end@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAAPEAUop@@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unchecked_begin@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAAPEAUop@@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	036H
	DB	0b2H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@XZ DD 025053d19H
	DD	010e2313H
	DD	070070029H
	DD	05006H
	DD	imagerel __GSHandlerCheck
	DD	0138H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::vector<op,std::allocator<op> >::~vector<op,std::allocator<op> >
	DB	053H
	DB	033H
	DB	00H
	ORG $+12
??1?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@XZ$rtcVarDesc DD 044H ; std::vector<op,std::allocator<op> >::~vector<op,std::allocator<op> >
	DD	01H
	DQ	FLAT:??1?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::vector<op,std::allocator<op> >::~vector<op,std::allocator<op> >
	DD	00H
	DQ	FLAT:??1?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	03bH
	DW	01aaH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@AEBV01@@Z DB 0aH
	DB	00H
	DB	00H
	DB	0a1H, 03H
	DB	02H
	DB	096H
	DB	04H
	DB	'j'
	DB	02H
	DB	'2'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@AEBV01@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@AEBV01@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@AEBV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@AEBV01@@Z DB 028H
	DD	imagerel $stateUnwindMap$??0?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@AEBV01@@Z
	DD	imagerel $ip2state$??0?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@AEBV01@@Z DD 025054219H
	DD	01132318H
	DD	0700c0047H
	DD	0500bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??0?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@AEBV01@@Z
	DD	022aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??0?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@AEBV01@@Z$rtcName$0 DB 024H ; std::vector<op,std::allocator<op> >::vector<op,std::allocator<op> >
	DB	053H
	DB	034H
	DB	00H
??0?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@AEBV01@@Z$rtcName$1 DB 05fH ; std::vector<op,std::allocator<op> >::vector<op,std::allocator<op> >
	DB	050H
	DB	072H
	DB	06fH
	DB	078H
	DB	079H
	DB	00H
	ORG $+1
??0?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@AEBV01@@Z$rtcName$2 DB 05fH ; std::vector<op,std::allocator<op> >::vector<op,std::allocator<op> >
	DB	047H
	DB	075H
	DB	061H
	DB	072H
	DB	064H
	DB	00H
	ORG $+13
??0?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@AEBV01@@Z$rtcVarDesc DD 0118H ; std::vector<op,std::allocator<op> >::vector<op,std::allocator<op> >
	DD	08H
	DQ	FLAT:??0?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@AEBV01@@Z$rtcName$2
	DD	0e8H
	DD	010H
	DQ	FLAT:??0?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@AEBV01@@Z$rtcName$1
	DD	044H
	DD	01H
	DQ	FLAT:??0?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@AEBV01@@Z$rtcName$0
	ORG $+144
??0?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@AEBV01@@Z$rtcFrameData DD 03H ; std::vector<op,std::allocator<op> >::vector<op,std::allocator<op> >
	DD	00H
	DQ	FLAT:??0?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@AEBV01@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@Uop@@@std@@@std@@SA?AV?$allocator@Uop@@@2@AEBV32@@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@Uop@@@std@@QEAAPEAUop@@_K@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@Uop@@@std@@QEAAXQEAUop@@_K@Z DD 025051d01H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAX_K@Z DD 05051601H
	DD	01130316H
	DD	0700c0019H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ DD 025051319H
	DD	010e2313H
	DD	07007002dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z DD 025051d01H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@_K@Z DD 035051801H
	DD	01133318H
	DD	0700c0023H
	DD	0500bH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	036H
	DB	0b2H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ DD 025053d19H
	DD	010e2313H
	DD	070070029H
	DD	05006H
	DD	imagerel __GSHandlerCheck
	DD	0138H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	DB	053H
	DB	035H
	DB	00H
	ORG $+12
??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ$rtcVarDesc DD 044H ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	DD	01H
	DQ	FLAT:??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	DD	00H
	DQ	FLAT:??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z DD 025051d01H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gop@@QEAAPEAXI@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0op@@QEAA@AEBU0@@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1op@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0op@@QEAA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0op@@QEAA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0op@@QEAA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 08H
	DB	00H
	DB	00H
	DB	'0'
	DB	02H
	DB	'8'
	DB	04H
	DB	'J'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0op@@QEAA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0op@@QEAA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0op@@QEAA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0op@@QEAA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??0op@@QEAA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	imagerel $ip2state$??0op@@QEAA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0op@@QEAA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 025051811H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0op@@QEAA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	03cH
	DW	010cH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@N@Z DD 025054319H
	DD	01142319H
	DD	0700d002fH
	DD	0500cH
	DD	imagerel __GSHandlerCheck
	DD	0160H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@N@Z$rtcName$0 DB 05fH ; std::to_string
	DB	053H
	DB	074H
	DB	072H
	DB	00H
	ORG $+11
?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@N@Z$rtcVarDesc DD 048H ; std::to_string
	DD	028H
	DQ	FLAT:?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@N@Z$rtcName$0
	ORG $+48
?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@N@Z$rtcFrameData DD 01H ; std::to_string
	DD	00H
	DQ	FLAT:?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@N@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?fixed@std@@YAAEAVios_base@1@AEAV21@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$time DD	025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAPEAXI@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD 025051319H
	DD	010e2313H
	DD	070070029H
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD 025051301H
	DD	010e2313H
	DD	070070025H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	040H
	DB	0f6H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z DD 025054719H
	DD	0118231dH
	DD	070110025H
	DD	05010H
	DD	imagerel __GSHandlerCheck
	DD	0118H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
	DB	04dH
	DB	061H
	DB	073H
	DB	06bH
	DB	065H
	DB	064H
	DB	00H
	ORG $+8
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcVarDesc DD 028H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
	DD	08H
	DQ	FLAT:?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcName$0
	ORG $+48
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
	DD	00H
	DQ	FLAT:?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$allocator@D@2@XZ DD 025051801H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAHQEBD@Z DD 025051801H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z DD 035052201H
	DD	011d3322H
	DD	070160027H
	DD	05015H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	036H
	DB	0c9H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD 025053d19H
	DD	010e2313H
	DD	070070031H
	DD	05006H
	DD	imagerel __GSHandlerCheck
	DD	0178H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	DB	041H
	DB	06cH
	DB	06cH
	DB	06fH
	DB	063H
	DB	05fH
	DB	06dH
	DB	061H
	DB	078H
	DB	00H
	ORG $+5
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcVarDesc DD 028H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	DD	08H
	DQ	FLAT:?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcName$0
	ORG $+48
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	DD	00H
	DQ	FLAT:?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z DD 035051801H
	DD	01133318H
	DD	0700c001fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?at@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z DD 025051d01H
	DD	0118231dH
	DD	070110029H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD 025051d01H
	DD	0118231dH
	DD	070110029H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K_K@Z DD 025052201H
	DD	011d2322H
	DD	07016001dH
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD 035051d01H
	DD	0118331dH
	DD	07011002fH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z DD 025051801H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Copy_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@U?$integral_constant@_N$0A@@2@@Z DD 025051d01H
	DD	0118231dH
	DD	07011001fH
	DD	05010H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	036H
	DB	0bdH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD 025053d19H
	DD	010e2313H
	DD	070070029H
	DD	05006H
	DD	imagerel __GSHandlerCheck
	DD	0138H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	DB	053H
	DB	031H
	DB	033H
	DB	00H
	ORG $+11
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcVarDesc DD 044H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	01H
	DQ	FLAT:??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	00H
	DQ	FLAT:??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	03bH
	DW	01c7H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z DD 025054219H
	DD	01132318H
	DD	0700c0047H
	DD	0500bH
	DD	imagerel __GSHandlerCheck
	DD	0220H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct_lv_contents
	DB	04eH
	DB	065H
	DB	077H
	DB	05fH
	DB	061H
	DB	072H
	DB	072H
	DB	061H
	DB	079H
	DB	00H
	ORG $+5
?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z$rtcVarDesc DD 0108H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct_lv_contents
	DD	08H
	DQ	FLAT:?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z$rtcName$0
	ORG $+48
?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct_lv_contents
	DD	00H
	DQ	FLAT:?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z DB 060H
	DD	imagerel $ip2state$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z DD 025051819H
	DD	01132318H
	DD	0700c0025H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z DD 025051801H
	DD	01132318H
	DD	0700c0025H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z DD 025051801H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Move_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z DD 025051d01H
	DD	0118231dH
	DD	07011001fH
	DD	05010H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	044H
	DW	04c9H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEAV01@1@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEAV01@1@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEAV01@1@Z DB 0aH
	DB	00H
	DB	00H
	DB	0f4H
	DB	02H
	DB	0d5H, 0cH
	DB	04H
	DB	0c1H, 03H
	DB	02H
	DB	01aH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEAV01@1@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEAV01@1@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEAV01@1@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEAV01@1@Z DB 028H
	DD	imagerel $stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEAV01@1@Z
	DD	imagerel $ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEAV01@1@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEAV01@1@Z DD 025054b19H
	DD	011c2321H
	DD	070150091H
	DD	05014H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEAV01@1@Z
	DD	0472H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEAV01@1@Z$rtcName$0 DB 024H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DB	053H
	DB	032H
	DB	030H
	DB	00H
	ORG $+3
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEAV01@1@Z$rtcName$1 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DB	050H
	DB	072H
	DB	06fH
	DB	078H
	DB	079H
	DB	00H
	ORG $+1
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEAV01@1@Z$rtcName$2 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DB	046H
	DB	061H
	DB	06eH
	DB	063H
	DB	079H
	DB	070H
	DB	074H
	DB	072H
	DB	00H
	ORG $+6
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEAV01@1@Z$rtcVarDesc DD 0258H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	08H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEAV01@1@Z$rtcName$2
	DD	0228H
	DD	010H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEAV01@1@Z$rtcName$1
	DD	0204H
	DD	01H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEAV01@1@Z$rtcName$0
	ORG $+144
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEAV01@1@Z$rtcFrameData DD 03H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	00H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEAV01@1@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	044H
	DW	028cH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z DB 0aH
	DB	00H
	DB	00H
	DB	'%', 02H
	DB	02H
	DB	0f0H
	DB	04H
	DB	085H, 05H
	DB	02H
	DB	01aH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z DB 028H
	DD	imagerel $stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z
	DD	imagerel $ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z DD 025054b19H
	DD	011c2321H
	DD	070150055H
	DD	05014H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z
	DD	0292H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DB	04eH
	DB	065H
	DB	077H
	DB	05fH
	DB	073H
	DB	069H
	DB	07aH
	DB	065H
	DB	00H
	ORG $+2
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z$rtcName$1 DB 024H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DB	053H
	DB	032H
	DB	031H
	DB	00H
	ORG $+3
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z$rtcName$2 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DB	050H
	DB	072H
	DB	06fH
	DB	078H
	DB	079H
	DB	00H
	ORG $+5
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z$rtcName$3 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DB	046H
	DB	061H
	DB	06eH
	DB	063H
	DB	079H
	DB	070H
	DB	074H
	DB	072H
	DB	00H
	ORG $+6
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z$rtcVarDesc DD 0158H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	08H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z$rtcName$3
	DD	0e8H
	DD	010H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z$rtcName$2
	DD	0c4H
	DD	01H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z$rtcName$1
	DD	028H
	DD	08H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z$rtcName$0
	ORG $+192
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z$rtcFrameData DD 04H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	00H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z DB 060H
	DD	imagerel $ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z DD 025051819H
	DD	01132318H
	DD	0700c0025H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	040H
	DB	0faH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z DB 0aH
	DB	00H
	DB	00H
	DB	0d4H
	DB	02H
	DB	'p'
	DB	04H
	DB	'b'
	DB	02H
	DB	014H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z DB 028H
	DD	imagerel $stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z
	DD	imagerel $ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z DD 025054719H
	DD	0118231dH
	DD	07011002fH
	DD	05010H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z
	DD	016aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z$rtcName$0 DB 024H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DB	053H
	DB	031H
	DB	034H
	DB	00H
	ORG $+3
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z$rtcName$1 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DB	050H
	DB	072H
	DB	06fH
	DB	078H
	DB	079H
	DB	00H
	ORG $+1
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z$rtcVarDesc DD 068H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	010H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z$rtcName$1
	DD	044H
	DD	01H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z$rtcName$0
	ORG $+96
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z$rtcFrameData DD 02H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	00H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	03bH
	DB	0edH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z DB 0aH
	DB	00H
	DB	00H
	DB	0caH
	DB	02H
	DB	'p'
	DB	04H
	DB	'R'
	DB	02H
	DB	014H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z DB 028H
	DD	imagerel $stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z
	DD	imagerel $ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z DD 025054219H
	DD	01132318H
	DD	0700c002fH
	DD	0500bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z
	DD	016aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcName$0 DB 024H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DB	053H
	DB	031H
	DB	035H
	DB	00H
	ORG $+3
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcName$1 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DB	050H
	DB	072H
	DB	06fH
	DB	078H
	DB	079H
	DB	00H
	ORG $+1
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcVarDesc DD 068H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	010H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcName$1
	DD	044H
	DD	01H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcName$0
	ORG $+96
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcFrameData DD 02H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	00H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	045H
	DW	010cH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z DB 0aH
	DB	00H
	DB	00H
	DB	0ecH
	DB	02H
	DB	'p'
	DB	04H
	DB	'n'
	DB	02H
	DB	014H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z
	DD	imagerel $ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z DD 025054c19H
	DD	011d2322H
	DD	07016002fH
	DD	05015H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z
	DD	016aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z$rtcName$0 DB 024H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DB	053H
	DB	031H
	DB	039H
	DB	00H
	ORG $+3
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z$rtcName$1 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DB	050H
	DB	072H
	DB	06fH
	DB	078H
	DB	079H
	DB	00H
	ORG $+1
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z$rtcVarDesc DD 068H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	010H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z$rtcName$1
	DD	044H
	DD	01H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z$rtcName$0
	ORG $+96
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z$rtcFrameData DD 02H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	00H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD 025051319H
	DD	010e2313H
	DD	070070025H
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	03bH
	DB	0fcH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z DB 0aH
	DB	00H
	DB	00H
	DB	01H, 02H
	DB	02H
	DB	'p'
	DB	04H
	DB	':'
	DB	02H
	DB	014H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z DB 028H
	DD	imagerel $stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z
	DD	imagerel $ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z DD 025054219H
	DD	01132318H
	DD	0700c0033H
	DD	0500bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z
	DD	018aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z$rtcName$0 DB 024H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DB	053H
	DB	031H
	DB	037H
	DB	00H
	ORG $+3
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z$rtcName$1 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DB	050H
	DB	072H
	DB	06fH
	DB	078H
	DB	079H
	DB	00H
	ORG $+1
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z$rtcVarDesc DD 068H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	010H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z$rtcName$1
	DD	044H
	DD	01H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z$rtcName$0
	ORG $+96
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z$rtcFrameData DD 02H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	00H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Clamp_suffix_size@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_K_K0@Z DD 025051d01H
	DD	0118231dH
	DD	070110021H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ DD 025050f01H
	DD	010a230fH
	DD	07003001dH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Check_offset_exclusive@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ DD 025051301H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z DD 025051d01H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@D@std@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlen_string@std@@YAXXZ DD 025050f01H
	DD	010a230fH
	DD	07003001dH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?eof@?$_Narrow_char_traits@DH@std@@SAHXZ DD 025050f01H
	DD	010a230fH
	DD	07003001dH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z DD 025051801H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$_Narrow_char_traits@DH@std@@SAPEADQEAD_KD@Z DD 025051d01H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z DD 025051d01H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?move@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD 025051d01H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD 025051d01H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DD 025051801H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Basic_container_proxy_ptr12@std@@IEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	03bH
	DB	08aH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Swap_proxy_and_iterators_locked@_Container_base12@std@@AEAAXAEAU12@@Z DD 025054219H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __GSHandlerCheck
	DD	0f8H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Swap_proxy_and_iterators_locked@_Container_base12@std@@AEAAXAEAU12@@Z$rtcName$0 DB 05fH ; std::_Container_base12::_Swap_proxy_and_iterators_locked
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Swap_proxy_and_iterators_locked@_Container_base12@std@@AEAAXAEAU12@@Z$rtcVarDesc DD 024H ; std::_Container_base12::_Swap_proxy_and_iterators_locked
	DD	04H
	DQ	FLAT:?_Swap_proxy_and_iterators_locked@_Container_base12@std@@AEAAXAEAU12@@Z$rtcName$0
	ORG $+48
?_Swap_proxy_and_iterators_locked@_Container_base12@std@@AEAAXAEAU12@@Z$rtcFrameData DD 01H ; std::_Container_base12::_Swap_proxy_and_iterators_locked
	DD	00H
	DQ	FLAT:?_Swap_proxy_and_iterators_locked@_Container_base12@std@@AEAAXAEAU12@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	036H
	DB	07eH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ DD 025053d19H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __GSHandlerCheck
	DD	0f8H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ$rtcName$0 DB 05fH ; std::_Container_base12::_Orphan_all_locked_v3
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ$rtcVarDesc DD 024H ; std::_Container_base12::_Orphan_all_locked_v3
	DD	04H
	DQ	FLAT:?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ$rtcName$0
	ORG $+48
?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ$rtcFrameData DD 01H ; std::_Container_base12::_Orphan_all_locked_v3
	DD	00H
	DQ	FLAT:?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Swap_proxy_and_iterators_unlocked@_Container_base12@std@@AEAAXAEAU12@@Z DD 025051801H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Container_base12@std@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Convert_size@_K@std@@YA_K_K@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD 035051801H
	DD	01133318H
	DD	0700c002fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max@?$numeric_limits@_J@std@@SA_JXZ DD 025050f01H
	DD	010a230fH
	DD	07003001dH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Throw_bad_array_new_length@std@@YAXXZ DD 025050f01H
	DD	010a230fH
	DD	070030023H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_array_new_length@std@@UEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_alloc@std@@UEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@AEAA@QEBD@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gexception@std@@UEAAPEAXI@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?what@exception@std@@UEBAPEBDXZ DD 025051301H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1exception@std@@UEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@AEBV01@@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@QEBDH@Z DD 025051d01H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	03bH
	DB	0b9H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@QEBD@Z DD 025054219H
	DD	01132318H
	DD	0700c0023H
	DD	0500bH
	DD	imagerel __GSHandlerCheck
	DD	0108H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??0exception@std@@QEAA@QEBD@Z$rtcName$0 DB 05fH		; std::exception::exception
	DB	049H
	DB	06eH
	DB	069H
	DB	074H
	DB	044H
	DB	061H
	DB	074H
	DB	061H
	DB	00H
	ORG $+6
??0exception@std@@QEAA@QEBD@Z$rtcVarDesc DD 028H	; std::exception::exception
	DD	010H
	DQ	FLAT:??0exception@std@@QEAA@QEBD@Z$rtcName$0
	ORG $+48
??0exception@std@@QEAA@QEBD@Z$rtcFrameData DD 01H	; std::exception::exception
	DD	00H
	DQ	FLAT:??0exception@std@@QEAA@QEBD@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	045H
	DB	097H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_scprintf DD 025054c19H
	DD	011d2322H
	DD	070160029H
	DD	05015H
	DD	imagerel __GSHandlerCheck
	DD	0138H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
_scprintf$rtcName$0 DB 05fH
	DB	041H
	DB	072H
	DB	067H
	DB	04cH
	DB	069H
	DB	073H
	DB	074H
	DB	00H
	ORG $+7
_scprintf$rtcVarDesc DD 048H
	DD	08H
	DQ	FLAT:_scprintf$rtcName$0
	ORG $+48
_scprintf$rtcFrameData DD 01H
	DD	00H
	DQ	FLAT:_scprintf$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	045H
	DB	0abH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$sprintf_s DD 035054c19H
	DD	011d3322H
	DD	07016002bH
	DD	05015H
	DD	imagerel __GSHandlerCheck
	DD	0148H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
sprintf_s$rtcName$0 DB 05fH
	DB	041H
	DB	072H
	DB	067H
	DB	04cH
	DB	069H
	DB	073H
	DB	074H
	DB	00H
	ORG $+7
sprintf_s$rtcVarDesc DD 058H
	DD	08H
	DQ	FLAT:sprintf_s$rtcName$0
	ORG $+48
sprintf_s$rtcFrameData DD 01H
	DD	00H
	DQ	FLAT:sprintf_s$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vscprintf_l DD 035051d01H
	DD	0118331dH
	DD	070110023H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vsprintf_s_l DD 035052201H
	DD	011d3322H
	DD	070160023H
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$__local_stdio_printf_options DD 025050f01H
	DD	010a230fH
	DD	07003001dH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??2@YAPEAX_KPEAX@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX_K@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xutility
;	COMDAT ??$_Voidify_iter@PEAUop@@@std@@YAPEAXPEAUop@@@Z
_TEXT	SEGMENT
_It$ = 224
??$_Voidify_iter@PEAUop@@@std@@YAPEAXPEAUop@@@Z PROC	; std::_Voidify_iter<op *>, COMDAT

; 130  : _NODISCARD constexpr void* _Voidify_iter(_Iter _It) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__12269DE6_xutility
	call	__CheckForDebuggerJustMyCode

; 131  :     if constexpr (is_pointer_v<_Iter>) {
; 132  :         return const_cast<void*>(static_cast<const volatile void*>(_It));

	mov	rax, QWORD PTR _It$[rbp]

; 133  :     } else {
; 134  :         return const_cast<void*>(static_cast<const volatile void*>(_STD addressof(*_It)));
; 135  :     }
; 136  : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Voidify_iter@PEAUop@@@std@@YAPEAXPEAUop@@@Z ENDP	; std::_Voidify_iter<op *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$construct@PEAVnode@@PEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVnode@@@std@@@std@@SAXAEAV?$allocator@PEAVnode@@@1@QEAPEAVnode@@$$QEAPEAV3@@Z
_TEXT	SEGMENT
$T1 = 200
__formal$ = 256
_Ptr$ = 264
<_Args_0>$ = 272
??$construct@PEAVnode@@PEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVnode@@@std@@@std@@SAXAEAV?$allocator@PEAVnode@@@1@QEAPEAVnode@@$$QEAPEAV3@@Z PROC ; std::_Default_allocator_traits<std::allocator<node *> >::construct<node *,node *>, COMDAT

; 707  :     static _CONSTEXPR20_DYNALLOC void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rcx, QWORD PTR _Ptr$[rbp]
	call	??$_Voidify_iter@PEAPEAVnode@@@std@@YAPEAXPEAPEAVnode@@@Z ; std::_Voidify_iter<node * *>
	mov	rdx, rax
	mov	ecx, 8
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rbp], rax
	mov	rcx, QWORD PTR <_Args_0>$[rbp]
	call	??$forward@PEAVnode@@@std@@YA$$QEAPEAVnode@@AEAPEAV1@@Z ; std::forward<node *>
	mov	rcx, QWORD PTR $T1[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rcx], rax

; 708  : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 709  :         if (_STD is_constant_evaluated()) {
; 710  :             _STD construct_at(_Ptr, _STD forward<_Types>(_Args)...);
; 711  :         } else
; 712  : #endif // __cpp_lib_constexpr_dynamic_alloc
; 713  :         {
; 714  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);
; 715  :         }
; 716  :     }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??$construct@PEAVnode@@PEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVnode@@@std@@@std@@SAXAEAV?$allocator@PEAVnode@@@1@QEAPEAVnode@@$$QEAPEAV3@@Z ENDP ; std::_Default_allocator_traits<std::allocator<node *> >::construct<node *,node *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\type_traits
;	COMDAT ??$forward@PEAVnode@@@std@@YA$$QEAPEAVnode@@AEAPEAV1@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@PEAVnode@@@std@@YA$$QEAPEAVnode@@AEAPEAV1@@Z PROC ; std::forward<node *>, COMDAT

; 1443 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__589FA321_type_traits
	call	__CheckForDebuggerJustMyCode

; 1444 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rbp]

; 1445 : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$forward@PEAVnode@@@std@@YA$$QEAPEAVnode@@AEAPEAV1@@Z ENDP ; std::forward<node *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xutility
;	COMDAT ??$_To_address@PEAPEAVnode@@@std@@YA?A_PAEBQEAPEAVnode@@@Z
_TEXT	SEGMENT
_Val$ = 224
??$_To_address@PEAPEAVnode@@@std@@YA?A_PAEBQEAPEAVnode@@@Z PROC ; std::_To_address<node * *>, COMDAT

; 4080 : _NODISCARD constexpr auto _To_address(const _Iter& _Val) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__12269DE6_xutility
	call	__CheckForDebuggerJustMyCode

; 4081 :     _STL_INTERNAL_STATIC_ASSERT(is_pointer_v<_Iter>);
; 4082 :     return _Val;

	mov	rax, QWORD PTR _Val$[rbp]
	mov	rax, QWORD PTR [rax]

; 4083 : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_To_address@PEAPEAVnode@@@std@@YA?A_PAEBQEAPEAVnode@@@Z ENDP ; std::_To_address<node * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$construct@Uop@@AEAU1@@?$_Default_allocator_traits@V?$allocator@Uop@@@std@@@std@@SAXAEAV?$allocator@Uop@@@1@QEAUop@@AEAU3@@Z
_TEXT	SEGMENT
$T1 = 200
__formal$ = 256
_Ptr$ = 264
<_Args_0>$ = 272
??$construct@Uop@@AEAU1@@?$_Default_allocator_traits@V?$allocator@Uop@@@std@@@std@@SAXAEAV?$allocator@Uop@@@1@QEAUop@@AEAU3@@Z PROC ; std::_Default_allocator_traits<std::allocator<op> >::construct<op,op &>, COMDAT

; 707  :     static _CONSTEXPR20_DYNALLOC void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rcx, QWORD PTR _Ptr$[rbp]
	call	??$_Voidify_iter@PEAUop@@@std@@YAPEAXPEAUop@@@Z ; std::_Voidify_iter<op *>
	mov	rdx, rax
	mov	ecx, 48					; 00000030H
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rbp], rax
	mov	rcx, QWORD PTR <_Args_0>$[rbp]
	call	??$forward@AEAUop@@@std@@YAAEAUop@@AEAU1@@Z ; std::forward<op &>
	mov	rdx, rax
	mov	rcx, QWORD PTR $T1[rbp]
	call	??0op@@QEAA@AEBU0@@Z

; 708  : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 709  :         if (_STD is_constant_evaluated()) {
; 710  :             _STD construct_at(_Ptr, _STD forward<_Types>(_Args)...);
; 711  :         } else
; 712  : #endif // __cpp_lib_constexpr_dynamic_alloc
; 713  :         {
; 714  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);
; 715  :         }
; 716  :     }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??$construct@Uop@@AEAU1@@?$_Default_allocator_traits@V?$allocator@Uop@@@std@@@std@@SAXAEAV?$allocator@Uop@@@1@QEAUop@@AEAU3@@Z ENDP ; std::_Default_allocator_traits<std::allocator<op> >::construct<op,op &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\type_traits
;	COMDAT ??$forward@AEAUop@@@std@@YAAEAUop@@AEAU1@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@AEAUop@@@std@@YAAEAUop@@AEAU1@@Z PROC	; std::forward<op &>, COMDAT

; 1443 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__589FA321_type_traits
	call	__CheckForDebuggerJustMyCode

; 1444 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rbp]

; 1445 : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$forward@AEAUop@@@std@@YAAEAUop@@AEAU1@@Z ENDP	; std::forward<op &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\type_traits
;	COMDAT ??$forward@AEAV?$allocator@D@std@@@std@@YAAEAV?$allocator@D@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@AEAV?$allocator@D@std@@@std@@YAAEAV?$allocator@D@0@AEAV10@@Z PROC ; std::forward<std::allocator<char> &>, COMDAT

; 1443 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__589FA321_type_traits
	call	__CheckForDebuggerJustMyCode

; 1444 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rbp]

; 1445 : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$forward@AEAV?$allocator@D@std@@@std@@YAAEAV?$allocator@D@0@AEAV10@@Z ENDP ; std::forward<std::allocator<char> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Emplace_back@PEAVnode@@@?$_Uninitialized_backout_al@V?$allocator@PEAVnode@@@std@@@std@@QEAAX$$QEAPEAVnode@@@Z
_TEXT	SEGMENT
tv64 = 192
this$ = 240
<_Vals_0>$ = 248
??$_Emplace_back@PEAVnode@@@?$_Uninitialized_backout_al@V?$allocator@PEAVnode@@@std@@@std@@QEAAX$$QEAPEAVnode@@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<node *> >::_Emplace_back<node *>, COMDAT

; 1630 :     _CONSTEXPR20_DYNALLOC void _Emplace_back(_Types&&... _Vals) { // construct a new element at *_Last and increment

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode

; 1631 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	rcx, QWORD PTR <_Vals_0>$[rbp]
	call	??$forward@PEAVnode@@@std@@YA$$QEAPEAVnode@@AEAPEAV1@@Z ; std::forward<node *>
	mov	QWORD PTR tv64[rbp], rax
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	call	??$_Unfancy@PEAVnode@@@std@@YAPEAPEAVnode@@PEAPEAV1@@Z ; std::_Unfancy<node *>
	mov	rcx, QWORD PTR tv64[rbp]
	mov	r8, rcx
	mov	rdx, rax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+16]
	call	??$construct@PEAVnode@@PEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVnode@@@std@@@std@@SAXAEAV?$allocator@PEAVnode@@@1@QEAPEAVnode@@$$QEAPEAV3@@Z ; std::_Default_allocator_traits<std::allocator<node *> >::construct<node *,node *>

; 1632 :         ++_Last;

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+8]
	add	rax, 8
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+8], rax

; 1633 :     }

	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
??$_Emplace_back@PEAVnode@@@?$_Uninitialized_backout_al@V?$allocator@PEAVnode@@@std@@@std@@QEAAX$$QEAPEAVnode@@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<node *> >::_Emplace_back<node *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@PEAVnode@@@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 224
classSize$ = 232
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@PEAVnode@@@std@@@std@@QEAAX_K@Z PROC ; std::_Uninitialized_backout_al<std::allocator<node *> >::__autoclassinit2, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 200				; 000000c8H
	mov	rbp, rsp
	mov	rdi, QWORD PTR this$[rbp]
	xor	eax, eax
	mov	rcx, QWORD PTR classSize$[rbp]
	rep stosb
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@PEAVnode@@@std@@@std@@QEAAX_K@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<node *> >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?_Release@?$_Uninitialized_backout_al@V?$allocator@PEAVnode@@@std@@@std@@QEAAPEAPEAVnode@@XZ
_TEXT	SEGMENT
this$ = 224
?_Release@?$_Uninitialized_backout_al@V?$allocator@PEAVnode@@@std@@@std@@QEAAPEAPEAVnode@@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<node *> >::_Release, COMDAT

; 1635 :     constexpr pointer _Release() { // suppress any exception handling backout and return _Last

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode

; 1636 :         _First = _Last;

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	QWORD PTR [rax], rcx

; 1637 :         return _Last;

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+8]

; 1638 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Release@?$_Uninitialized_backout_al@V?$allocator@PEAVnode@@@std@@@std@@QEAAPEAPEAVnode@@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<node *> >::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@PEAVnode@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$_Uninitialized_backout_al@V?$allocator@PEAVnode@@@std@@@std@@QEAA@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<node *> >::~_Uninitialized_backout_al<std::allocator<node *> >, COMDAT

; 1625 :     _CONSTEXPR20_DYNALLOC ~_Uninitialized_backout_al() {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode

; 1626 :         _Destroy_range(_First, _Last, _Al);

	mov	rax, QWORD PTR this$[rbp]
	mov	r8, QWORD PTR [rax+16]
	mov	rax, QWORD PTR this$[rbp]
	mov	rdx, QWORD PTR [rax+8]
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Destroy_range@V?$allocator@PEAVnode@@@std@@@std@@YAXPEAPEAVnode@@QEAPEAV1@AEAV?$allocator@PEAVnode@@@0@@Z ; std::_Destroy_range<std::allocator<node *> >

; 1627 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1?$_Uninitialized_backout_al@V?$allocator@PEAVnode@@@std@@@std@@QEAA@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<node *> >::~_Uninitialized_backout_al<std::allocator<node *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??0?$_Uninitialized_backout_al@V?$allocator@PEAVnode@@@std@@@std@@QEAA@PEAPEAVnode@@AEAV?$allocator@PEAVnode@@@1@@Z
_TEXT	SEGMENT
this$ = 224
_Dest$ = 232
_Al_$ = 240
??0?$_Uninitialized_backout_al@V?$allocator@PEAVnode@@@std@@@std@@QEAA@PEAPEAVnode@@AEAV?$allocator@PEAVnode@@@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<node *> >::_Uninitialized_backout_al<std::allocator<node *> >, COMDAT

; 1620 :         : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _Dest$[rbp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _Dest$[rbp]
	mov	QWORD PTR [rax+8], rcx
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _Al_$[rbp]
	mov	QWORD PTR [rax+16], rcx
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$_Uninitialized_backout_al@V?$allocator@PEAVnode@@@std@@@std@@QEAA@PEAPEAVnode@@AEAV?$allocator@PEAVnode@@@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<node *> >::_Uninitialized_backout_al<std::allocator<node *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xutility
;	COMDAT ??$_Copy_memmove@PEAPEAVnode@@PEAPEAV1@@std@@YAPEAPEAVnode@@PEAPEAV1@00@Z
_TEXT	SEGMENT
_FirstPtr$ = 8
_LastPtr$ = 40
_DestPtr$ = 72
_First_ch$ = 104
_Last_ch$ = 136
_Dest_ch$ = 168
_Count$ = 200
_First$ = 448
_Last$ = 456
_Dest$ = 464
??$_Copy_memmove@PEAPEAVnode@@PEAPEAV1@@std@@YAPEAPEAVnode@@PEAPEAV1@00@Z PROC ; std::_Copy_memmove<node * *,node * *>, COMDAT

; 4159 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 456				; 000001c8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__12269DE6_xutility
	call	__CheckForDebuggerJustMyCode

; 4160 :     auto _FirstPtr              = _To_address(_First);

	lea	rcx, QWORD PTR _First$[rbp]
	call	??$_To_address@PEAPEAVnode@@@std@@YA?A_PAEBQEAPEAVnode@@@Z ; std::_To_address<node * *>
	mov	QWORD PTR _FirstPtr$[rbp], rax

; 4161 :     auto _LastPtr               = _To_address(_Last);

	lea	rcx, QWORD PTR _Last$[rbp]
	call	??$_To_address@PEAPEAVnode@@@std@@YA?A_PAEBQEAPEAVnode@@@Z ; std::_To_address<node * *>
	mov	QWORD PTR _LastPtr$[rbp], rax

; 4162 :     auto _DestPtr               = _To_address(_Dest);

	lea	rcx, QWORD PTR _Dest$[rbp]
	call	??$_To_address@PEAPEAVnode@@@std@@YA?A_PAEBQEAPEAVnode@@@Z ; std::_To_address<node * *>
	mov	QWORD PTR _DestPtr$[rbp], rax

; 4163 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));

	mov	rax, QWORD PTR _FirstPtr$[rbp]
	mov	QWORD PTR _First_ch$[rbp], rax

; 4164 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));

	mov	rax, QWORD PTR _LastPtr$[rbp]
	mov	QWORD PTR _Last_ch$[rbp], rax

; 4165 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));

	mov	rax, QWORD PTR _DestPtr$[rbp]
	mov	QWORD PTR _Dest_ch$[rbp], rax

; 4166 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

	mov	rax, QWORD PTR _First_ch$[rbp]
	mov	rcx, QWORD PTR _Last_ch$[rbp]
	sub	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Count$[rbp], rax

; 4167 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	r8, QWORD PTR _Count$[rbp]
	mov	rdx, QWORD PTR _First_ch$[rbp]
	mov	rcx, QWORD PTR _Dest_ch$[rbp]
	call	memmove

; 4168 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4169 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

	mov	rax, QWORD PTR _Count$[rbp]
	mov	rcx, QWORD PTR _Dest_ch$[rbp]
	add	rcx, rax
	mov	rax, rcx

; 4170 :     } else {
; 4171 :         return _Dest + (_LastPtr - _FirstPtr);
; 4172 :     }
; 4173 : }

	lea	rsp, QWORD PTR [rbp+424]
	pop	rdi
	pop	rbp
	ret	0
??$_Copy_memmove@PEAPEAVnode@@PEAPEAV1@@std@@YAPEAPEAVnode@@PEAPEAV1@00@Z ENDP ; std::_Copy_memmove<node * *,node * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\type_traits
;	COMDAT ??$move@AEAPEAVnode@@@std@@YA$$QEAPEAVnode@@AEAPEAV1@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$move@AEAPEAVnode@@@std@@YA$$QEAPEAVnode@@AEAPEAV1@@Z PROC ; std::move<node * &>, COMDAT

; 1455 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__589FA321_type_traits
	call	__CheckForDebuggerJustMyCode

; 1456 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rbp]

; 1457 : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$move@AEAPEAVnode@@@std@@YA$$QEAPEAVnode@@AEAPEAV1@@Z ENDP ; std::move<node * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xutility
;	COMDAT ??$_Get_unwrapped@AEBQEAPEAVnode@@@std@@YA?A_TAEBQEAPEAVnode@@@Z
_TEXT	SEGMENT
_It$ = 224
??$_Get_unwrapped@AEBQEAPEAVnode@@@std@@YA?A_TAEBQEAPEAVnode@@@Z PROC ; std::_Get_unwrapped<node * * const &>, COMDAT

; 1324 : _NODISCARD constexpr decltype(auto) _Get_unwrapped(_Iter&& _It) {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__12269DE6_xutility
	call	__CheckForDebuggerJustMyCode

; 1325 :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 1326 :     if constexpr (is_pointer_v<decay_t<_Iter>>) { // special-case pointers and arrays
; 1327 :         return _It + 0;

	mov	rax, QWORD PTR _It$[rbp]
	mov	rax, QWORD PTR [rax]

; 1328 :     } else if constexpr (_Unwrappable_v<_Iter>) {
; 1329 :         return static_cast<_Iter&&>(_It)._Unwrapped();
; 1330 :     } else {
; 1331 :         return static_cast<_Iter&&>(_It);
; 1332 :     }
; 1333 : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Get_unwrapped@AEBQEAPEAVnode@@@std@@YA?A_TAEBQEAPEAVnode@@@Z ENDP ; std::_Get_unwrapped<node * * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Emplace_back@AEAUop@@@?$_Uninitialized_backout_al@V?$allocator@Uop@@@std@@@std@@QEAAXAEAUop@@@Z
_TEXT	SEGMENT
tv64 = 192
this$ = 240
<_Vals_0>$ = 248
??$_Emplace_back@AEAUop@@@?$_Uninitialized_backout_al@V?$allocator@Uop@@@std@@@std@@QEAAXAEAUop@@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<op> >::_Emplace_back<op &>, COMDAT

; 1630 :     _CONSTEXPR20_DYNALLOC void _Emplace_back(_Types&&... _Vals) { // construct a new element at *_Last and increment

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode

; 1631 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	rcx, QWORD PTR <_Vals_0>$[rbp]
	call	??$forward@AEAUop@@@std@@YAAEAUop@@AEAU1@@Z ; std::forward<op &>
	mov	QWORD PTR tv64[rbp], rax
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	call	??$_Unfancy@Uop@@@std@@YAPEAUop@@PEAU1@@Z ; std::_Unfancy<op>
	mov	rcx, QWORD PTR tv64[rbp]
	mov	r8, rcx
	mov	rdx, rax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+16]
	call	??$construct@Uop@@AEAU1@@?$_Default_allocator_traits@V?$allocator@Uop@@@std@@@std@@SAXAEAV?$allocator@Uop@@@1@QEAUop@@AEAU3@@Z ; std::_Default_allocator_traits<std::allocator<op> >::construct<op,op &>

; 1632 :         ++_Last;

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+8]
	add	rax, 48					; 00000030H
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+8], rax

; 1633 :     }

	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
??$_Emplace_back@AEAUop@@@?$_Uninitialized_backout_al@V?$allocator@Uop@@@std@@@std@@QEAAXAEAUop@@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<op> >::_Emplace_back<op &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@Uop@@@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 224
classSize$ = 232
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@Uop@@@std@@@std@@QEAAX_K@Z PROC ; std::_Uninitialized_backout_al<std::allocator<op> >::__autoclassinit2, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 200				; 000000c8H
	mov	rbp, rsp
	mov	rdi, QWORD PTR this$[rbp]
	xor	eax, eax
	mov	rcx, QWORD PTR classSize$[rbp]
	rep stosb
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@Uop@@@std@@@std@@QEAAX_K@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<op> >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?_Release@?$_Uninitialized_backout_al@V?$allocator@Uop@@@std@@@std@@QEAAPEAUop@@XZ
_TEXT	SEGMENT
this$ = 224
?_Release@?$_Uninitialized_backout_al@V?$allocator@Uop@@@std@@@std@@QEAAPEAUop@@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<op> >::_Release, COMDAT

; 1635 :     constexpr pointer _Release() { // suppress any exception handling backout and return _Last

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode

; 1636 :         _First = _Last;

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	QWORD PTR [rax], rcx

; 1637 :         return _Last;

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+8]

; 1638 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Release@?$_Uninitialized_backout_al@V?$allocator@Uop@@@std@@@std@@QEAAPEAUop@@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<op> >::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@Uop@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$_Uninitialized_backout_al@V?$allocator@Uop@@@std@@@std@@QEAA@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<op> >::~_Uninitialized_backout_al<std::allocator<op> >, COMDAT

; 1625 :     _CONSTEXPR20_DYNALLOC ~_Uninitialized_backout_al() {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode

; 1626 :         _Destroy_range(_First, _Last, _Al);

	mov	rax, QWORD PTR this$[rbp]
	mov	r8, QWORD PTR [rax+16]
	mov	rax, QWORD PTR this$[rbp]
	mov	rdx, QWORD PTR [rax+8]
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Destroy_range@V?$allocator@Uop@@@std@@@std@@YAXPEAUop@@QEAU1@AEAV?$allocator@Uop@@@0@@Z ; std::_Destroy_range<std::allocator<op> >

; 1627 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1?$_Uninitialized_backout_al@V?$allocator@Uop@@@std@@@std@@QEAA@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<op> >::~_Uninitialized_backout_al<std::allocator<op> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??0?$_Uninitialized_backout_al@V?$allocator@Uop@@@std@@@std@@QEAA@PEAUop@@AEAV?$allocator@Uop@@@1@@Z
_TEXT	SEGMENT
this$ = 224
_Dest$ = 232
_Al_$ = 240
??0?$_Uninitialized_backout_al@V?$allocator@Uop@@@std@@@std@@QEAA@PEAUop@@AEAV?$allocator@Uop@@@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<op> >::_Uninitialized_backout_al<std::allocator<op> >, COMDAT

; 1620 :         : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _Dest$[rbp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _Dest$[rbp]
	mov	QWORD PTR [rax+8], rcx
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _Al_$[rbp]
	mov	QWORD PTR [rax+16], rcx
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$_Uninitialized_backout_al@V?$allocator@Uop@@@std@@@std@@QEAA@PEAUop@@AEAV?$allocator@Uop@@@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<op> >::_Uninitialized_backout_al<std::allocator<op> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xutility
;	COMDAT ??$_Get_unwrapped@AEBQEAUop@@@std@@YA?A_TAEBQEAUop@@@Z
_TEXT	SEGMENT
_It$ = 224
??$_Get_unwrapped@AEBQEAUop@@@std@@YA?A_TAEBQEAUop@@@Z PROC ; std::_Get_unwrapped<op * const &>, COMDAT

; 1324 : _NODISCARD constexpr decltype(auto) _Get_unwrapped(_Iter&& _It) {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__12269DE6_xutility
	call	__CheckForDebuggerJustMyCode

; 1325 :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 1326 :     if constexpr (is_pointer_v<decay_t<_Iter>>) { // special-case pointers and arrays
; 1327 :         return _It + 0;

	mov	rax, QWORD PTR _It$[rbp]
	mov	rax, QWORD PTR [rax]

; 1328 :     } else if constexpr (_Unwrappable_v<_Iter>) {
; 1329 :         return static_cast<_Iter&&>(_It)._Unwrapped();
; 1330 :     } else {
; 1331 :         return static_cast<_Iter&&>(_It);
; 1332 :     }
; 1333 : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Get_unwrapped@AEBQEAUop@@@std@@YA?A_TAEBQEAUop@@@Z ENDP ; std::_Get_unwrapped<op * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
_Al$ = 224
_Ptr$ = 232
_Count$ = 240
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate, COMDAT

; 693  :     static _CONSTEXPR20_DYNALLOC void deallocate(_Alloc& _Al, const pointer _Ptr, const size_type _Count) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode

; 694  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 695  : #ifdef __cpp_lib_constexpr_dynamic_alloc // TRANSITION, GH-1532
; 696  :         if (_STD is_constant_evaluated()) {
; 697  :             _Al.deallocate(_Ptr, _Count);
; 698  :         } else
; 699  : #endif // __cpp_lib_constexpr_dynamic_alloc
; 700  :         {
; 701  :             (void) _Al;
; 702  :             _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

	imul	rax, QWORD PTR _Count$[rbp], 16
	mov	rdx, rax
	mov	rcx, QWORD PTR _Ptr$[rbp]
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 703  :         }
; 704  :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Allocators_equal@V?$allocator@D@std@@@std@@YA_NAEBV?$allocator@D@0@0@Z
_TEXT	SEGMENT
_Lhs$ = 224
_Rhs$ = 232
??$_Allocators_equal@V?$allocator@D@std@@@std@@YA_NAEBV?$allocator@D@0@0@Z PROC ; std::_Allocators_equal<std::allocator<char> >, COMDAT

; 1946 : _NODISCARD constexpr bool _Allocators_equal(const _Alloc& _Lhs, const _Alloc& _Rhs) noexcept {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode

; 1947 :     if constexpr (allocator_traits<_Alloc>::is_always_equal::value) {
; 1948 :         return true;

	mov	al, 1

; 1949 :     } else {
; 1950 :         return _Lhs == _Rhs;
; 1951 :     }
; 1952 : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Allocators_equal@V?$allocator@D@std@@@std@@YA_NAEBV?$allocator@D@0@0@Z ENDP ; std::_Allocators_equal<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$?0AEAV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEAV?$allocator@D@1@@Z
_TEXT	SEGMENT
this$ = 224
__formal$ = 232
_Val1$ = 240
??$?0AEAV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEAV?$allocator@D@1@@Z PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> &>, COMDAT

; 1395 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rcx, QWORD PTR _Val1$[rbp]
	call	??$forward@AEAV?$allocator@D@std@@@std@@YAAEAV?$allocator@D@0@AEAV10@@Z ; std::forward<std::allocator<char> &>
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$?0AEAV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEAV?$allocator@D@1@@Z ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Get_size_of_n@$07@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 4
_Max_possible$1 = 40
_Count$ = 288
??$_Get_size_of_n@$07@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<8>, COMDAT

; 59   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode

; 60   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

	mov	BYTE PTR _Overflow_is_possible$[rbp], 1

; 61   : 
; 62   :     if constexpr (_Overflow_is_possible) {
; 63   :         constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

	mov	rax, 2305843009213693951		; 1fffffffffffffffH
	mov	QWORD PTR _Max_possible$1[rbp], rax

; 64   :         if (_Count > _Max_possible) {

	mov	rax, 2305843009213693951		; 1fffffffffffffffH
	cmp	QWORD PTR _Count$[rbp], rax
	jbe	SHORT $LN2@Get_size_o

; 65   :             _Throw_bad_array_new_length(); // multiply overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 66   :         }
; 67   :     }
; 68   : 
; 69   :     return _Count * _Ty_size;

	mov	rax, QWORD PTR _Count$[rbp]
	shl	rax, 3
$LN3@Get_size_o:

; 70   : }

	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
??$_Get_size_of_n@$07@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<8>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Uninitialized_move@PEAPEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@YAPEAPEAVnode@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVnode@@@0@@Z
_TEXT	SEGMENT
_UFirst$ = 8
_ULast$ = 40
_Backout$ = 72
$T4 = 312
__$ArrayPad$ = 328
_First$ = 368
_Last$ = 376
_Dest$ = 384
_Al$ = 392
??$_Uninitialized_move@PEAPEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@YAPEAPEAVnode@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVnode@@@0@@Z PROC ; std::_Uninitialized_move<node * *,std::allocator<node *> >, COMDAT

; 1713 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

$LN7:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 376				; 00000178H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 38					; 00000026H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+408]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode

; 1714 :     // move [_First, _Last) to raw _Dest, using _Al
; 1715 :     // note: only called internally from elsewhere in the STL
; 1716 :     using _Ptrval     = typename _Alloc::value_type*;
; 1717 :     auto _UFirst      = _Get_unwrapped(_First);

	lea	rcx, QWORD PTR _First$[rbp]
	call	??$_Get_unwrapped@AEBQEAPEAVnode@@@std@@YA?A_TAEBQEAPEAVnode@@@Z ; std::_Get_unwrapped<node * * const &>
	mov	QWORD PTR _UFirst$[rbp], rax

; 1718 :     const auto _ULast = _Get_unwrapped(_Last);

	lea	rcx, QWORD PTR _Last$[rbp]
	call	??$_Get_unwrapped@AEBQEAPEAVnode@@@std@@YA?A_TAEBQEAPEAVnode@@@Z ; std::_Get_unwrapped<node * * const &>
	mov	QWORD PTR _ULast$[rbp], rax

; 1719 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1720 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1721 : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 1722 :         if (!_STD is_constant_evaluated())
; 1723 : #endif // __cpp_lib_constexpr_dynamic_alloc
; 1724 :         {
; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

	mov	rcx, QWORD PTR _Dest$[rbp]
	call	??$_Unfancy@PEAVnode@@@std@@YAPEAPEAVnode@@PEAPEAV1@@Z ; std::_Unfancy<node *>
	mov	r8, rax
	mov	rdx, QWORD PTR _ULast$[rbp]
	mov	rcx, QWORD PTR _UFirst$[rbp]
	call	??$_Copy_memmove@PEAPEAVnode@@PEAPEAV1@@std@@YAPEAPEAVnode@@PEAPEAV1@00@Z ; std::_Copy_memmove<node * *,node * *>

; 1726 :             return _Dest + (_ULast - _UFirst);

	mov	rax, QWORD PTR _UFirst$[rbp]
	mov	rcx, QWORD PTR _ULast$[rbp]
	sub	rcx, rax
	mov	rax, rcx
	sar	rax, 3
	mov	rcx, QWORD PTR _Dest$[rbp]
	lea	rax, QWORD PTR [rcx+rax*8]
	jmp	SHORT $LN1@Uninitiali

; 1727 :         }
; 1728 :     }
; 1729 : 
; 1730 :     _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};

	mov	edx, 24
	lea	rcx, QWORD PTR _Backout$[rbp]
	call	?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@PEAVnode@@@std@@@std@@QEAAX_K@Z
	mov	r8, QWORD PTR _Al$[rbp]
	mov	rdx, QWORD PTR _Dest$[rbp]
	lea	rcx, QWORD PTR _Backout$[rbp]
	call	??0?$_Uninitialized_backout_al@V?$allocator@PEAVnode@@@std@@@std@@QEAA@PEAPEAVnode@@AEAV?$allocator@PEAVnode@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<node *> >::_Uninitialized_backout_al<std::allocator<node *> >

; 1731 :     for (; _UFirst != _ULast; ++_UFirst) {

	jmp	SHORT $LN4@Uninitiali
$LN2@Uninitiali:
	mov	rax, QWORD PTR _UFirst$[rbp]
	add	rax, 8
	mov	QWORD PTR _UFirst$[rbp], rax
$LN4@Uninitiali:
	mov	rax, QWORD PTR _ULast$[rbp]
	cmp	QWORD PTR _UFirst$[rbp], rax
	je	SHORT $LN3@Uninitiali

; 1732 :         _Backout._Emplace_back(_STD move(*_UFirst));

	mov	rcx, QWORD PTR _UFirst$[rbp]
	call	??$move@AEAPEAVnode@@@std@@YA$$QEAPEAVnode@@AEAPEAV1@@Z ; std::move<node * &>
	mov	rdx, rax
	lea	rcx, QWORD PTR _Backout$[rbp]
	call	??$_Emplace_back@PEAVnode@@@?$_Uninitialized_backout_al@V?$allocator@PEAVnode@@@std@@@std@@QEAAX$$QEAPEAVnode@@@Z ; std::_Uninitialized_backout_al<std::allocator<node *> >::_Emplace_back<node *>

; 1733 :     }

	jmp	SHORT $LN2@Uninitiali
$LN3@Uninitiali:

; 1734 : 
; 1735 :     return _Backout._Release();

	lea	rcx, QWORD PTR _Backout$[rbp]
	call	?_Release@?$_Uninitialized_backout_al@V?$allocator@PEAVnode@@@std@@@std@@QEAAPEAPEAVnode@@XZ ; std::_Uninitialized_backout_al<std::allocator<node *> >::_Release
	mov	QWORD PTR $T4[rbp], rax
	lea	rcx, QWORD PTR _Backout$[rbp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@PEAVnode@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<node *> >::~_Uninitialized_backout_al<std::allocator<node *> >
	mov	rax, QWORD PTR $T4[rbp]
$LN1@Uninitiali:

; 1736 : }

	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:??$_Uninitialized_move@PEAPEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@YAPEAPEAVnode@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVnode@@@0@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+344]
	pop	rdi
	pop	rbp
	ret	0
??$_Uninitialized_move@PEAPEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@YAPEAPEAVnode@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVnode@@@0@@Z ENDP ; std::_Uninitialized_move<node * *,std::allocator<node *> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 8
_ULast$ = 40
_Backout$ = 72
$T4 = 312
__$ArrayPad$ = 328
_First$ = 368
_Last$ = 376
_Dest$ = 384
_Al$ = 392
?dtor$0@?0???$_Uninitialized_move@PEAPEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@YAPEAPEAVnode@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVnode@@@0@@Z@4HA PROC ; `std::_Uninitialized_move<node * *,std::allocator<node *> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR _Backout$[rbp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@PEAVnode@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<node *> >::~_Uninitialized_backout_al<std::allocator<node *> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$_Uninitialized_move@PEAPEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@YAPEAPEAVnode@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVnode@@@0@@Z@4HA ENDP ; `std::_Uninitialized_move<node * *,std::allocator<node *> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 8
_ULast$ = 40
_Backout$ = 72
$T4 = 312
__$ArrayPad$ = 328
_First$ = 368
_Last$ = 376
_Dest$ = 384
_Al$ = 392
?dtor$0@?0???$_Uninitialized_move@PEAPEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@YAPEAPEAVnode@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVnode@@@0@@Z@4HA PROC ; `std::_Uninitialized_move<node * *,std::allocator<node *> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR _Backout$[rbp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@PEAVnode@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<node *> >::~_Uninitialized_backout_al<std::allocator<node *> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$_Uninitialized_move@PEAPEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@YAPEAPEAVnode@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVnode@@@0@@Z@4HA ENDP ; `std::_Uninitialized_move<node * *,std::allocator<node *> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
__formal$ = 224
_Ptr$ = 232
??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 719  :     static _CONSTEXPR20_DYNALLOC void destroy(_Alloc&, _Uty* const _Ptr) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode

; 720  : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 721  :         _STD destroy_at(_Ptr);
; 722  : #else // __cpp_lib_constexpr_dynamic_alloc
; 723  :         _Ptr->~_Uty();

	xor	edx, edx
	mov	rcx, QWORD PTR _Ptr$[rbp]
	call	??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAPEAXI@Z

; 724  : #endif // __cpp_lib_constexpr_dynamic_alloc
; 725  :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstddef
;	COMDAT ??$_Unfancy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@@Z
_TEXT	SEGMENT
_Ptr$ = 224
??$_Unfancy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@@Z PROC ; std::_Unfancy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 288  : _NODISCARD constexpr _Ty* _Unfancy(_Ty* _Ptr) noexcept { // do nothing for plain pointers

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__E458E21C_xstddef
	call	__CheckForDebuggerJustMyCode

; 289  :     return _Ptr;

	mov	rax, QWORD PTR _Ptr$[rbp]

; 290  : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Unfancy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@@Z ENDP ; std::_Unfancy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$destroy@Uop@@@?$_Default_allocator_traits@V?$allocator@Uop@@@std@@@std@@SAXAEAV?$allocator@Uop@@@1@QEAUop@@@Z
_TEXT	SEGMENT
__formal$ = 224
_Ptr$ = 232
??$destroy@Uop@@@?$_Default_allocator_traits@V?$allocator@Uop@@@std@@@std@@SAXAEAV?$allocator@Uop@@@1@QEAUop@@@Z PROC ; std::_Default_allocator_traits<std::allocator<op> >::destroy<op>, COMDAT

; 719  :     static _CONSTEXPR20_DYNALLOC void destroy(_Alloc&, _Uty* const _Ptr) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode

; 720  : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 721  :         _STD destroy_at(_Ptr);
; 722  : #else // __cpp_lib_constexpr_dynamic_alloc
; 723  :         _Ptr->~_Uty();

	xor	edx, edx
	mov	rcx, QWORD PTR _Ptr$[rbp]
	call	??_Gop@@QEAAPEAXI@Z

; 724  : #endif // __cpp_lib_constexpr_dynamic_alloc
; 725  :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$destroy@Uop@@@?$_Default_allocator_traits@V?$allocator@Uop@@@std@@@std@@SAXAEAV?$allocator@Uop@@@1@QEAUop@@@Z ENDP ; std::_Default_allocator_traits<std::allocator<op> >::destroy<op>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstddef
;	COMDAT ??$_Unfancy@Uop@@@std@@YAPEAUop@@PEAU1@@Z
_TEXT	SEGMENT
_Ptr$ = 224
??$_Unfancy@Uop@@@std@@YAPEAUop@@PEAU1@@Z PROC		; std::_Unfancy<op>, COMDAT

; 288  : _NODISCARD constexpr _Ty* _Unfancy(_Ty* _Ptr) noexcept { // do nothing for plain pointers

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__E458E21C_xstddef
	call	__CheckForDebuggerJustMyCode

; 289  :     return _Ptr;

	mov	rax, QWORD PTR _Ptr$[rbp]

; 290  : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Unfancy@Uop@@@std@@YAPEAUop@@PEAU1@@Z ENDP		; std::_Unfancy<op>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Block_size$ = 8
_Ptr_container$ = 40
_Ptr$ = 72
_Bytes$ = 320
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 134  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

$LN13:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 344				; 00000158H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode

; 135  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 136  :     const size_t _Block_size = _Non_user_size + _Bytes;

	mov	rax, QWORD PTR _Bytes$[rbp]
	add	rax, 47					; 0000002fH
	mov	QWORD PTR _Block_size$[rbp], rax

; 137  :     if (_Block_size <= _Bytes) {

	mov	rax, QWORD PTR _Bytes$[rbp]
	cmp	QWORD PTR _Block_size$[rbp], rax
	ja	SHORT $LN8@Allocate_m

; 138  :         _Throw_bad_array_new_length(); // add overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
$LN8@Allocate_m:

; 139  :     }
; 140  : 
; 141  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

	mov	rcx, QWORD PTR _Block_size$[rbp]
	call	?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
	mov	QWORD PTR _Ptr_container$[rbp], rax
$LN4@Allocate_m:

; 142  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

	cmp	QWORD PTR _Ptr_container$[rbp], 0
	je	SHORT $LN9@Allocate_m
	jmp	SHORT $LN10@Allocate_m
$LN9@Allocate_m:
$LN7@Allocate_m:
	lea	rax, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 142				; 0000008eH
	lea	rdx, OFFSET FLAT:??_C@_0GI@MNEMJBML@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN12@Allocate_m
	int	3
	xor	eax, eax
$LN12@Allocate_m:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 142				; 0000008eH
	lea	r8, OFFSET FLAT:??_C@_1NA@MJBOBEJL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_1EO@GFNCMDLA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA_@
	lea	rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@Allocate_m
$LN10@Allocate_m:
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN4@Allocate_m

; 143  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

	mov	rax, QWORD PTR _Ptr_container$[rbp]
	add	rax, 47					; 0000002fH
	and	rax, -32				; ffffffffffffffe0H
	mov	QWORD PTR _Ptr$[rbp], rax

; 144  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

	mov	eax, 8
	imul	rax, rax, -1
	mov	rcx, QWORD PTR _Ptr$[rbp]
	mov	rdx, QWORD PTR _Ptr_container$[rbp]
	mov	QWORD PTR [rcx+rax], rdx

; 145  : 
; 146  : #ifdef _DEBUG
; 147  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;

	mov	eax, 8
	imul	rax, rax, -2
	mov	rcx, QWORD PTR _Ptr$[rbp]
	mov	rdx, -361700864190383366		; fafafafafafafafaH
	mov	QWORD PTR [rcx+rax], rdx

; 148  : #endif // _DEBUG
; 149  :     return _Ptr;

	mov	rax, QWORD PTR _Ptr$[rbp]
$LN11@Allocate_m:

; 150  : }

	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\type_traits
;	COMDAT ??$forward@AEBV?$allocator@D@std@@@std@@YAAEBV?$allocator@D@0@AEBV10@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@AEBV?$allocator@D@std@@@std@@YAAEBV?$allocator@D@0@AEBV10@@Z PROC ; std::forward<std::allocator<char> const &>, COMDAT

; 1443 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__589FA321_type_traits
	call	__CheckForDebuggerJustMyCode

; 1444 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rbp]

; 1445 : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$forward@AEBV?$allocator@D@std@@@std@@YAAEBV?$allocator@D@0@AEBV10@@Z ENDP ; std::forward<std::allocator<char> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\type_traits
;	COMDAT ??$forward@AEAPEAD@std@@YAAEAPEADAEAPEAD@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@AEAPEAD@std@@YAAEAPEADAEAPEAD@Z PROC		; std::forward<char * &>, COMDAT

; 1443 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__589FA321_type_traits
	call	__CheckForDebuggerJustMyCode

; 1444 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rbp]

; 1445 : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$forward@AEAPEAD@std@@YAAEAPEADAEAPEAD@Z ENDP		; std::forward<char * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\type_traits
;	COMDAT ??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z PROC		; std::forward<char * const &>, COMDAT

; 1443 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__589FA321_type_traits
	call	__CheckForDebuggerJustMyCode

; 1444 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rbp]

; 1445 : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z ENDP		; std::forward<char * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xutility
;	COMDAT ??$_Voidify_iter@PEAPEAD@std@@YAPEAXPEAPEAD@Z
_TEXT	SEGMENT
_It$ = 224
??$_Voidify_iter@PEAPEAD@std@@YAPEAXPEAPEAD@Z PROC	; std::_Voidify_iter<char * *>, COMDAT

; 130  : _NODISCARD constexpr void* _Voidify_iter(_Iter _It) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__12269DE6_xutility
	call	__CheckForDebuggerJustMyCode

; 131  :     if constexpr (is_pointer_v<_Iter>) {
; 132  :         return const_cast<void*>(static_cast<const volatile void*>(_It));

	mov	rax, QWORD PTR _It$[rbp]

; 133  :     } else {
; 134  :         return const_cast<void*>(static_cast<const volatile void*>(_STD addressof(*_It)));
; 135  :     }
; 136  : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Voidify_iter@PEAPEAD@std@@YAPEAXPEAPEAD@Z ENDP	; std::_Voidify_iter<char * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstddef
;	COMDAT ??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z
_TEXT	SEGMENT
_Val$ = 224
??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z PROC		; std::addressof<char *>, COMDAT

; 274  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__E458E21C_xstddef
	call	__CheckForDebuggerJustMyCode

; 275  :     return __builtin_addressof(_Val);

	mov	rax, QWORD PTR _Val$[rbp]

; 276  : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z ENDP		; std::addressof<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\type_traits
;	COMDAT ??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z PROC ; std::forward<std::allocator<char> >, COMDAT

; 1443 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__589FA321_type_traits
	call	__CheckForDebuggerJustMyCode

; 1444 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rbp]

; 1445 : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ENDP ; std::forward<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Uninitialized_copy@PEAUop@@V?$allocator@Uop@@@std@@@std@@YAPEAUop@@QEAU1@0PEAU1@AEAV?$allocator@Uop@@@0@@Z
_TEXT	SEGMENT
_UFirst$ = 8
_ULast$ = 40
_Backout$ = 72
$T4 = 312
__$ArrayPad$ = 328
_First$ = 368
_Last$ = 376
_Dest$ = 384
_Al$ = 392
??$_Uninitialized_copy@PEAUop@@V?$allocator@Uop@@@std@@@std@@YAPEAUop@@QEAU1@0PEAU1@AEAV?$allocator@Uop@@@0@@Z PROC ; std::_Uninitialized_copy<op *,std::allocator<op> >, COMDAT

; 1649 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

$LN7:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 376				; 00000178H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 38					; 00000026H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+408]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode

; 1650 :     // copy [_First, _Last) to raw _Dest, using _Al
; 1651 :     // note: only called internally from elsewhere in the STL
; 1652 :     using _Ptrval = typename _Alloc::value_type*;
; 1653 : 
; 1654 :     auto _UFirst      = _Get_unwrapped(_First);

	lea	rcx, QWORD PTR _First$[rbp]
	call	??$_Get_unwrapped@AEBQEAUop@@@std@@YA?A_TAEBQEAUop@@@Z ; std::_Get_unwrapped<op * const &>
	mov	QWORD PTR _UFirst$[rbp], rax

; 1655 :     const auto _ULast = _Get_unwrapped(_Last);

	lea	rcx, QWORD PTR _Last$[rbp]
	call	??$_Get_unwrapped@AEBQEAUop@@@std@@YA?A_TAEBQEAUop@@@Z ; std::_Get_unwrapped<op * const &>
	mov	QWORD PTR _ULast$[rbp], rax

; 1656 : 
; 1657 :     if constexpr (conjunction_v<bool_constant<_Ptr_copy_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1658 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(*_UFirst)>>) {
; 1659 : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 1660 :         if (!_STD is_constant_evaluated())
; 1661 : #endif // __cpp_lib_constexpr_dynamic_alloc
; 1662 :         {
; 1663 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1664 :             _Dest += _ULast - _UFirst;
; 1665 :             return _Dest;
; 1666 :         }
; 1667 :     }
; 1668 : 
; 1669 :     _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};

	mov	edx, 24
	lea	rcx, QWORD PTR _Backout$[rbp]
	call	?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@Uop@@@std@@@std@@QEAAX_K@Z
	mov	r8, QWORD PTR _Al$[rbp]
	mov	rdx, QWORD PTR _Dest$[rbp]
	lea	rcx, QWORD PTR _Backout$[rbp]
	call	??0?$_Uninitialized_backout_al@V?$allocator@Uop@@@std@@@std@@QEAA@PEAUop@@AEAV?$allocator@Uop@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<op> >::_Uninitialized_backout_al<std::allocator<op> >
	npad	1

; 1670 :     for (; _UFirst != _ULast; ++_UFirst) {

	jmp	SHORT $LN4@Uninitiali
$LN2@Uninitiali:
	mov	rax, QWORD PTR _UFirst$[rbp]
	add	rax, 48					; 00000030H
	mov	QWORD PTR _UFirst$[rbp], rax
$LN4@Uninitiali:
	mov	rax, QWORD PTR _ULast$[rbp]
	cmp	QWORD PTR _UFirst$[rbp], rax
	je	SHORT $LN3@Uninitiali

; 1671 :         _Backout._Emplace_back(*_UFirst);

	mov	rdx, QWORD PTR _UFirst$[rbp]
	lea	rcx, QWORD PTR _Backout$[rbp]
	call	??$_Emplace_back@AEAUop@@@?$_Uninitialized_backout_al@V?$allocator@Uop@@@std@@@std@@QEAAXAEAUop@@@Z ; std::_Uninitialized_backout_al<std::allocator<op> >::_Emplace_back<op &>

; 1672 :     }

	jmp	SHORT $LN2@Uninitiali
$LN3@Uninitiali:

; 1673 : 
; 1674 :     return _Backout._Release();

	lea	rcx, QWORD PTR _Backout$[rbp]
	call	?_Release@?$_Uninitialized_backout_al@V?$allocator@Uop@@@std@@@std@@QEAAPEAUop@@XZ ; std::_Uninitialized_backout_al<std::allocator<op> >::_Release
	mov	QWORD PTR $T4[rbp], rax
	lea	rcx, QWORD PTR _Backout$[rbp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@Uop@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<op> >::~_Uninitialized_backout_al<std::allocator<op> >
	mov	rax, QWORD PTR $T4[rbp]

; 1675 : }

	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:??$_Uninitialized_copy@PEAUop@@V?$allocator@Uop@@@std@@@std@@YAPEAUop@@QEAU1@0PEAU1@AEAV?$allocator@Uop@@@0@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+344]
	pop	rdi
	pop	rbp
	ret	0
??$_Uninitialized_copy@PEAUop@@V?$allocator@Uop@@@std@@@std@@YAPEAUop@@QEAU1@0PEAU1@AEAV?$allocator@Uop@@@0@@Z ENDP ; std::_Uninitialized_copy<op *,std::allocator<op> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 8
_ULast$ = 40
_Backout$ = 72
$T4 = 312
__$ArrayPad$ = 328
_First$ = 368
_Last$ = 376
_Dest$ = 384
_Al$ = 392
?dtor$0@?0???$_Uninitialized_copy@PEAUop@@V?$allocator@Uop@@@std@@@std@@YAPEAUop@@QEAU1@0PEAU1@AEAV?$allocator@Uop@@@0@@Z@4HA PROC ; `std::_Uninitialized_copy<op *,std::allocator<op> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR _Backout$[rbp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@Uop@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<op> >::~_Uninitialized_backout_al<std::allocator<op> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$_Uninitialized_copy@PEAUop@@V?$allocator@Uop@@@std@@@std@@YAPEAUop@@QEAU1@0PEAU1@AEAV?$allocator@Uop@@@0@@Z@4HA ENDP ; `std::_Uninitialized_copy<op *,std::allocator<op> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 8
_ULast$ = 40
_Backout$ = 72
$T4 = 312
__$ArrayPad$ = 328
_First$ = 368
_Last$ = 376
_Dest$ = 384
_Al$ = 392
?dtor$0@?0???$_Uninitialized_copy@PEAUop@@V?$allocator@Uop@@@std@@@std@@YAPEAUop@@QEAU1@0PEAU1@AEAV?$allocator@Uop@@@0@@Z@4HA PROC ; `std::_Uninitialized_copy<op *,std::allocator<op> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR _Backout$[rbp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@Uop@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<op> >::~_Uninitialized_backout_al<std::allocator<op> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$_Uninitialized_copy@PEAUop@@V?$allocator@Uop@@@std@@@std@@YAPEAUop@@QEAU1@0PEAU1@AEAV?$allocator@Uop@@@0@@Z@4HA ENDP ; `std::_Uninitialized_copy<op *,std::allocator<op> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\type_traits
;	COMDAT ??$forward@V?$allocator@Uop@@@std@@@std@@YA$$QEAV?$allocator@Uop@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@V?$allocator@Uop@@@std@@@std@@YA$$QEAV?$allocator@Uop@@@0@AEAV10@@Z PROC ; std::forward<std::allocator<op> >, COMDAT

; 1443 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__589FA321_type_traits
	call	__CheckForDebuggerJustMyCode

; 1444 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rbp]

; 1445 : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$forward@V?$allocator@Uop@@@std@@@std@@YA$$QEAV?$allocator@Uop@@@0@AEAV10@@Z ENDP ; std::forward<std::allocator<op> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_Al$ = 224
_Ptr$ = 232
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z PROC ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >, COMDAT

; 985  : _CONSTEXPR20_DYNALLOC void _Deallocate_plain(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode

; 986  :     // deallocate a plain pointer using an allocator
; 987  :     using _Alloc_traits = allocator_traits<_Alloc>;
; 988  :     if constexpr (is_same_v<_Alloc_ptr_t<_Alloc>, typename _Alloc::value_type*>) {
; 989  :         _Alloc_traits::deallocate(_Al, _Ptr, 1);

	mov	r8d, 1
	mov	rdx, QWORD PTR _Ptr$[rbp]
	mov	rcx, QWORD PTR _Al$[rbp]
	call	?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
	npad	1

; 990  :     } else {
; 991  :         using _Ptr_traits = pointer_traits<_Alloc_ptr_t<_Alloc>>;
; 992  :         _Alloc_traits::deallocate(_Al, _Ptr_traits::pointer_to(*_Ptr), 1);
; 993  :     }
; 994  : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ENDP ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xutility
;	COMDAT ??$_Voidify_iter@PEAPEAVnode@@@std@@YAPEAXPEAPEAVnode@@@Z
_TEXT	SEGMENT
_It$ = 224
??$_Voidify_iter@PEAPEAVnode@@@std@@YAPEAXPEAPEAVnode@@@Z PROC ; std::_Voidify_iter<node * *>, COMDAT

; 130  : _NODISCARD constexpr void* _Voidify_iter(_Iter _It) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__12269DE6_xutility
	call	__CheckForDebuggerJustMyCode

; 131  :     if constexpr (is_pointer_v<_Iter>) {
; 132  :         return const_cast<void*>(static_cast<const volatile void*>(_It));

	mov	rax, QWORD PTR _It$[rbp]

; 133  :     } else {
; 134  :         return const_cast<void*>(static_cast<const volatile void*>(_STD addressof(*_It)));
; 135  :     }
; 136  : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Voidify_iter@PEAPEAVnode@@@std@@YAPEAXPEAPEAVnode@@@Z ENDP ; std::_Voidify_iter<node * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z
_TEXT	SEGMENT
_State$ = 4
_Pad$ = 40
_Ok$ = 72
$T4 = 308
$T5 = 340
$T6 = 372
$T7 = 404
$T8 = 440
tv296 = 452
tv291 = 452
tv136 = 452
tv297 = 456
tv294 = 456
tv292 = 456
tv298 = 464
tv295 = 464
tv293 = 464
__$ArrayPad$ = 472
_Ostr$ = 512
_Data$ = 520
_Size$ = 528
??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z PROC ; std::_Insert_string<char,std::char_traits<char>,unsigned __int64>, COMDAT

; 501  :     basic_ostream<_Elem, _Traits>& _Ostr, const _Elem* const _Data, const _SizeT _Size) {

$LN26:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 520				; 00000208H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 74					; 0000004aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+552]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode

; 502  :     // insert a character-type sequence into _Ostr as if through a basic_string copy
; 503  :     using _Ostr_t                    = basic_ostream<_Elem, _Traits>;
; 504  :     typename _Ostr_t::iostate _State = _Ostr_t::goodbit;

	mov	DWORD PTR _State$[rbp], 0

; 505  : 
; 506  :     _SizeT _Pad;
; 507  :     if (_Ostr.width() <= 0 || static_cast<_SizeT>(_Ostr.width()) <= _Size) {

	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
	test	rax, rax
	jle	SHORT $LN10@Insert_str
	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
	cmp	rax, QWORD PTR _Size$[rbp]
	ja	SHORT $LN8@Insert_str
$LN10@Insert_str:

; 508  :         _Pad = 0;

	mov	QWORD PTR _Pad$[rbp], 0

; 509  :     } else {

	jmp	SHORT $LN9@Insert_str
$LN8@Insert_str:

; 510  :         _Pad = static_cast<_SizeT>(_Ostr.width()) - _Size;

	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
	sub	rax, QWORD PTR _Size$[rbp]
	mov	QWORD PTR _Pad$[rbp], rax
$LN9@Insert_str:

; 511  :     }
; 512  : 
; 513  :     const typename _Ostr_t::sentry _Ok(_Ostr);

	mov	rdx, QWORD PTR _Ostr$[rbp]
	lea	rcx, QWORD PTR _Ok$[rbp]
	call	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
	npad	1

; 514  : 
; 515  :     if (!_Ok) {

	lea	rcx, QWORD PTR _Ok$[rbp]
	call	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN11@Insert_str

; 516  :         _State |= _Ostr_t::badbit;

	mov	eax, DWORD PTR _State$[rbp]
	or	eax, 4
	mov	DWORD PTR _State$[rbp], eax

; 517  :     } else { // state okay, insert characters

	jmp	$LN12@Insert_str
$LN11@Insert_str:

; 518  :         _TRY_IO_BEGIN
; 519  :         if ((_Ostr.flags() & _Ostr_t::adjustfield) != _Ostr_t::left) {

	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?flags@ios_base@std@@QEBAHXZ
	mov	DWORD PTR tv136[rbp], eax
	mov	eax, DWORD PTR tv136[rbp]
	and	eax, 448				; 000001c0H
	cmp	eax, 64					; 00000040H
	je	$LN14@Insert_str

; 520  :             for (; 0 < _Pad; --_Pad) { // pad on left

	jmp	SHORT $LN4@Insert_str
$LN2@Insert_str:
	mov	rax, QWORD PTR _Pad$[rbp]
	dec	rax
	mov	QWORD PTR _Pad$[rbp], rax
$LN4@Insert_str:
	cmp	QWORD PTR _Pad$[rbp], 0
	jbe	$LN14@Insert_str

; 521  :                 if (_Traits::eq_int_type(_Traits::eof(), _Ostr.rdbuf()->sputc(_Ostr.fill()))) {

	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ
	mov	BYTE PTR tv291[rbp], al
	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	QWORD PTR tv292[rbp], rax
	movzx	edx, BYTE PTR tv291[rbp]
	mov	rcx, QWORD PTR tv292[rbp]
	call	QWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z
	mov	DWORD PTR tv293[rbp], eax
	mov	eax, DWORD PTR tv293[rbp]
	mov	DWORD PTR $T4[rbp], eax
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	mov	DWORD PTR $T5[rbp], eax
	lea	rdx, QWORD PTR $T4[rbp]
	lea	rcx, QWORD PTR $T5[rbp]
	call	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN15@Insert_str

; 522  :                     _State |= _Ostr_t::badbit; // insertion failed, quit

	mov	eax, DWORD PTR _State$[rbp]
	or	eax, 4
	mov	DWORD PTR _State$[rbp], eax

; 523  :                     break;

	jmp	SHORT $LN14@Insert_str
$LN15@Insert_str:

; 524  :                 }
; 525  :             }

	jmp	$LN2@Insert_str
$LN14@Insert_str:

; 526  :         }
; 527  : 
; 528  :         if (_State == _Ostr_t::goodbit
; 529  :             && _Ostr.rdbuf()->sputn(_Data, static_cast<streamsize>(_Size)) != static_cast<streamsize>(_Size)) {

	cmp	DWORD PTR _State$[rbp], 0
	jne	SHORT $LN16@Insert_str
	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	QWORD PTR tv294[rbp], rax
	mov	r8, QWORD PTR _Size$[rbp]
	mov	rdx, QWORD PTR _Data$[rbp]
	mov	rcx, QWORD PTR tv294[rbp]
	call	QWORD PTR __imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z
	mov	QWORD PTR tv295[rbp], rax
	mov	rax, QWORD PTR _Size$[rbp]
	cmp	QWORD PTR tv295[rbp], rax
	je	SHORT $LN16@Insert_str

; 530  :             _State |= _Ostr_t::badbit;

	mov	eax, DWORD PTR _State$[rbp]
	or	eax, 4
	mov	DWORD PTR _State$[rbp], eax

; 531  :         } else {

	jmp	$LN17@Insert_str
$LN16@Insert_str:

; 532  :             for (; 0 < _Pad; --_Pad) { // pad on right

	jmp	SHORT $LN7@Insert_str
$LN5@Insert_str:
	mov	rax, QWORD PTR _Pad$[rbp]
	dec	rax
	mov	QWORD PTR _Pad$[rbp], rax
$LN7@Insert_str:
	cmp	QWORD PTR _Pad$[rbp], 0
	jbe	$LN17@Insert_str

; 533  :                 if (_Traits::eq_int_type(_Traits::eof(), _Ostr.rdbuf()->sputc(_Ostr.fill()))) {

	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ
	mov	BYTE PTR tv296[rbp], al
	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	QWORD PTR tv297[rbp], rax
	movzx	edx, BYTE PTR tv296[rbp]
	mov	rcx, QWORD PTR tv297[rbp]
	call	QWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z
	mov	DWORD PTR tv298[rbp], eax
	mov	eax, DWORD PTR tv298[rbp]
	mov	DWORD PTR $T6[rbp], eax
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	mov	DWORD PTR $T7[rbp], eax
	lea	rdx, QWORD PTR $T6[rbp]
	lea	rcx, QWORD PTR $T7[rbp]
	call	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN18@Insert_str

; 534  :                     _State |= _Ostr_t::badbit; // insertion failed, quit

	mov	eax, DWORD PTR _State$[rbp]
	or	eax, 4
	mov	DWORD PTR _State$[rbp], eax

; 535  :                     break;

	jmp	SHORT $LN17@Insert_str
$LN18@Insert_str:

; 536  :                 }
; 537  :             }

	jmp	$LN5@Insert_str
$LN17@Insert_str:

; 538  :         }
; 539  : 
; 540  :         _Ostr.width(0);

	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	xor	edx, edx
	mov	rcx, rax
	call	QWORD PTR __imp_?width@ios_base@std@@QEAA_J_J@Z
	npad	1
	jmp	SHORT $LN12@Insert_str
$LN24@Insert_str:
$LN12@Insert_str:

; 541  :         _CATCH_IO_(_Ostr_t, _Ostr)
; 542  :     }
; 543  : 
; 544  :     _Ostr.setstate(_State);

	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	xor	r8d, r8d
	mov	edx, DWORD PTR _State$[rbp]
	mov	rcx, rax
	call	QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z

; 545  :     return _Ostr;

	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	QWORD PTR $T8[rbp], rax
	lea	rcx, QWORD PTR _Ok$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	mov	rax, QWORD PTR $T8[rbp]

; 546  : }

	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+488]
	pop	rdi
	pop	rbp
	ret	0
??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z ENDP ; std::_Insert_string<char,std::char_traits<char>,unsigned __int64>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_State$ = 4
_Pad$ = 40
_Ok$ = 72
$T4 = 308
$T5 = 340
$T6 = 372
$T7 = 404
$T8 = 440
tv296 = 452
tv291 = 452
tv136 = 452
tv297 = 456
tv294 = 456
tv292 = 456
tv298 = 464
tv295 = 464
tv293 = 464
__$ArrayPad$ = 472
_Ostr$ = 512
_Data$ = 520
_Size$ = 528
?dtor$0@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA PROC ; `std::_Insert_string<char,std::char_traits<char>,unsigned __int64>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR _Ok$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA ENDP ; `std::_Insert_string<char,std::char_traits<char>,unsigned __int64>'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_State$ = 4
_Pad$ = 40
_Ok$ = 72
$T4 = 308
$T5 = 340
$T6 = 372
$T7 = 404
$T8 = 440
tv296 = 452
tv291 = 452
tv136 = 452
tv297 = 456
tv294 = 456
tv292 = 456
tv298 = 464
tv295 = 464
tv293 = 464
__$ArrayPad$ = 472
_Ostr$ = 512
_Data$ = 520
_Size$ = 528
?catch$1@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA PROC ; `std::_Insert_string<char,std::char_traits<char>,unsigned __int64>'::`1'::catch$1

; 541  :         _CATCH_IO_(_Ostr_t, _Ostr)

	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
__catch$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z$0:
	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	r8b, 1
	mov	edx, 4
	mov	rcx, rax
	call	QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
	npad	1
	lea	rax, $LN24@catch$1
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
	int	3
?catch$1@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA ENDP ; `std::_Insert_string<char,std::char_traits<char>,unsigned __int64>'::`1'::catch$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_State$ = 4
_Pad$ = 40
_Ok$ = 72
$T4 = 308
$T5 = 340
$T6 = 372
$T7 = 404
$T8 = 440
tv296 = 452
tv291 = 452
tv136 = 452
tv297 = 456
tv294 = 456
tv292 = 456
tv298 = 464
tv295 = 464
tv293 = 464
__$ArrayPad$ = 472
_Ostr$ = 512
_Data$ = 520
_Size$ = 528
?dtor$0@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA PROC ; `std::_Insert_string<char,std::char_traits<char>,unsigned __int64>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR _Ok$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA ENDP ; `std::_Insert_string<char,std::char_traits<char>,unsigned __int64>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_State$ = 4
_Pad$ = 40
_Ok$ = 72
$T4 = 308
$T5 = 340
$T6 = 372
$T7 = 404
$T8 = 440
tv296 = 452
tv291 = 452
tv136 = 452
tv297 = 456
tv294 = 456
tv292 = 456
tv298 = 464
tv295 = 464
tv293 = 464
__$ArrayPad$ = 472
_Ostr$ = 512
_Data$ = 520
_Size$ = 528
?catch$1@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA PROC ; `std::_Insert_string<char,std::char_traits<char>,unsigned __int64>'::`1'::catch$1

; 541  :         _CATCH_IO_(_Ostr_t, _Ostr)

	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
__catch$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z$0:
	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	r8b, 1
	mov	edx, 4
	mov	rcx, rax
	call	QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
	npad	1
	lea	rax, $LN24@catch$1
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
	int	3
?catch$1@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA ENDP ; `std::_Insert_string<char,std::char_traits<char>,unsigned __int64>'::`1'::catch$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\type_traits
;	COMDAT ??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z PROC ; std::forward<std::_Container_base12 *>, COMDAT

; 1443 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__589FA321_type_traits
	call	__CheckForDebuggerJustMyCode

; 1444 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rbp]

; 1445 : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ENDP ; std::forward<std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xutility
;	COMDAT ??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_It$ = 224
??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z PROC ; std::_Voidify_iter<std::_Container_proxy *>, COMDAT

; 130  : _NODISCARD constexpr void* _Voidify_iter(_Iter _It) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__12269DE6_xutility
	call	__CheckForDebuggerJustMyCode

; 131  :     if constexpr (is_pointer_v<_Iter>) {
; 132  :         return const_cast<void*>(static_cast<const volatile void*>(_It));

	mov	rax, QWORD PTR _It$[rbp]

; 133  :     } else {
; 134  :         return const_cast<void*>(static_cast<const volatile void*>(_STD addressof(*_It)));
; 135  :     }
; 136  : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z ENDP ; std::_Voidify_iter<std::_Container_proxy *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstddef
;	COMDAT ??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 224
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z PROC ; std::addressof<std::_Container_proxy>, COMDAT

; 274  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__E458E21C_xstddef
	call	__CheckForDebuggerJustMyCode

; 275  :     return __builtin_addressof(_Val);

	mov	rax, QWORD PTR _Val$[rbp]

; 276  : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ENDP ; std::addressof<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Get_size_of_n@$00@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 4
_Count$ = 256
??$_Get_size_of_n@$00@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<1>, COMDAT

; 59   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode

; 60   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

	mov	BYTE PTR _Overflow_is_possible$[rbp], 0

; 61   : 
; 62   :     if constexpr (_Overflow_is_possible) {
; 63   :         constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;
; 64   :         if (_Count > _Max_possible) {
; 65   :             _Throw_bad_array_new_length(); // multiply overflow
; 66   :         }
; 67   :     }
; 68   : 
; 69   :     return _Count * _Ty_size;

	mov	rax, QWORD PTR _Count$[rbp]

; 70   : }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??$_Get_size_of_n@$00@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstddef
;	COMDAT ??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z
_TEXT	SEGMENT
_Val$ = 224
??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z PROC ; std::addressof<std::_String_val<std::_Simple_types<char> > const >, COMDAT

; 274  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__E458E21C_xstddef
	call	__CheckForDebuggerJustMyCode

; 275  :     return __builtin_addressof(_Val);

	mov	rax, QWORD PTR _Val$[rbp]

; 276  : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z ENDP ; std::addressof<std::_String_val<std::_Simple_types<char> > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstddef
;	COMDAT ??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 224
??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z PROC ; std::addressof<std::_String_val<std::_Simple_types<char> > >, COMDAT

; 274  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__E458E21C_xstddef
	call	__CheckForDebuggerJustMyCode

; 275  :     return __builtin_addressof(_Val);

	mov	rax, QWORD PTR _Val$[rbp]

; 276  : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z ENDP ; std::addressof<std::_String_val<std::_Simple_types<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
_TEXT	SEGMENT
_First$ = 224
_Last$ = 232
_Al$ = 240
??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z PROC ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 945  :     _Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN6:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode

; 946  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 947  :     using _Ty = typename _Alloc::value_type;
; 948  :     if constexpr (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 949  :         for (; _First != _Last; ++_First) {

	jmp	SHORT $LN4@Destroy_ra
$LN2@Destroy_ra:
	mov	rax, QWORD PTR _First$[rbp]
	add	rax, 40					; 00000028H
	mov	QWORD PTR _First$[rbp], rax
$LN4@Destroy_ra:
	mov	rax, QWORD PTR _Last$[rbp]
	cmp	QWORD PTR _First$[rbp], rax
	je	SHORT $LN3@Destroy_ra

; 950  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));

	mov	rcx, QWORD PTR _First$[rbp]
	call	??$_Unfancy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@@Z ; std::_Unfancy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	mov	rdx, rax
	mov	rcx, QWORD PTR _Al$[rbp]
	call	??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Default_allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >

; 951  :         }

	jmp	SHORT $LN2@Destroy_ra
$LN3@Destroy_ra:

; 952  :     }
; 953  : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Get_size_of_n@$0DA@@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 4
_Max_possible$1 = 40
_Count$ = 288
??$_Get_size_of_n@$0DA@@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<48>, COMDAT

; 59   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode

; 60   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

	mov	BYTE PTR _Overflow_is_possible$[rbp], 1

; 61   : 
; 62   :     if constexpr (_Overflow_is_possible) {
; 63   :         constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

	mov	rax, 384307168202282325			; 0555555555555555H
	mov	QWORD PTR _Max_possible$1[rbp], rax

; 64   :         if (_Count > _Max_possible) {

	mov	rax, 384307168202282325			; 0555555555555555H
	cmp	QWORD PTR _Count$[rbp], rax
	jbe	SHORT $LN2@Get_size_o

; 65   :             _Throw_bad_array_new_length(); // multiply overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 66   :         }
; 67   :     }
; 68   : 
; 69   :     return _Count * _Ty_size;

	imul	rax, QWORD PTR _Count$[rbp], 48		; 00000030H
$LN3@Get_size_o:

; 70   : }

	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
??$_Get_size_of_n@$0DA@@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<48>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@Uop@@@std@@@std@@YAXPEAUop@@QEAU1@AEAV?$allocator@Uop@@@0@@Z
_TEXT	SEGMENT
_First$ = 224
_Last$ = 232
_Al$ = 240
??$_Destroy_range@V?$allocator@Uop@@@std@@@std@@YAXPEAUop@@QEAU1@AEAV?$allocator@Uop@@@0@@Z PROC ; std::_Destroy_range<std::allocator<op> >, COMDAT

; 945  :     _Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN6:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode

; 946  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 947  :     using _Ty = typename _Alloc::value_type;
; 948  :     if constexpr (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 949  :         for (; _First != _Last; ++_First) {

	jmp	SHORT $LN4@Destroy_ra
$LN2@Destroy_ra:
	mov	rax, QWORD PTR _First$[rbp]
	add	rax, 48					; 00000030H
	mov	QWORD PTR _First$[rbp], rax
$LN4@Destroy_ra:
	mov	rax, QWORD PTR _Last$[rbp]
	cmp	QWORD PTR _First$[rbp], rax
	je	SHORT $LN3@Destroy_ra

; 950  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));

	mov	rcx, QWORD PTR _First$[rbp]
	call	??$_Unfancy@Uop@@@std@@YAPEAUop@@PEAU1@@Z ; std::_Unfancy<op>
	mov	rdx, rax
	mov	rcx, QWORD PTR _Al$[rbp]
	call	??$destroy@Uop@@@?$_Default_allocator_traits@V?$allocator@Uop@@@std@@@std@@SAXAEAV?$allocator@Uop@@@1@QEAUop@@@Z ; std::_Default_allocator_traits<std::allocator<op> >::destroy<op>

; 951  :         }

	jmp	SHORT $LN2@Destroy_ra
$LN3@Destroy_ra:

; 952  :     }
; 953  : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Destroy_range@V?$allocator@Uop@@@std@@@std@@YAXPEAUop@@QEAU1@AEAV?$allocator@Uop@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<op> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@Ubraket_group@@@std@@@std@@YAXPEAUbraket_group@@QEAU1@AEAV?$allocator@Ubraket_group@@@0@@Z
_TEXT	SEGMENT
_First$ = 224
_Last$ = 232
_Al$ = 240
??$_Destroy_range@V?$allocator@Ubraket_group@@@std@@@std@@YAXPEAUbraket_group@@QEAU1@AEAV?$allocator@Ubraket_group@@@0@@Z PROC ; std::_Destroy_range<std::allocator<braket_group> >, COMDAT

; 945  :     _Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode

; 946  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 947  :     using _Ty = typename _Alloc::value_type;
; 948  :     if constexpr (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 949  :         for (; _First != _Last; ++_First) {
; 950  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 951  :         }
; 952  :     }
; 953  : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Destroy_range@V?$allocator@Ubraket_group@@@std@@@std@@YAXPEAUbraket_group@@QEAU1@AEAV?$allocator@Ubraket_group@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<braket_group> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
_TEXT	SEGMENT
_Ptr$ = 224
_Bytes$ = 232
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z PROC		; std::_Deallocate<16,0>, COMDAT

; 251  : _CONSTEXPR20_DYNALLOC void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode

; 252  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 253  : #ifdef __cpp_lib_constexpr_dynamic_alloc // TRANSITION, GH-1532
; 254  :     if (_STD is_constant_evaluated()) {
; 255  :         ::operator delete(_Ptr);
; 256  :     } else
; 257  : #endif // __cpp_lib_constexpr_dynamic_alloc
; 258  :     {
; 259  : #if defined(_M_IX86) || defined(_M_X64)
; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	QWORD PTR _Bytes$[rbp], 4096		; 00001000H
	jb	SHORT $LN2@Deallocate

; 261  :             _Adjust_manually_vector_aligned(_Ptr, _Bytes);

	lea	rdx, QWORD PTR _Bytes$[rbp]
	lea	rcx, QWORD PTR _Ptr$[rbp]
	call	?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
$LN2@Deallocate:

; 262  :         }
; 263  : #endif // defined(_M_IX86) || defined(_M_X64)
; 264  :         ::operator delete(_Ptr, _Bytes);

	mov	rdx, QWORD PTR _Bytes$[rbp]
	mov	rcx, QWORD PTR _Ptr$[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
	npad	1

; 265  :     }
; 266  : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ENDP		; std::_Deallocate<16,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 224
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z PROC ; std::_Allocate<16,std::_Default_allocate_traits,0>, COMDAT

; 230  : __declspec(allocator) _CONSTEXPR20_DYNALLOC void* _Allocate(const size_t _Bytes) {

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode

; 231  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 232  : #if defined(_M_IX86) || defined(_M_X64)
; 233  : #ifdef __cpp_lib_constexpr_dynamic_alloc // TRANSITION, GH-1532
; 234  :     if (!_STD is_constant_evaluated())
; 235  : #endif // __cpp_lib_constexpr_dynamic_alloc
; 236  :     {
; 237  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	QWORD PTR _Bytes$[rbp], 4096		; 00001000H
	jb	SHORT $LN2@Allocate

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

	mov	rcx, QWORD PTR _Bytes$[rbp]
	call	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
	jmp	SHORT $LN1@Allocate
$LN2@Allocate:

; 239  :         }
; 240  :     }
; 241  : #endif // defined(_M_IX86) || defined(_M_X64)
; 242  : 
; 243  :     if (_Bytes != 0) {

	cmp	QWORD PTR _Bytes$[rbp], 0
	je	SHORT $LN3@Allocate

; 244  :         return _Traits::_Allocate(_Bytes);

	mov	rcx, QWORD PTR _Bytes$[rbp]
	call	?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
	jmp	SHORT $LN1@Allocate
$LN3@Allocate:

; 245  :     }
; 246  : 
; 247  :     return nullptr;

	xor	eax, eax
$LN1@Allocate:

; 248  : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ENDP ; std::_Allocate<16,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 4
_Max_possible$1 = 40
_Count$ = 288
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<16>, COMDAT

; 59   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode

; 60   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

	mov	BYTE PTR _Overflow_is_possible$[rbp], 1

; 61   : 
; 62   :     if constexpr (_Overflow_is_possible) {
; 63   :         constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

	mov	rax, 1152921504606846975		; 0fffffffffffffffH
	mov	QWORD PTR _Max_possible$1[rbp], rax

; 64   :         if (_Count > _Max_possible) {

	mov	rax, 1152921504606846975		; 0fffffffffffffffH
	cmp	QWORD PTR _Count$[rbp], rax
	jbe	SHORT $LN2@Get_size_o

; 65   :             _Throw_bad_array_new_length(); // multiply overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 66   :         }
; 67   :     }
; 68   : 
; 69   :     return _Count * _Ty_size;

	imul	rax, QWORD PTR _Count$[rbp], 16
$LN3@Get_size_o:

; 70   : }

	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<16>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility
;	COMDAT ??$max@_K@std@@YAAEB_KAEB_K0@Z
_TEXT	SEGMENT
$T1 = 200
tv65 = 216
_Left$ = 256
_Right$ = 264
??$max@_K@std@@YAAEB_KAEB_K0@Z PROC			; std::max<unsigned __int64>, COMDAT

; 42   :     const _Ty& _Left, const _Ty& _Right) noexcept(noexcept(_Left < _Right)) /* strengthened */ {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1347750E_utility
	call	__CheckForDebuggerJustMyCode

; 43   :     // return larger of _Left and _Right
; 44   :     return _Left < _Right ? _Right : _Left;

	mov	rax, QWORD PTR _Left$[rbp]
	mov	rcx, QWORD PTR _Right$[rbp]
	mov	rcx, QWORD PTR [rcx]
	cmp	QWORD PTR [rax], rcx
	jae	SHORT $LN3@max
	mov	rax, QWORD PTR _Right$[rbp]
	mov	QWORD PTR tv65[rbp], rax
	jmp	SHORT $LN4@max
$LN3@max:
	mov	rax, QWORD PTR _Left$[rbp]
	mov	QWORD PTR tv65[rbp], rax
$LN4@max:
	mov	rax, QWORD PTR tv65[rbp]
	mov	QWORD PTR $T1[rbp], rax
	mov	rax, QWORD PTR $T1[rbp]

; 45   : }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??$max@_K@std@@YAAEB_KAEB_K0@Z ENDP			; std::max<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z
_TEXT	SEGMENT
this$ = 224
__formal$ = 232
_Val1$ = 240
??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> const &>, COMDAT

; 1395 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rcx, QWORD PTR _Val1$[rbp]
	call	??$forward@AEBV?$allocator@D@std@@@std@@YAAEBV?$allocator@D@0@AEBV10@@Z ; std::forward<std::allocator<char> const &>
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Pocma@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@0@Z
_TEXT	SEGMENT
_Left$ = 224
_Right$ = 232
??$_Pocma@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@0@Z PROC ; std::_Pocma<std::allocator<char> >, COMDAT

; 926  : _CONSTEXPR20 void _Pocma(_Alloc& _Left, _Alloc& _Right) noexcept { // (maybe) propagate on container move assignment

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode

; 927  :     if constexpr (allocator_traits<_Alloc>::propagate_on_container_move_assignment::value) {
; 928  :         _Left = _STD move(_Right);

	mov	rcx, QWORD PTR _Right$[rbp]
	call	??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ; std::move<std::allocator<char> &>

; 929  :     }
; 930  : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Pocma@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@0@Z ENDP ; std::_Pocma<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xutility
;	COMDAT ??$_Construct_in_place@PEADAEAPEAD@std@@YAXAEAPEAD0@Z
_TEXT	SEGMENT
$T1 = 200
_Obj$ = 256
<_Args_0>$ = 264
??$_Construct_in_place@PEADAEAPEAD@std@@YAXAEAPEAD0@Z PROC ; std::_Construct_in_place<char *,char * &>, COMDAT

; 151  :     is_nothrow_constructible_v<_Ty, _Types...>) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__12269DE6_xutility
	call	__CheckForDebuggerJustMyCode
	mov	rcx, QWORD PTR _Obj$[rbp]
	call	??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z ; std::addressof<char *>
	mov	rcx, rax
	call	??$_Voidify_iter@PEAPEAD@std@@YAPEAXPEAPEAD@Z ; std::_Voidify_iter<char * *>
	mov	rdx, rax
	mov	ecx, 8
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rbp], rax
	mov	rcx, QWORD PTR <_Args_0>$[rbp]
	call	??$forward@AEAPEAD@std@@YAAEAPEADAEAPEAD@Z ; std::forward<char * &>
	mov	rcx, QWORD PTR $T1[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rcx], rax

; 152  : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 153  :     if (_STD is_constant_evaluated()) {
; 154  :         _STD construct_at(_STD addressof(_Obj), _STD forward<_Types>(_Args)...);
; 155  :     } else
; 156  : #endif // __cpp_lib_constexpr_dynamic_alloc
; 157  :     {
; 158  :         ::new (_Voidify_iter(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);
; 159  :     }
; 160  : }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??$_Construct_in_place@PEADAEAPEAD@std@@YAXAEAPEAD0@Z ENDP ; std::_Construct_in_place<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstddef
;	COMDAT ??$_Unfancy@D@std@@YAPEADPEAD@Z
_TEXT	SEGMENT
_Ptr$ = 224
??$_Unfancy@D@std@@YAPEADPEAD@Z PROC			; std::_Unfancy<char>, COMDAT

; 288  : _NODISCARD constexpr _Ty* _Unfancy(_Ty* _Ptr) noexcept { // do nothing for plain pointers

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__E458E21C_xstddef
	call	__CheckForDebuggerJustMyCode

; 289  :     return _Ptr;

	mov	rax, QWORD PTR _Ptr$[rbp]

; 290  : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Unfancy@D@std@@YAPEADPEAD@Z ENDP			; std::_Unfancy<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xutility
;	COMDAT ??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z
_TEXT	SEGMENT
$T1 = 200
_Obj$ = 256
<_Args_0>$ = 264
??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z PROC ; std::_Construct_in_place<char *,char * const &>, COMDAT

; 151  :     is_nothrow_constructible_v<_Ty, _Types...>) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__12269DE6_xutility
	call	__CheckForDebuggerJustMyCode
	mov	rcx, QWORD PTR _Obj$[rbp]
	call	??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z ; std::addressof<char *>
	mov	rcx, rax
	call	??$_Voidify_iter@PEAPEAD@std@@YAPEAXPEAPEAD@Z ; std::_Voidify_iter<char * *>
	mov	rdx, rax
	mov	ecx, 8
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rbp], rax
	mov	rcx, QWORD PTR <_Args_0>$[rbp]
	call	??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z ; std::forward<char * const &>
	mov	rcx, QWORD PTR $T1[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rcx], rax

; 152  : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 153  :     if (_STD is_constant_evaluated()) {
; 154  :         _STD construct_at(_STD addressof(_Obj), _STD forward<_Types>(_Args)...);
; 155  :     } else
; 156  : #endif // __cpp_lib_constexpr_dynamic_alloc
; 157  :     {
; 158  :         ::new (_Voidify_iter(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);
; 159  :     }
; 160  : }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ENDP ; std::_Construct_in_place<char *,char * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Pocca@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@AEBV10@@Z
_TEXT	SEGMENT
_Left$ = 224
_Right$ = 232
??$_Pocca@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@AEBV10@@Z PROC ; std::_Pocca<std::allocator<char> >, COMDAT

; 918  : _CONSTEXPR20 void _Pocca(_Alloc& _Left, const _Alloc& _Right) noexcept {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode

; 919  :     if constexpr (allocator_traits<_Alloc>::propagate_on_container_copy_assignment::value) {
; 920  :         _Left = _Right;
; 921  :     }
; 922  : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Pocca@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@AEBV10@@Z ENDP ; std::_Pocca<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z
_TEXT	SEGMENT
_My_data$ = 8
_Old_size$ = 40
_New_size$ = 72
_Old_capacity$ = 104
_New_capacity$ = 136
_Al$ = 168
_New_ptr$ = 200
_Raw_new$ = 232
_Old_ptr$4 = 264
__$ArrayPad$ = 472
this$ = 512
_Size_increase$ = 520
_Fn$ = 528
<_Args_0>$ = 536
<_Args_1>$ = 544
??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>, COMDAT

; 4538 :         const size_type _Size_increase, _Fty _Fn, _ArgTys... _Args) {

$LN6:
	mov	QWORD PTR [rsp+32], r9
	mov	BYTE PTR [rsp+24], r8b
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 536				; 00000218H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 74					; 0000004aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+568]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode

; 4539 :         // reallocate to increase size by _Size_increase elements, new buffer prepared by
; 4540 :         // _Fn(_New_ptr, _Old_ptr, _Old_size, _Args...)
; 4541 :         auto& _My_data            = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR _My_data$[rbp], rax

; 4542 :         const size_type _Old_size = _My_data._Mysize;

	mov	rax, QWORD PTR _My_data$[rbp]
	mov	rax, QWORD PTR [rax+24]
	mov	QWORD PTR _Old_size$[rbp], rax

; 4543 :         if (max_size() - _Old_size < _Size_increase) {

	mov	rcx, QWORD PTR this$[rbp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	sub	rax, QWORD PTR _Old_size$[rbp]
	cmp	rax, QWORD PTR _Size_increase$[rbp]
	jae	SHORT $LN2@Reallocate

; 4544 :             _Xlen_string(); // result too long

	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
$LN2@Reallocate:

; 4545 :         }
; 4546 : 
; 4547 :         const size_type _New_size     = _Old_size + _Size_increase;

	mov	rax, QWORD PTR _Size_increase$[rbp]
	mov	rcx, QWORD PTR _Old_size$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _New_size$[rbp], rax

; 4548 :         const size_type _Old_capacity = _My_data._Myres;

	mov	rax, QWORD PTR _My_data$[rbp]
	mov	rax, QWORD PTR [rax+32]
	mov	QWORD PTR _Old_capacity$[rbp], rax

; 4549 :         const size_type _New_capacity = _Calculate_growth(_New_size);

	mov	rdx, QWORD PTR _New_size$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
	mov	QWORD PTR _New_capacity$[rbp], rax

; 4550 :         auto& _Al                     = _Getal();

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	mov	QWORD PTR _Al$[rbp], rax

; 4551 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

	mov	rax, QWORD PTR _New_capacity$[rbp]
	add	rax, 1
	mov	rcx, -1
	cmovb	rax, rcx
	mov	rdx, rax
	mov	rcx, QWORD PTR _Al$[rbp]
	call	?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate
	mov	QWORD PTR _New_ptr$[rbp], rax

; 4552 : 
; 4553 : #ifdef __cpp_lib_constexpr_string
; 4554 :         if (_STD is_constant_evaluated()) { // Begin the lifetimes of the objects before copying to avoid UB
; 4555 :             _Traits::assign(_Unfancy(_New_ptr), _New_capacity + 1, _Elem());
; 4556 :         }
; 4557 : #endif // __cpp_lib_constexpr_string
; 4558 :         _My_data._Orphan_all();

	mov	rcx, QWORD PTR _My_data$[rbp]
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 4559 :         _My_data._Mysize      = _New_size;

	mov	rax, QWORD PTR _My_data$[rbp]
	mov	rcx, QWORD PTR _New_size$[rbp]
	mov	QWORD PTR [rax+24], rcx

; 4560 :         _My_data._Myres       = _New_capacity;

	mov	rax, QWORD PTR _My_data$[rbp]
	mov	rcx, QWORD PTR _New_capacity$[rbp]
	mov	QWORD PTR [rax+32], rcx

; 4561 :         _Elem* const _Raw_new = _Unfancy(_New_ptr);

	mov	rcx, QWORD PTR _New_ptr$[rbp]
	call	??$_Unfancy@D@std@@YAPEADPEAD@Z		; std::_Unfancy<char>
	mov	QWORD PTR _Raw_new$[rbp], rax

; 4562 :         if (_BUF_SIZE <= _Old_capacity) {

	cmp	QWORD PTR _Old_capacity$[rbp], 16
	jb	SHORT $LN3@Reallocate

; 4563 :             const pointer _Old_ptr = _My_data._Bx._Ptr;

	mov	rax, QWORD PTR _My_data$[rbp]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR _Old_ptr$4[rbp], rax

; 4564 :             _Fn(_Raw_new, _Unfancy(_Old_ptr), _Old_size, _Args...);

	mov	rcx, QWORD PTR _Old_ptr$4[rbp]
	call	??$_Unfancy@D@std@@YAPEADPEAD@Z		; std::_Unfancy<char>
	mov	rcx, QWORD PTR <_Args_1>$[rbp]
	mov	QWORD PTR [rsp+40], rcx
	mov	rcx, QWORD PTR <_Args_0>$[rbp]
	mov	QWORD PTR [rsp+32], rcx
	mov	r9, QWORD PTR _Old_size$[rbp]
	mov	r8, rax
	mov	rdx, QWORD PTR _Raw_new$[rbp]
	lea	rcx, QWORD PTR _Fn$[rbp]
	call	??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBA@QEADQEBD_K12@Z ; <lambda_65e615be2a453ca0576c979606f46740>::operator()

; 4565 :             _Al.deallocate(_Old_ptr, _Old_capacity + 1);

	mov	rax, QWORD PTR _Old_capacity$[rbp]
	inc	rax
	mov	r8, rax
	mov	rdx, QWORD PTR _Old_ptr$4[rbp]
	mov	rcx, QWORD PTR _Al$[rbp]
	call	?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate

; 4566 :             _My_data._Bx._Ptr = _New_ptr;

	mov	rax, QWORD PTR _My_data$[rbp]
	mov	rcx, QWORD PTR _New_ptr$[rbp]
	mov	QWORD PTR [rax+8], rcx

; 4567 :         } else {

	jmp	SHORT $LN4@Reallocate
$LN3@Reallocate:

; 4568 :             _Fn(_Raw_new, _My_data._Bx._Buf, _Old_size, _Args...);

	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 8
	mov	rcx, QWORD PTR <_Args_1>$[rbp]
	mov	QWORD PTR [rsp+40], rcx
	mov	rcx, QWORD PTR <_Args_0>$[rbp]
	mov	QWORD PTR [rsp+32], rcx
	mov	r9, QWORD PTR _Old_size$[rbp]
	mov	r8, rax
	mov	rdx, QWORD PTR _Raw_new$[rbp]
	lea	rcx, QWORD PTR _Fn$[rbp]
	call	??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBA@QEADQEBD_K12@Z ; <lambda_65e615be2a453ca0576c979606f46740>::operator()

; 4569 :             _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 8
	lea	rdx, QWORD PTR _New_ptr$[rbp]
	mov	rcx, rax
	call	??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>
$LN4@Reallocate:

; 4570 :         }
; 4571 : 
; 4572 :         return *this;

	mov	rax, QWORD PTR this$[rbp]
$LN5@Reallocate:

; 4573 :     }

	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-48]
	lea	rdx, OFFSET FLAT:??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+488]
	pop	rdi
	pop	rbp
	ret	0
??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBA@QEADQEBD_K12@Z
_TEXT	SEGMENT
$T1 = 196
this$ = 256
_New_ptr$ = 264
_Old_ptr$ = 272
_Old_size$ = 280
_Ptr$ = 288
_Count$ = 296
??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBA@QEADQEBD_K12@Z PROC ; <lambda_65e615be2a453ca0576c979606f46740>::operator(), COMDAT

; 3166 :                 const size_type _Count) {

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode

; 3167 :                 _Traits::copy(_New_ptr, _Old_ptr, _Old_size);

	mov	r8, QWORD PTR _Old_size$[rbp]
	mov	rdx, QWORD PTR _Old_ptr$[rbp]
	mov	rcx, QWORD PTR _New_ptr$[rbp]
	call	?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Char_traits<char,int>::copy

; 3168 :                 _Traits::copy(_New_ptr + _Old_size, _Ptr, _Count);

	mov	rax, QWORD PTR _Old_size$[rbp]
	mov	rcx, QWORD PTR _New_ptr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	r8, QWORD PTR _Count$[rbp]
	mov	rdx, QWORD PTR _Ptr$[rbp]
	mov	rcx, rax
	call	?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Char_traits<char,int>::copy

; 3169 :                 _Traits::assign(_New_ptr[_Old_size + _Count], _Elem());

	mov	BYTE PTR $T1[rbp], 0
	mov	rax, QWORD PTR _Count$[rbp]
	mov	rcx, QWORD PTR _Old_size$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, QWORD PTR _New_ptr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	lea	rdx, QWORD PTR $T1[rbp]
	mov	rcx, rax
	call	?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 3170 :             },

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBA@QEADQEBD_K12@Z ENDP ; <lambda_65e615be2a453ca0576c979606f46740>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z
_TEXT	SEGMENT
_Old_capacity$ = 8
_New_capacity$ = 40
_Al$ = 72
_New_ptr$ = 104
__$ArrayPad$ = 312
this$ = 352
_New_size$ = 360
_Fn$ = 368
<_Args_0>$ = 376
??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>, COMDAT

; 4505 :     _CONSTEXPR20_CONTAINER basic_string& _Reallocate_for(const size_type _New_size, _Fty _Fn, _ArgTys... _Args) {

$LN6:
	mov	QWORD PTR [rsp+32], r9
	mov	BYTE PTR [rsp+24], r8b
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 360				; 00000168H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 34					; 00000022H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+392]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode

; 4506 :         // reallocate to store exactly _New_size elements, new buffer prepared by
; 4507 :         // _Fn(_New_ptr, _New_size, _Args...)
; 4508 :         if (_New_size > max_size()) {

	mov	rcx, QWORD PTR this$[rbp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	QWORD PTR _New_size$[rbp], rax
	jbe	SHORT $LN2@Reallocate

; 4509 :             _Xlen_string(); // result too long

	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
$LN2@Reallocate:

; 4510 :         }
; 4511 : 
; 4512 :         const size_type _Old_capacity = _Mypair._Myval2._Myres;

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+32]
	mov	QWORD PTR _Old_capacity$[rbp], rax

; 4513 :         const size_type _New_capacity = _Calculate_growth(_New_size);

	mov	rdx, QWORD PTR _New_size$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
	mov	QWORD PTR _New_capacity$[rbp], rax

; 4514 :         auto& _Al                     = _Getal();

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	mov	QWORD PTR _Al$[rbp], rax

; 4515 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

	mov	rax, QWORD PTR _New_capacity$[rbp]
	add	rax, 1
	mov	rcx, -1
	cmovb	rax, rcx
	mov	rdx, rax
	mov	rcx, QWORD PTR _Al$[rbp]
	call	?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate
	mov	QWORD PTR _New_ptr$[rbp], rax

; 4516 : 
; 4517 : #ifdef __cpp_lib_constexpr_string
; 4518 :         if (_STD is_constant_evaluated()) { // Begin the lifetimes of the objects before copying to avoid UB
; 4519 :             _Traits::assign(_Unfancy(_New_ptr), _New_capacity + 1, _Elem());
; 4520 :         }
; 4521 : #endif // __cpp_lib_constexpr_string
; 4522 :         _Mypair._Myval2._Orphan_all();

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 4523 :         _Mypair._Myval2._Mysize = _New_size;

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _New_size$[rbp]
	mov	QWORD PTR [rax+24], rcx

; 4524 :         _Mypair._Myval2._Myres  = _New_capacity;

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _New_capacity$[rbp]
	mov	QWORD PTR [rax+32], rcx

; 4525 :         _Fn(_Unfancy(_New_ptr), _New_size, _Args...);

	mov	rcx, QWORD PTR _New_ptr$[rbp]
	call	??$_Unfancy@D@std@@YAPEADPEAD@Z		; std::_Unfancy<char>
	mov	r9, QWORD PTR <_Args_0>$[rbp]
	mov	r8, QWORD PTR _New_size$[rbp]
	mov	rdx, rax
	lea	rcx, QWORD PTR _Fn$[rbp]
	call	??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBA@QEAD_KQEBD@Z ; <lambda_66f57f934f28d61049862f64df852ff0>::operator()

; 4526 :         if (_BUF_SIZE <= _Old_capacity) {

	cmp	QWORD PTR _Old_capacity$[rbp], 16
	jb	SHORT $LN3@Reallocate

; 4527 :             _Al.deallocate(_Mypair._Myval2._Bx._Ptr, _Old_capacity + 1);

	mov	rax, QWORD PTR _Old_capacity$[rbp]
	inc	rax
	mov	r8, rax
	mov	rax, QWORD PTR this$[rbp]
	mov	rdx, QWORD PTR [rax+8]
	mov	rcx, QWORD PTR _Al$[rbp]
	call	?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate

; 4528 :             _Mypair._Myval2._Bx._Ptr = _New_ptr;

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _New_ptr$[rbp]
	mov	QWORD PTR [rax+8], rcx

; 4529 :         } else {

	jmp	SHORT $LN4@Reallocate
$LN3@Reallocate:

; 4530 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	lea	rdx, QWORD PTR _New_ptr$[rbp]
	mov	rcx, rax
	call	??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>
$LN4@Reallocate:

; 4531 :         }
; 4532 : 
; 4533 :         return *this;

	mov	rax, QWORD PTR this$[rbp]
$LN5@Reallocate:

; 4534 :     }

	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBA@QEAD_KQEBD@Z
_TEXT	SEGMENT
$T1 = 196
this$ = 256
_New_ptr$ = 264
_Count$ = 272
_Ptr$ = 280
??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBA@QEAD_KQEBD@Z PROC ; <lambda_66f57f934f28d61049862f64df852ff0>::operator(), COMDAT

; 3256 :             [](_Elem* const _New_ptr, const size_type _Count, const _Elem* const _Ptr) {

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode

; 3257 :                 _Traits::copy(_New_ptr, _Ptr, _Count);

	mov	r8, QWORD PTR _Count$[rbp]
	mov	rdx, QWORD PTR _Ptr$[rbp]
	mov	rcx, QWORD PTR _New_ptr$[rbp]
	call	?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Char_traits<char,int>::copy

; 3258 :                 _Traits::assign(_New_ptr[_Count], _Elem());

	mov	BYTE PTR $T1[rbp], 0
	mov	rax, QWORD PTR _Count$[rbp]
	mov	rcx, QWORD PTR _New_ptr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	lea	rdx, QWORD PTR $T1[rbp]
	mov	rcx, rax
	call	?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 3259 :             },

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBA@QEAD_KQEBD@Z ENDP ; <lambda_66f57f934f28d61049862f64df852ff0>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ??$_Reallocate_for@V<lambda_138c3d7c38c85abb84c7fc7bfe5747b7>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_138c3d7c38c85abb84c7fc7bfe5747b7>@@D@Z
_TEXT	SEGMENT
_Old_capacity$ = 8
_New_capacity$ = 40
_Al$ = 72
_New_ptr$ = 104
__$ArrayPad$ = 312
this$ = 352
_New_size$ = 360
_Fn$ = 368
<_Args_0>$ = 376
??$_Reallocate_for@V<lambda_138c3d7c38c85abb84c7fc7bfe5747b7>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_138c3d7c38c85abb84c7fc7bfe5747b7>@@D@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_138c3d7c38c85abb84c7fc7bfe5747b7>,char>, COMDAT

; 4505 :     _CONSTEXPR20_CONTAINER basic_string& _Reallocate_for(const size_type _New_size, _Fty _Fn, _ArgTys... _Args) {

$LN6:
	mov	BYTE PTR [rsp+32], r9b
	mov	BYTE PTR [rsp+24], r8b
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 360				; 00000168H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 34					; 00000022H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+392]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode

; 4506 :         // reallocate to store exactly _New_size elements, new buffer prepared by
; 4507 :         // _Fn(_New_ptr, _New_size, _Args...)
; 4508 :         if (_New_size > max_size()) {

	mov	rcx, QWORD PTR this$[rbp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	QWORD PTR _New_size$[rbp], rax
	jbe	SHORT $LN2@Reallocate

; 4509 :             _Xlen_string(); // result too long

	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
$LN2@Reallocate:

; 4510 :         }
; 4511 : 
; 4512 :         const size_type _Old_capacity = _Mypair._Myval2._Myres;

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+32]
	mov	QWORD PTR _Old_capacity$[rbp], rax

; 4513 :         const size_type _New_capacity = _Calculate_growth(_New_size);

	mov	rdx, QWORD PTR _New_size$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
	mov	QWORD PTR _New_capacity$[rbp], rax

; 4514 :         auto& _Al                     = _Getal();

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	mov	QWORD PTR _Al$[rbp], rax

; 4515 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

	mov	rax, QWORD PTR _New_capacity$[rbp]
	add	rax, 1
	mov	rcx, -1
	cmovb	rax, rcx
	mov	rdx, rax
	mov	rcx, QWORD PTR _Al$[rbp]
	call	?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate
	mov	QWORD PTR _New_ptr$[rbp], rax

; 4516 : 
; 4517 : #ifdef __cpp_lib_constexpr_string
; 4518 :         if (_STD is_constant_evaluated()) { // Begin the lifetimes of the objects before copying to avoid UB
; 4519 :             _Traits::assign(_Unfancy(_New_ptr), _New_capacity + 1, _Elem());
; 4520 :         }
; 4521 : #endif // __cpp_lib_constexpr_string
; 4522 :         _Mypair._Myval2._Orphan_all();

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 4523 :         _Mypair._Myval2._Mysize = _New_size;

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _New_size$[rbp]
	mov	QWORD PTR [rax+24], rcx

; 4524 :         _Mypair._Myval2._Myres  = _New_capacity;

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _New_capacity$[rbp]
	mov	QWORD PTR [rax+32], rcx

; 4525 :         _Fn(_Unfancy(_New_ptr), _New_size, _Args...);

	mov	rcx, QWORD PTR _New_ptr$[rbp]
	call	??$_Unfancy@D@std@@YAPEADPEAD@Z		; std::_Unfancy<char>
	movzx	r9d, BYTE PTR <_Args_0>$[rbp]
	mov	r8, QWORD PTR _New_size$[rbp]
	mov	rdx, rax
	lea	rcx, QWORD PTR _Fn$[rbp]
	call	??R<lambda_138c3d7c38c85abb84c7fc7bfe5747b7>@@QEBA@QEAD_KD@Z ; <lambda_138c3d7c38c85abb84c7fc7bfe5747b7>::operator()

; 4526 :         if (_BUF_SIZE <= _Old_capacity) {

	cmp	QWORD PTR _Old_capacity$[rbp], 16
	jb	SHORT $LN3@Reallocate

; 4527 :             _Al.deallocate(_Mypair._Myval2._Bx._Ptr, _Old_capacity + 1);

	mov	rax, QWORD PTR _Old_capacity$[rbp]
	inc	rax
	mov	r8, rax
	mov	rax, QWORD PTR this$[rbp]
	mov	rdx, QWORD PTR [rax+8]
	mov	rcx, QWORD PTR _Al$[rbp]
	call	?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate

; 4528 :             _Mypair._Myval2._Bx._Ptr = _New_ptr;

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _New_ptr$[rbp]
	mov	QWORD PTR [rax+8], rcx

; 4529 :         } else {

	jmp	SHORT $LN4@Reallocate
$LN3@Reallocate:

; 4530 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	lea	rdx, QWORD PTR _New_ptr$[rbp]
	mov	rcx, rax
	call	??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>
$LN4@Reallocate:

; 4531 :         }
; 4532 : 
; 4533 :         return *this;

	mov	rax, QWORD PTR this$[rbp]
$LN5@Reallocate:

; 4534 :     }

	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:??$_Reallocate_for@V<lambda_138c3d7c38c85abb84c7fc7bfe5747b7>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_138c3d7c38c85abb84c7fc7bfe5747b7>@@D@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
??$_Reallocate_for@V<lambda_138c3d7c38c85abb84c7fc7bfe5747b7>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_138c3d7c38c85abb84c7fc7bfe5747b7>@@D@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_138c3d7c38c85abb84c7fc7bfe5747b7>,char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ??R<lambda_138c3d7c38c85abb84c7fc7bfe5747b7>@@QEBA@QEAD_KD@Z
_TEXT	SEGMENT
$T1 = 196
this$ = 256
_New_ptr$ = 264
_Count$ = 272
_Ch$ = 280
??R<lambda_138c3d7c38c85abb84c7fc7bfe5747b7>@@QEBA@QEAD_KD@Z PROC ; <lambda_138c3d7c38c85abb84c7fc7bfe5747b7>::operator(), COMDAT

; 3279 :             [](_Elem* const _New_ptr, const size_type _Count, const _Elem _Ch) {

$LN3:
	mov	BYTE PTR [rsp+32], r9b
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode

; 3280 :                 _Traits::assign(_New_ptr, _Count, _Ch);

	movzx	r8d, BYTE PTR _Ch$[rbp]
	mov	rdx, QWORD PTR _Count$[rbp]
	mov	rcx, QWORD PTR _New_ptr$[rbp]
	call	?assign@?$_Narrow_char_traits@DH@std@@SAPEADQEAD_KD@Z ; std::_Narrow_char_traits<char,int>::assign

; 3281 :                 _Traits::assign(_New_ptr[_Count], _Elem());

	mov	BYTE PTR $T1[rbp], 0
	mov	rax, QWORD PTR _Count$[rbp]
	mov	rcx, QWORD PTR _New_ptr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	lea	rdx, QWORD PTR $T1[rbp]
	mov	rcx, rax
	call	?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 3282 :             },

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??R<lambda_138c3d7c38c85abb84c7fc7bfe5747b7>@@QEBA@QEAD_KD@Z ENDP ; <lambda_138c3d7c38c85abb84c7fc7bfe5747b7>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z
_TEXT	SEGMENT
_Obj$ = 224
??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z PROC	; std::_Destroy_in_place<char *>, COMDAT

; 307  : _CONSTEXPR20_DYNALLOC void _Destroy_in_place(_Ty& _Obj) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode

; 308  :     if constexpr (is_array_v<_Ty>) {
; 309  :         _Destroy_range(_Obj, _Obj + extent_v<_Ty>);
; 310  :     } else {
; 311  :         _Obj.~_Ty();
; 312  :     }
; 313  : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z ENDP	; std::_Destroy_in_place<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PEAVnode@@@std@@@std@@YAXPEAPEAVnode@@QEAPEAV1@AEAV?$allocator@PEAVnode@@@0@@Z
_TEXT	SEGMENT
_First$ = 224
_Last$ = 232
_Al$ = 240
??$_Destroy_range@V?$allocator@PEAVnode@@@std@@@std@@YAXPEAPEAVnode@@QEAPEAV1@AEAV?$allocator@PEAVnode@@@0@@Z PROC ; std::_Destroy_range<std::allocator<node *> >, COMDAT

; 945  :     _Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode

; 946  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 947  :     using _Ty = typename _Alloc::value_type;
; 948  :     if constexpr (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 949  :         for (; _First != _Last; ++_First) {
; 950  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 951  :         }
; 952  :     }
; 953  : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Destroy_range@V?$allocator@PEAVnode@@@std@@@std@@YAXPEAPEAVnode@@QEAPEAV1@AEAV?$allocator@PEAVnode@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<node *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstddef
;	COMDAT ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
_TEXT	SEGMENT
_Ptr$ = 224
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z PROC ; std::_Unfancy<std::_Container_proxy>, COMDAT

; 288  : _NODISCARD constexpr _Ty* _Unfancy(_Ty* _Ptr) noexcept { // do nothing for plain pointers

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__E458E21C_xstddef
	call	__CheckForDebuggerJustMyCode

; 289  :     return _Ptr;

	mov	rax, QWORD PTR _Ptr$[rbp]

; 290  : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ENDP ; std::_Unfancy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 224
__formal$ = 232
??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>, COMDAT

; 1390 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rcx, QWORD PTR this$[rbp]
	call	??0?$allocator@D@std@@QEAA@XZ		; std::allocator<char>::allocator<char>
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z
_TEXT	SEGMENT
this$ = 224
__formal$ = 232
_Val1$ = 240
??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >, COMDAT

; 1395 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rcx, QWORD PTR _Val1$[rbp]
	call	??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ; std::forward<std::allocator<char> >
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\type_traits
;	COMDAT ??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z PROC ; std::move<std::allocator<char> &>, COMDAT

; 1455 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__589FA321_type_traits
	call	__CheckForDebuggerJustMyCode

; 1456 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rbp]

; 1457 : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ENDP ; std::move<std::allocator<char> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstddef
;	COMDAT ??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 224
??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z PROC ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 274  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__E458E21C_xstddef
	call	__CheckForDebuggerJustMyCode

; 275  :     return __builtin_addressof(_Val);

	mov	rax, QWORD PTR _Val$[rbp]

; 276  : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ENDP ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z
_TEXT	SEGMENT
this$ = 224
__formal$ = 232
??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>, COMDAT

; 829  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstddef
;	COMDAT ??$addressof@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@@Z
_TEXT	SEGMENT
_Val$ = 224
??$addressof@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@@Z PROC ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >, COMDAT

; 274  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__E458E21C_xstddef
	call	__CheckForDebuggerJustMyCode

; 275  :     return __builtin_addressof(_Val);

	mov	rax, QWORD PTR _Val$[rbp]

; 276  : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$addressof@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@@Z ENDP ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ??$_Traits_compare@U?$char_traits@D@std@@@std@@YAHQEBD_K01@Z
_TEXT	SEGMENT
_Ans$ = 4
_Left$ = 256
_Left_size$ = 264
_Right$ = 272
_Right_size$ = 280
??$_Traits_compare@U?$char_traits@D@std@@@std@@YAHQEBD_K01@Z PROC ; std::_Traits_compare<std::char_traits<char> >, COMDAT

; 588  :     _In_reads_(_Right_size) const _Traits_ptr_t<_Traits> _Right, const size_t _Right_size) noexcept {

$LN6:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode

; 589  :     // compare [_Left, _Left + _Left_size) to [_Right, _Right + _Right_size) using _Traits
; 590  :     const int _Ans = _Traits::compare(_Left, _Right, (_STD min)(_Left_size, _Right_size));

	lea	rdx, QWORD PTR _Right_size$[rbp]
	lea	rcx, QWORD PTR _Left_size$[rbp]
	call	??$min@_K@std@@YAAEB_KAEB_K0@Z		; std::min<unsigned __int64>
	mov	r8, QWORD PTR [rax]
	mov	rdx, QWORD PTR _Right$[rbp]
	mov	rcx, QWORD PTR _Left$[rbp]
	call	?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z ; std::_Narrow_char_traits<char,int>::compare
	mov	DWORD PTR _Ans$[rbp], eax

; 591  : 
; 592  :     if (_Ans != 0) {

	cmp	DWORD PTR _Ans$[rbp], 0
	je	SHORT $LN2@Traits_com

; 593  :         return _Ans;

	mov	eax, DWORD PTR _Ans$[rbp]
	jmp	SHORT $LN1@Traits_com
$LN2@Traits_com:

; 594  :     }
; 595  : 
; 596  :     if (_Left_size < _Right_size) {

	mov	rax, QWORD PTR _Right_size$[rbp]
	cmp	QWORD PTR _Left_size$[rbp], rax
	jae	SHORT $LN3@Traits_com

; 597  :         return -1;

	mov	eax, -1
	jmp	SHORT $LN1@Traits_com
$LN3@Traits_com:

; 598  :     }
; 599  : 
; 600  :     if (_Left_size > _Right_size) {

	mov	rax, QWORD PTR _Right_size$[rbp]
	cmp	QWORD PTR _Left_size$[rbp], rax
	jbe	SHORT $LN4@Traits_com

; 601  :         return 1;

	mov	eax, 1
	jmp	SHORT $LN1@Traits_com
$LN4@Traits_com:

; 602  :     }
; 603  : 
; 604  :     return 0;

	xor	eax, eax
$LN1@Traits_com:

; 605  : }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??$_Traits_compare@U?$char_traits@D@std@@@std@@YAHQEBD_K01@Z ENDP ; std::_Traits_compare<std::char_traits<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility
;	COMDAT ??$min@_K@std@@YAAEB_KAEB_K0@Z
_TEXT	SEGMENT
$T1 = 200
tv65 = 216
_Left$ = 256
_Right$ = 264
??$min@_K@std@@YAAEB_KAEB_K0@Z PROC			; std::min<unsigned __int64>, COMDAT

; 66   :     const _Ty& _Left, const _Ty& _Right) noexcept(noexcept(_Right < _Left)) /* strengthened */ {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1347750E_utility
	call	__CheckForDebuggerJustMyCode

; 67   :     // return smaller of _Left and _Right
; 68   :     return _Right < _Left ? _Right : _Left;

	mov	rax, QWORD PTR _Right$[rbp]
	mov	rcx, QWORD PTR _Left$[rbp]
	mov	rcx, QWORD PTR [rcx]
	cmp	QWORD PTR [rax], rcx
	jae	SHORT $LN3@min
	mov	rax, QWORD PTR _Right$[rbp]
	mov	QWORD PTR tv65[rbp], rax
	jmp	SHORT $LN4@min
$LN3@min:
	mov	rax, QWORD PTR _Left$[rbp]
	mov	QWORD PTR tv65[rbp], rax
$LN4@min:
	mov	rax, QWORD PTR tv65[rbp]
	mov	QWORD PTR $T1[rbp], rax
	mov	rax, QWORD PTR $T1[rbp]

; 69   : }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??$min@_K@std@@YAAEB_KAEB_K0@Z ENDP			; std::min<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\type_traits
;	COMDAT ??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z PROC ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>, COMDAT

; 1455 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__589FA321_type_traits
	call	__CheckForDebuggerJustMyCode

; 1456 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rbp]

; 1457 : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ENDP ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\ostream
;	COMDAT ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 224
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool, COMDAT

; 124  :         explicit __CLR_OR_THIS_CALL operator bool() const {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__C12F3EA4_ostream
	call	__CheckForDebuggerJustMyCode

; 125  :             return _Ok;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+8]

; 126  :         }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\ostream
;	COMDAT ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Zero_uncaught_exceptions$ = 4
tv72 = 212
this$ = 256
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry, COMDAT

; 109  :         __CLR_OR_THIS_CALL ~sentry() noexcept {

$LN6:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__C12F3EA4_ostream
	call	__CheckForDebuggerJustMyCode

; 110  : #if !_HAS_EXCEPTIONS
; 111  :             const bool _Zero_uncaught_exceptions = true;
; 112  : #elif _HAS_DEPRECATED_UNCAUGHT_EXCEPTION
; 113  :             const bool _Zero_uncaught_exceptions = !_STD uncaught_exception(); // TRANSITION, ArchivedOS-12000909

	call	?uncaught_exception@std@@YA_NXZ		; std::uncaught_exception
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN4@sentry
	mov	BYTE PTR tv72[rbp], 1
	jmp	SHORT $LN5@sentry
$LN4@sentry:
	mov	BYTE PTR tv72[rbp], 0
$LN5@sentry:
	movzx	eax, BYTE PTR tv72[rbp]
	mov	BYTE PTR _Zero_uncaught_exceptions$[rbp], al

; 114  : #else // ^^^ _HAS_DEPRECATED_UNCAUGHT_EXCEPTION / !_HAS_DEPRECATED_UNCAUGHT_EXCEPTION vvv
; 115  :             const bool _Zero_uncaught_exceptions = _STD uncaught_exceptions() == 0;
; 116  : #endif // !_HAS_DEPRECATED_UNCAUGHT_EXCEPTION
; 117  : 
; 118  :             if (_Zero_uncaught_exceptions) {

	movzx	eax, BYTE PTR _Zero_uncaught_exceptions$[rbp]
	test	eax, eax
	je	SHORT $LN2@sentry

; 119  :                 this->_Myostr._Osfx();

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	QWORD PTR __imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
$LN2@sentry:

; 120  :             }
; 121  :         }

	mov	rcx, QWORD PTR this$[rbp]
	call	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
	npad	1
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\ostream
;	COMDAT ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
_TEXT	SEGMENT
_Tied$ = 8
this$ = 256
_Ostr$ = 264
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry, COMDAT

; 92   :         explicit __CLR_OR_THIS_CALL sentry(basic_ostream& _Ostr) : _Sentry_base(_Ostr) {

$LN7:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__C12F3EA4_ostream
	call	__CheckForDebuggerJustMyCode
	mov	rdx, QWORD PTR _Ostr$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
	npad	1

; 93   :             if (!_Ostr.good()) {

	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?good@ios_base@std@@QEBA_NXZ
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@sentry

; 94   :                 _Ok = false;

	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+8], 0

; 95   :                 return;

	jmp	$LN1@sentry
$LN2@sentry:

; 96   :             }
; 97   : 
; 98   :             const auto _Tied = _Ostr.tie();

	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ
	mov	QWORD PTR _Tied$[rbp], rax

; 99   :             if (!_Tied || _Tied == &_Ostr) {

	cmp	QWORD PTR _Tied$[rbp], 0
	je	SHORT $LN4@sentry
	mov	rax, QWORD PTR _Ostr$[rbp]
	cmp	QWORD PTR _Tied$[rbp], rax
	jne	SHORT $LN3@sentry
$LN4@sentry:

; 100  :                 _Ok = true;

	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+8], 1

; 101  :                 return;

	jmp	SHORT $LN1@sentry
$LN3@sentry:

; 102  :             }
; 103  : 
; 104  :             _Tied->flush();

	mov	rcx, QWORD PTR _Tied$[rbp]
	call	QWORD PTR __imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ

; 105  :             _Ok = _Ostr.good(); // store test only after flushing tie

	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?good@ios_base@std@@QEBA_NXZ
	mov	rcx, QWORD PTR this$[rbp]
	mov	BYTE PTR [rcx+8], al
$LN1@sentry:

; 106  :         }

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Tied$ = 8
this$ = 256
_Ostr$ = 264
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_Tied$ = 8
this$ = 256
_Ostr$ = 264
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\ostream
;	COMDAT ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Rdbuf$ = 8
tv72 = 216
this$ = 256
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base, COMDAT

; 78   :         __CLR_OR_THIS_CALL ~_Sentry_base() noexcept { // destroy after unlocking

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__C12F3EA4_ostream
	call	__CheckForDebuggerJustMyCode

; 79   :             const auto _Rdbuf = _Myostr.rdbuf();

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR tv72[rbp], rax
	mov	rax, QWORD PTR tv72[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR tv72[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	QWORD PTR _Rdbuf$[rbp], rax

; 80   :             if (_Rdbuf) {

	cmp	QWORD PTR _Rdbuf$[rbp], 0
	je	SHORT $LN2@Sentry_bas

; 81   :                 _Rdbuf->_Unlock();

	mov	rax, QWORD PTR _Rdbuf$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Rdbuf$[rbp]
	call	QWORD PTR [rax+16]
	npad	1
$LN2@Sentry_bas:

; 82   :             }
; 83   :         }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\ostream
;	COMDAT ??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
_TEXT	SEGMENT
_Rdbuf$ = 8
tv73 = 216
this$ = 256
_Ostr$ = 264
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base, COMDAT

; 71   :         __CLR_OR_THIS_CALL _Sentry_base(basic_ostream& _Ostr) : _Myostr(_Ostr) { // lock the stream buffer, if there

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__C12F3EA4_ostream
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	mov	QWORD PTR [rax], rcx

; 72   :             const auto _Rdbuf = _Myostr.rdbuf();

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR tv73[rbp], rax
	mov	rax, QWORD PTR tv73[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR tv73[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	QWORD PTR _Rdbuf$[rbp], rax

; 73   :             if (_Rdbuf) {

	cmp	QWORD PTR _Rdbuf$[rbp], 0
	je	SHORT $LN2@Sentry_bas

; 74   :                 _Rdbuf->_Lock();

	mov	rax, QWORD PTR _Rdbuf$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Rdbuf$[rbp]
	call	QWORD PTR [rax+8]
$LN2@Sentry_bas:

; 75   :             }
; 76   :         }

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 224
__formal$ = 232
??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 829  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??$_Ucopy@PEAUop@@@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@AEAAPEAUop@@PEAU2@00@Z
_TEXT	SEGMENT
this$ = 224
_First$ = 232
_Last$ = 240
_Dest$ = 248
??$_Ucopy@PEAUop@@@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@AEAAPEAUop@@PEAU2@00@Z PROC ; std::vector<op,std::allocator<op> >::_Ucopy<op *>, COMDAT

; 1652 :     _CONSTEXPR20_CONTAINER pointer _Ucopy(_Iter _First, _Iter _Last, pointer _Dest) {

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__324884E2_vector
	call	__CheckForDebuggerJustMyCode

; 1653 :         // copy [_First, _Last) to raw _Dest, using allocator
; 1654 :         return _Uninitialized_copy(_First, _Last, _Dest, _Getal());

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@AEAAAEAV?$allocator@Uop@@@2@XZ ; std::vector<op,std::allocator<op> >::_Getal
	mov	r9, rax
	mov	r8, QWORD PTR _Dest$[rbp]
	mov	rdx, QWORD PTR _Last$[rbp]
	mov	rcx, QWORD PTR _First$[rbp]
	call	??$_Uninitialized_copy@PEAUop@@V?$allocator@Uop@@@std@@@std@@YAPEAUop@@QEAU1@0PEAU1@AEAV?$allocator@Uop@@@0@@Z ; std::_Uninitialized_copy<op *,std::allocator<op> >

; 1655 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Ucopy@PEAUop@@@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@AEAAPEAUop@@PEAU2@00@Z ENDP ; std::vector<op,std::allocator<op> >::_Ucopy<op *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??1?$_Tidy_guard@V?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$_Tidy_guard@V?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Tidy_guard<std::vector<op,std::allocator<op> > >::~_Tidy_guard<std::vector<op,std::allocator<op> > >, COMDAT

; 34   :     _CONSTEXPR20_DYNALLOC ~_Tidy_guard() {

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode

; 35   :         if (_Target) {

	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Tidy_guard

; 36   :             _Target->_Tidy();

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	?_Tidy@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@AEAAXXZ ; std::vector<op,std::allocator<op> >::_Tidy
$LN2@Tidy_guard:

; 37   :         }
; 38   :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1?$_Tidy_guard@V?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Tidy_guard<std::vector<op,std::allocator<op> > >::~_Tidy_guard<std::vector<op,std::allocator<op> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ PROC ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >, COMDAT

; 1353 :     _CONSTEXPR20_CONTAINER ~_Container_proxy_ptr12() {

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode

; 1354 :         if (_Ptr) {

	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Container_

; 1355 :             _Delete_plain_internal(_Al, _Ptr);

	mov	rax, QWORD PTR this$[rbp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
$LN2@Container_:

; 1356 :         }
; 1357 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z
_TEXT	SEGMENT
$T1 = 200
this$ = 256
_Al_$ = 264
_Mycont$ = 272
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z PROC ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >, COMDAT

; 1339 :     _CONSTEXPR20_CONTAINER _Container_proxy_ptr12(_Alloc& _Al_, _Container_base12& _Mycont) : _Al(_Al_) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rcx, QWORD PTR this$[rbp]
	call	??0_Basic_container_proxy_ptr12@std@@IEAA@XZ ; std::_Basic_container_proxy_ptr12::_Basic_container_proxy_ptr12
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _Al_$[rbp]
	mov	QWORD PTR [rax+8], rcx

; 1340 :         // create a new _Container_proxy pointing at _Mycont
; 1341 :         _Ptr = _Unfancy(_Al_.allocate(1));

	mov	edx, 1
	mov	rcx, QWORD PTR _Al_$[rbp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
	mov	rcx, rax
	call	??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx], rax

; 1342 :         _Construct_in_place(*_Ptr, _STD addressof(_Mycont));

	mov	rcx, QWORD PTR _Mycont$[rbp]
	call	??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ; std::addressof<std::_Container_base12>
	mov	QWORD PTR $T1[rbp], rax
	lea	rdx, QWORD PTR $T1[rbp]
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>

; 1343 :         _Mycont._Myproxy = _Ptr;

	mov	rax, QWORD PTR _Mycont$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR [rax], rcx

; 1344 :     }

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ENDP ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$?0V?$allocator@Uop@@@std@@$$V@?$_Compressed_pair@V?$allocator@Uop@@@std@@V?$_Vector_val@U?$_Simple_types@Uop@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@Uop@@@1@@Z
_TEXT	SEGMENT
this$ = 224
__formal$ = 232
_Val1$ = 240
??$?0V?$allocator@Uop@@@std@@$$V@?$_Compressed_pair@V?$allocator@Uop@@@std@@V?$_Vector_val@U?$_Simple_types@Uop@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@Uop@@@1@@Z PROC ; std::_Compressed_pair<std::allocator<op>,std::_Vector_val<std::_Simple_types<op> >,1>::_Compressed_pair<std::allocator<op>,std::_Vector_val<std::_Simple_types<op> >,1><std::allocator<op> >, COMDAT

; 1395 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rcx, QWORD PTR _Val1$[rbp]
	call	??$forward@V?$allocator@Uop@@@std@@@std@@YA$$QEAV?$allocator@Uop@@@0@AEAV10@@Z ; std::forward<std::allocator<op> >
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	??0?$_Vector_val@U?$_Simple_types@Uop@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<op> >::_Vector_val<std::_Simple_types<op> >
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$?0V?$allocator@Uop@@@std@@$$V@?$_Compressed_pair@V?$allocator@Uop@@@std@@V?$_Vector_val@U?$_Simple_types@Uop@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@Uop@@@1@@Z ENDP ; std::_Compressed_pair<std::allocator<op>,std::_Vector_val<std::_Simple_types<op> >,1>::_Compressed_pair<std::allocator<op>,std::_Vector_val<std::_Simple_types<op> >,1><std::allocator<op> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$?0Uop@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@Uop@@@1@@Z
_TEXT	SEGMENT
this$ = 224
__formal$ = 232
??$?0Uop@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@Uop@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><op>, COMDAT

; 829  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$?0Uop@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@Uop@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><op>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$?0Ubraket_group@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@Ubraket_group@@@1@@Z
_TEXT	SEGMENT
this$ = 224
__formal$ = 232
??$?0Ubraket_group@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@Ubraket_group@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><braket_group>, COMDAT

; 829  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$?0Ubraket_group@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@Ubraket_group@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><braket_group>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z
_TEXT	SEGMENT
_New_proxy$ = 8
$T1 = 232
this$ = 288
_Al$ = 296
??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z PROC ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >, COMDAT

; 1073 :     _CONSTEXPR20_CONTAINER void _Alloc_proxy(_Alloc&& _Al) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode

; 1074 :         _Container_proxy* const _New_proxy = _Unfancy(_Al.allocate(1));

	mov	edx, 1
	mov	rcx, QWORD PTR _Al$[rbp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
	mov	rcx, rax
	call	??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
	mov	QWORD PTR _New_proxy$[rbp], rax

; 1075 :         _Construct_in_place(*_New_proxy, this);

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR $T1[rbp], rax
	lea	rdx, QWORD PTR $T1[rbp]
	mov	rcx, QWORD PTR _New_proxy$[rbp]
	call	??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>

; 1076 :         _Myproxy            = _New_proxy;

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _New_proxy$[rbp]
	mov	QWORD PTR [rax], rcx

; 1077 :         _New_proxy->_Mycont = this;

	mov	rax, QWORD PTR _New_proxy$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax], rcx

; 1078 :     }

	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ENDP ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@PEAVnode@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVnode@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 224
__formal$ = 232
??$?0$$V@?$_Compressed_pair@V?$allocator@PEAVnode@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVnode@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<node *>,std::_Vector_val<std::_Simple_types<node *> >,1>::_Compressed_pair<std::allocator<node *>,std::_Vector_val<std::_Simple_types<node *> >,1><>, COMDAT

; 1390 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rcx, QWORD PTR this$[rbp]
	call	??0?$allocator@PEAVnode@@@std@@QEAA@XZ	; std::allocator<node *>::allocator<node *>
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	??0?$_Vector_val@U?$_Simple_types@PEAVnode@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<node *> >::_Vector_val<std::_Simple_types<node *> >
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$?0$$V@?$_Compressed_pair@V?$allocator@PEAVnode@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVnode@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<node *>,std::_Vector_val<std::_Simple_types<node *> >,1>::_Compressed_pair<std::allocator<node *>,std::_Vector_val<std::_Simple_types<node *> >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_Al$ = 224
_Ptr$ = 232
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z PROC ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >, COMDAT

; 998  : _CONSTEXPR20_DYNALLOC void _Delete_plain_internal(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode

; 999  :     // destroy *_Ptr in place, then deallocate _Ptr using _Al; used for internal container types the user didn't name
; 1000 :     using _Ty = typename _Alloc::value_type;
; 1001 :     _Ptr->~_Ty();
; 1002 :     _Deallocate_plain(_Al, _Ptr);

	mov	rdx, QWORD PTR _Ptr$[rbp]
	mov	rcx, QWORD PTR _Al$[rbp]
	call	??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >

; 1003 : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ENDP ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility
;	COMDAT ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z
_TEXT	SEGMENT
_Old_val$ = 8
_Val$ = 256
_New_val$ = 264
??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z PROC ; std::exchange<std::_Container_proxy *,std::nullptr_t>, COMDAT

; 614  :     conjunction_v<is_nothrow_move_constructible<_Ty>, is_nothrow_assignable<_Ty&, _Other>>) /* strengthened */ {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1347750E_utility
	call	__CheckForDebuggerJustMyCode

; 615  :     // assign _New_val to _Val, return previous _Val
; 616  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rax, QWORD PTR _Val$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Old_val$[rbp], rax

; 617  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	rax, QWORD PTR _Val$[rbp]
	mov	rcx, QWORD PTR _New_val$[rbp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR [rax], rcx

; 618  :     return _Old_val;

	mov	rax, QWORD PTR _Old_val$[rbp]

; 619  : }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ENDP ; std::exchange<std::_Container_proxy *,std::nullptr_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$?0PEAVnode@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAVnode@@@1@@Z
_TEXT	SEGMENT
this$ = 224
__formal$ = 232
??$?0PEAVnode@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAVnode@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><node *>, COMDAT

; 829  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$?0PEAVnode@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAVnode@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><node *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
this$ = 224
_Count$ = 232
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT

; 838  :     _NODISCARD _CONSTEXPR20_DYNALLOC __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode

; 839  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

	mov	rcx, QWORD PTR _Count$[rbp]
	call	??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z	; std::_Get_size_of_n<16>
	mov	rcx, rax
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 840  :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??$_Emplace_reallocate@AEBQEAVnode@@@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAPEAPEAVnode@@QEAPEAV2@AEBQEAV2@@Z
_TEXT	SEGMENT
_Al$ = 8
_My_data$ = 40
_Myfirst$ = 72
_Mylast$ = 104
_Whereoff$ = 136
_Oldsize$ = 168
_Newsize$ = 200
_Newcapacity$ = 232
_Newvec$ = 264
_Constructed_last$ = 296
_Constructed_first$ = 328
tv90 = 536
this$ = 576
_Whereptr$ = 584
<_Val_0>$ = 592
??$_Emplace_reallocate@AEBQEAVnode@@@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAPEAPEAVnode@@QEAPEAV2@AEBQEAV2@@Z PROC ; std::vector<node *,std::allocator<node *> >::_Emplace_reallocate<node * const &>, COMDAT

; 765  :     _CONSTEXPR20_CONTAINER pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

$LN13:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 584				; 00000248H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__324884E2_vector
	call	__CheckForDebuggerJustMyCode

; 766  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 767  :         _Alty& _Al        = _Getal();

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAAEAV?$allocator@PEAVnode@@@2@XZ ; std::vector<node *,std::allocator<node *> >::_Getal
	mov	QWORD PTR _Al$[rbp], rax

; 768  :         auto& _My_data    = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR _My_data$[rbp], rax

; 769  :         pointer& _Myfirst = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rbp], rax

; 770  :         pointer& _Mylast  = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rbp], rax

; 771  : 
; 772  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 773  : 
; 774  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

	mov	rax, QWORD PTR _Myfirst$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Whereptr$[rbp]
	sub	rcx, rax
	mov	rax, rcx
	sar	rax, 3
	mov	QWORD PTR _Whereoff$[rbp], rax

; 775  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	rcx, QWORD PTR _Myfirst$[rbp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	sar	rax, 3
	mov	QWORD PTR _Oldsize$[rbp], rax

; 776  : 
; 777  :         if (_Oldsize == max_size()) {

	mov	rcx, QWORD PTR this$[rbp]
	call	?max_size@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEBA_KXZ ; std::vector<node *,std::allocator<node *> >::max_size
	cmp	QWORD PTR _Oldsize$[rbp], rax
	jne	SHORT $LN2@Emplace_re

; 778  :             _Xlength();

	call	?_Xlength@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@CAXXZ ; std::vector<node *,std::allocator<node *> >::_Xlength
$LN2@Emplace_re:

; 779  :         }
; 780  : 
; 781  :         const size_type _Newsize     = _Oldsize + 1;

	mov	rax, QWORD PTR _Oldsize$[rbp]
	inc	rax
	mov	QWORD PTR _Newsize$[rbp], rax

; 782  :         const size_type _Newcapacity = _Calculate_growth(_Newsize);

	mov	rdx, QWORD PTR _Newsize$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Calculate_growth@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEBA_K_K@Z ; std::vector<node *,std::allocator<node *> >::_Calculate_growth
	mov	QWORD PTR _Newcapacity$[rbp], rax

; 783  : 
; 784  :         const pointer _Newvec           = _Al.allocate(_Newcapacity);

	mov	rdx, QWORD PTR _Newcapacity$[rbp]
	mov	rcx, QWORD PTR _Al$[rbp]
	call	?allocate@?$allocator@PEAVnode@@@std@@QEAAPEAPEAVnode@@_K@Z ; std::allocator<node *>::allocate
	mov	QWORD PTR _Newvec$[rbp], rax

; 785  :         const pointer _Constructed_last = _Newvec + _Whereoff + 1;

	mov	rax, QWORD PTR _Newvec$[rbp]
	mov	rcx, QWORD PTR _Whereoff$[rbp]
	lea	rax, QWORD PTR [rax+rcx*8+8]
	mov	QWORD PTR _Constructed_last$[rbp], rax

; 786  :         pointer _Constructed_first      = _Constructed_last;

	mov	rax, QWORD PTR _Constructed_last$[rbp]
	mov	QWORD PTR _Constructed_first$[rbp], rax

; 787  : 
; 788  :         _TRY_BEGIN
; 789  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

	mov	rcx, QWORD PTR <_Val_0>$[rbp]
	call	??$forward@AEBQEAVnode@@@std@@YAAEBQEAVnode@@AEBQEAV1@@Z ; std::forward<node * const &>
	mov	QWORD PTR tv90[rbp], rax
	mov	rcx, QWORD PTR _Newvec$[rbp]
	mov	rdx, QWORD PTR _Whereoff$[rbp]
	lea	rcx, QWORD PTR [rcx+rdx*8]
	call	??$_Unfancy@PEAVnode@@@std@@YAPEAPEAVnode@@PEAPEAV1@@Z ; std::_Unfancy<node *>
	mov	rcx, QWORD PTR tv90[rbp]
	mov	r8, rcx
	mov	rdx, rax
	mov	rcx, QWORD PTR _Al$[rbp]
	call	??$construct@PEAVnode@@AEBQEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVnode@@@std@@@std@@SAXAEAV?$allocator@PEAVnode@@@1@QEAPEAVnode@@AEBQEAV3@@Z ; std::_Default_allocator_traits<std::allocator<node *> >::construct<node *,node * const &>

; 790  :         _Constructed_first = _Newvec + _Whereoff;

	mov	rax, QWORD PTR _Newvec$[rbp]
	mov	rcx, QWORD PTR _Whereoff$[rbp]
	lea	rax, QWORD PTR [rax+rcx*8]
	mov	QWORD PTR _Constructed_first$[rbp], rax

; 791  : 
; 792  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	rax, QWORD PTR [rax]
	cmp	QWORD PTR _Whereptr$[rbp], rax
	jne	SHORT $LN4@Emplace_re

; 793  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);

	mov	r9, QWORD PTR _Newvec$[rbp]
	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	r8, QWORD PTR [rax]
	mov	rax, QWORD PTR _Myfirst$[rbp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Umove_if_noexcept@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAXPEAPEAVnode@@00@Z ; std::vector<node *,std::allocator<node *> >::_Umove_if_noexcept

; 794  :         } else { // provide basic guarantee

	jmp	SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 795  :             _Umove(_Myfirst, _Whereptr, _Newvec);

	mov	r9, QWORD PTR _Newvec$[rbp]
	mov	r8, QWORD PTR _Whereptr$[rbp]
	mov	rax, QWORD PTR _Myfirst$[rbp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Umove@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAPEAPEAVnode@@PEAPEAV3@00@Z ; std::vector<node *,std::allocator<node *> >::_Umove

; 796  :             _Constructed_first = _Newvec;

	mov	rax, QWORD PTR _Newvec$[rbp]
	mov	QWORD PTR _Constructed_first$[rbp], rax

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

	mov	rax, QWORD PTR _Newvec$[rbp]
	mov	rcx, QWORD PTR _Whereoff$[rbp]
	lea	rax, QWORD PTR [rax+rcx*8+8]
	mov	r9, rax
	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	r8, QWORD PTR [rax]
	mov	rdx, QWORD PTR _Whereptr$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Umove@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAPEAPEAVnode@@PEAPEAV3@00@Z ; std::vector<node *,std::allocator<node *> >::_Umove
	npad	1
$LN5@Emplace_re:
	jmp	SHORT $LN9@Emplace_re
$LN10@Emplace_re:
$LN9@Emplace_re:

; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);
; 802  :         _RERAISE;
; 803  :         _CATCH_END
; 804  : 
; 805  :         _Change_array(_Newvec, _Newsize, _Newcapacity);

	mov	r9, QWORD PTR _Newcapacity$[rbp]
	mov	r8, QWORD PTR _Newsize$[rbp]
	mov	rdx, QWORD PTR _Newvec$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Change_array@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAXQEAPEAVnode@@_K1@Z ; std::vector<node *,std::allocator<node *> >::_Change_array

; 806  :         return _Newvec + _Whereoff;

	mov	rax, QWORD PTR _Newvec$[rbp]
	mov	rcx, QWORD PTR _Whereoff$[rbp]
	lea	rax, QWORD PTR [rax+rcx*8]

; 807  :     }

	lea	rsp, QWORD PTR [rbp+552]
	pop	rdi
	pop	rbp
	ret	0
$LN11@Emplace_re:
??$_Emplace_reallocate@AEBQEAVnode@@@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAPEAPEAVnode@@QEAPEAV2@AEBQEAV2@@Z ENDP ; std::vector<node *,std::allocator<node *> >::_Emplace_reallocate<node * const &>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 8
_My_data$ = 40
_Myfirst$ = 72
_Mylast$ = 104
_Whereoff$ = 136
_Oldsize$ = 168
_Newsize$ = 200
_Newcapacity$ = 232
_Newvec$ = 264
_Constructed_last$ = 296
_Constructed_first$ = 328
tv90 = 536
this$ = 576
_Whereptr$ = 584
<_Val_0>$ = 592
?catch$0@?0???$_Emplace_reallocate@AEBQEAVnode@@@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAPEAPEAVnode@@QEAPEAV2@AEBQEAV2@@Z@4HA PROC ; `std::vector<node *,std::allocator<node *> >::_Emplace_reallocate<node * const &>'::`1'::catch$0

; 798  :         }
; 799  :         _CATCH_ALL

	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
__catch$??$_Emplace_reallocate@AEBQEAVnode@@@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAPEAPEAVnode@@QEAPEAV2@AEBQEAV2@@Z$0:

; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);

	mov	r8, QWORD PTR _Constructed_last$[rbp]
	mov	rdx, QWORD PTR _Constructed_first$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Destroy@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAXPEAPEAVnode@@0@Z ; std::vector<node *,std::allocator<node *> >::_Destroy

; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);

	mov	r8, QWORD PTR _Newcapacity$[rbp]
	mov	rdx, QWORD PTR _Newvec$[rbp]
	mov	rcx, QWORD PTR _Al$[rbp]
	call	?deallocate@?$allocator@PEAVnode@@@std@@QEAAXQEAPEAVnode@@_K@Z ; std::allocator<node *>::deallocate

; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);
; 802  :         _RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1

; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);
; 802  :         _RERAISE;
; 803  :         _CATCH_END

	lea	rax, $LN10@catch$0
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
	int	3
?catch$0@?0???$_Emplace_reallocate@AEBQEAVnode@@@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAPEAPEAVnode@@QEAPEAV2@AEBQEAV2@@Z@4HA ENDP ; `std::vector<node *,std::allocator<node *> >::_Emplace_reallocate<node * const &>'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 8
_My_data$ = 40
_Myfirst$ = 72
_Mylast$ = 104
_Whereoff$ = 136
_Oldsize$ = 168
_Newsize$ = 200
_Newcapacity$ = 232
_Newvec$ = 264
_Constructed_last$ = 296
_Constructed_first$ = 328
tv90 = 536
this$ = 576
_Whereptr$ = 584
<_Val_0>$ = 592
?catch$0@?0???$_Emplace_reallocate@AEBQEAVnode@@@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAPEAPEAVnode@@QEAPEAV2@AEBQEAV2@@Z@4HA PROC ; `std::vector<node *,std::allocator<node *> >::_Emplace_reallocate<node * const &>'::`1'::catch$0

; 799  :         _CATCH_ALL

	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
__catch$??$_Emplace_reallocate@AEBQEAVnode@@@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAPEAPEAVnode@@QEAPEAV2@AEBQEAV2@@Z$0:

; 800  :         _Destroy(_Constructed_first, _Constructed_last);

	mov	r8, QWORD PTR _Constructed_last$[rbp]
	mov	rdx, QWORD PTR _Constructed_first$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Destroy@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAXPEAPEAVnode@@0@Z ; std::vector<node *,std::allocator<node *> >::_Destroy

; 801  :         _Al.deallocate(_Newvec, _Newcapacity);

	mov	r8, QWORD PTR _Newcapacity$[rbp]
	mov	rdx, QWORD PTR _Newvec$[rbp]
	mov	rcx, QWORD PTR _Al$[rbp]
	call	?deallocate@?$allocator@PEAVnode@@@std@@QEAAXQEAPEAVnode@@_K@Z ; std::allocator<node *>::deallocate

; 802  :         _RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1

; 803  :         _CATCH_END

	lea	rax, $LN10@catch$0
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
	int	3
?catch$0@?0???$_Emplace_reallocate@AEBQEAVnode@@@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAPEAPEAVnode@@QEAPEAV2@AEBQEAV2@@Z@4HA ENDP ; `std::vector<node *,std::allocator<node *> >::_Emplace_reallocate<node * const &>'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$construct@PEAVnode@@AEBQEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVnode@@@std@@@std@@SAXAEAV?$allocator@PEAVnode@@@1@QEAPEAVnode@@AEBQEAV3@@Z
_TEXT	SEGMENT
$T1 = 200
__formal$ = 256
_Ptr$ = 264
<_Args_0>$ = 272
??$construct@PEAVnode@@AEBQEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVnode@@@std@@@std@@SAXAEAV?$allocator@PEAVnode@@@1@QEAPEAVnode@@AEBQEAV3@@Z PROC ; std::_Default_allocator_traits<std::allocator<node *> >::construct<node *,node * const &>, COMDAT

; 707  :     static _CONSTEXPR20_DYNALLOC void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rcx, QWORD PTR _Ptr$[rbp]
	call	??$_Voidify_iter@PEAPEAVnode@@@std@@YAPEAXPEAPEAVnode@@@Z ; std::_Voidify_iter<node * *>
	mov	rdx, rax
	mov	ecx, 8
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rbp], rax
	mov	rcx, QWORD PTR <_Args_0>$[rbp]
	call	??$forward@AEBQEAVnode@@@std@@YAAEBQEAVnode@@AEBQEAV1@@Z ; std::forward<node * const &>
	mov	rcx, QWORD PTR $T1[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rcx], rax

; 708  : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 709  :         if (_STD is_constant_evaluated()) {
; 710  :             _STD construct_at(_Ptr, _STD forward<_Types>(_Args)...);
; 711  :         } else
; 712  : #endif // __cpp_lib_constexpr_dynamic_alloc
; 713  :         {
; 714  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);
; 715  :         }
; 716  :     }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??$construct@PEAVnode@@AEBQEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVnode@@@std@@@std@@SAXAEAV?$allocator@PEAVnode@@@1@QEAPEAVnode@@AEBQEAV3@@Z ENDP ; std::_Default_allocator_traits<std::allocator<node *> >::construct<node *,node * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstddef
;	COMDAT ??$_Unfancy@PEAVnode@@@std@@YAPEAPEAVnode@@PEAPEAV1@@Z
_TEXT	SEGMENT
_Ptr$ = 224
??$_Unfancy@PEAVnode@@@std@@YAPEAPEAVnode@@PEAPEAV1@@Z PROC ; std::_Unfancy<node *>, COMDAT

; 288  : _NODISCARD constexpr _Ty* _Unfancy(_Ty* _Ptr) noexcept { // do nothing for plain pointers

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__E458E21C_xstddef
	call	__CheckForDebuggerJustMyCode

; 289  :     return _Ptr;

	mov	rax, QWORD PTR _Ptr$[rbp]

; 290  : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Unfancy@PEAVnode@@@std@@YAPEAPEAVnode@@PEAPEAV1@@Z ENDP ; std::_Unfancy<node *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??$_Emplace_back_with_unused_capacity@AEBQEAVnode@@@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAA?A_TAEBQEAVnode@@@Z
_TEXT	SEGMENT
_My_data$ = 8
_Mylast$ = 40
_Result$ = 72
tv67 = 280
tv70 = 288
this$ = 336
<_Val_0>$ = 344
??$_Emplace_back_with_unused_capacity@AEBQEAVnode@@@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAA?A_TAEBQEAVnode@@@Z PROC ; std::vector<node *,std::allocator<node *> >::_Emplace_back_with_unused_capacity<node * const &>, COMDAT

; 721  :     _CONSTEXPR20_CONTAINER decltype(auto) _Emplace_back_with_unused_capacity(_Valty&&... _Val) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 344				; 00000158H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__324884E2_vector
	call	__CheckForDebuggerJustMyCode

; 722  :         // insert by perfectly forwarding into element at end, provide strong guarantee
; 723  :         auto& _My_data   = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR _My_data$[rbp], rax

; 724  :         pointer& _Mylast = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rbp], rax

; 725  :         _STL_INTERNAL_CHECK(_Mylast != _My_data._Myend); // check that we have unused capacity
; 726  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

	mov	rcx, QWORD PTR <_Val_0>$[rbp]
	call	??$forward@AEBQEAVnode@@@std@@YAAEBQEAVnode@@AEBQEAV1@@Z ; std::forward<node * const &>
	mov	QWORD PTR tv67[rbp], rax
	mov	rcx, QWORD PTR _Mylast$[rbp]
	mov	rcx, QWORD PTR [rcx]
	call	??$_Unfancy@PEAVnode@@@std@@YAPEAPEAVnode@@PEAPEAV1@@Z ; std::_Unfancy<node *>
	mov	QWORD PTR tv70[rbp], rax
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAAEAV?$allocator@PEAVnode@@@2@XZ ; std::vector<node *,std::allocator<node *> >::_Getal
	mov	rcx, QWORD PTR tv67[rbp]
	mov	r8, rcx
	mov	rcx, QWORD PTR tv70[rbp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$construct@PEAVnode@@AEBQEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVnode@@@std@@@std@@SAXAEAV?$allocator@PEAVnode@@@1@QEAPEAVnode@@AEBQEAV3@@Z ; std::_Default_allocator_traits<std::allocator<node *> >::construct<node *,node * const &>

; 727  :         _Orphan_range(_Mylast, _Mylast);

	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	r8, QWORD PTR [rax]
	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Orphan_range@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEBAXPEAPEAVnode@@0@Z ; std::vector<node *,std::allocator<node *> >::_Orphan_range

; 728  :         _Ty& _Result = *_Mylast;

	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Result$[rbp], rax

; 729  :         ++_Mylast;

	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, 8
	mov	rcx, QWORD PTR _Mylast$[rbp]
	mov	QWORD PTR [rcx], rax

; 730  : #if _HAS_CXX17
; 731  :         return _Result;
; 732  : #else // ^^^ _HAS_CXX17 ^^^ // vvv !_HAS_CXX17 vvv
; 733  :         (void) _Result;
; 734  : #endif // _HAS_CXX17
; 735  :     }

	lea	rsp, QWORD PTR [rbp+312]
	pop	rdi
	pop	rbp
	ret	0
??$_Emplace_back_with_unused_capacity@AEBQEAVnode@@@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAA?A_TAEBQEAVnode@@@Z ENDP ; std::vector<node *,std::allocator<node *> >::_Emplace_back_with_unused_capacity<node * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\type_traits
;	COMDAT ??$forward@AEBQEAVnode@@@std@@YAAEBQEAVnode@@AEBQEAV1@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@AEBQEAVnode@@@std@@YAAEBQEAVnode@@AEBQEAV1@@Z PROC ; std::forward<node * const &>, COMDAT

; 1443 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__589FA321_type_traits
	call	__CheckForDebuggerJustMyCode

; 1444 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rbp]

; 1445 : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$forward@AEBQEAVnode@@@std@@YAAEBQEAVnode@@AEBQEAV1@@Z ENDP ; std::forward<node * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??$emplace_back@AEBQEAVnode@@@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAA?A_TAEBQEAVnode@@@Z
_TEXT	SEGMENT
_My_data$ = 8
_Mylast$ = 40
_Result$ = 72
this$ = 320
<_Val_0>$ = 328
??$emplace_back@AEBQEAVnode@@@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAA?A_TAEBQEAVnode@@@Z PROC ; std::vector<node *,std::allocator<node *> >::emplace_back<node * const &>, COMDAT

; 739  :     _CONSTEXPR20_CONTAINER decltype(auto) emplace_back(_Valty&&... _Val) {

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__324884E2_vector
	call	__CheckForDebuggerJustMyCode

; 740  :         // insert by perfectly forwarding into element at end, provide strong guarantee
; 741  :         auto& _My_data   = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR _My_data$[rbp], rax

; 742  :         pointer& _Mylast = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rbp], rax

; 743  :         if (_Mylast != _My_data._Myend) {

	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	rcx, QWORD PTR _My_data$[rbp]
	mov	rcx, QWORD PTR [rcx+24]
	cmp	QWORD PTR [rax], rcx
	je	SHORT $LN2@emplace_ba

; 744  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

	mov	rcx, QWORD PTR <_Val_0>$[rbp]
	call	??$forward@AEBQEAVnode@@@std@@YAAEBQEAVnode@@AEBQEAV1@@Z ; std::forward<node * const &>
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rbp]
	call	??$_Emplace_back_with_unused_capacity@AEBQEAVnode@@@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAA?A_TAEBQEAVnode@@@Z ; std::vector<node *,std::allocator<node *> >::_Emplace_back_with_unused_capacity<node * const &>
	jmp	SHORT $LN1@emplace_ba
$LN2@emplace_ba:

; 745  :         }
; 746  : 
; 747  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

	mov	rcx, QWORD PTR <_Val_0>$[rbp]
	call	??$forward@AEBQEAVnode@@@std@@YAAEBQEAVnode@@AEBQEAV1@@Z ; std::forward<node * const &>
	mov	r8, rax
	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	call	??$_Emplace_reallocate@AEBQEAVnode@@@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAPEAPEAVnode@@QEAPEAV2@AEBQEAV2@@Z ; std::vector<node *,std::allocator<node *> >::_Emplace_reallocate<node * const &>
	mov	QWORD PTR _Result$[rbp], rax
$LN1@emplace_ba:

; 748  : #if _HAS_CXX17
; 749  :         return _Result;
; 750  : #else // ^^^ _HAS_CXX17 ^^^ // vvv !_HAS_CXX17 vvv
; 751  :         (void) _Result;
; 752  : #endif // _HAS_CXX17
; 753  :     }

	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
??$emplace_back@AEBQEAVnode@@@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAA?A_TAEBQEAVnode@@@Z ENDP ; std::vector<node *,std::allocator<node *> >::emplace_back<node * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\ostream
;	COMDAT ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z
_TEXT	SEGMENT
_State$ = 4
_Ok$ = 40
_Pad$4 = 88
$T5 = 308
$T6 = 340
$T7 = 372
$T8 = 404
$T9 = 436
$T10 = 468
$T11 = 504
tv289 = 516
tv284 = 516
tv65 = 516
tv290 = 520
tv287 = 520
tv285 = 520
tv130 = 520
tv291 = 528
tv288 = 528
tv286 = 528
__$ArrayPad$ = 536
_Ostr$ = 576
_Ch$ = 584
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z PROC ; std::operator<<<std::char_traits<char> >, COMDAT

; 779  :     basic_ostream<char, _Traits>& _Ostr, char _Ch) { // insert a char into char stream

$LN23:
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 584				; 00000248H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 90					; 0000005aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+616]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__C12F3EA4_ostream
	call	__CheckForDebuggerJustMyCode

; 780  :     using _Elem = char;
; 781  :     using _Myos = basic_ostream<_Elem, _Traits>;
; 782  : 
; 783  :     ios_base::iostate _State = ios_base::goodbit;

	mov	DWORD PTR _State$[rbp], 0

; 784  :     const typename _Myos::sentry _Ok(_Ostr);

	mov	rdx, QWORD PTR _Ostr$[rbp]
	lea	rcx, QWORD PTR _Ok$[rbp]
	call	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
	npad	1

; 785  : 
; 786  :     if (_Ok) { // state okay, insert

	lea	rcx, QWORD PTR _Ok$[rbp]
	call	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	je	$LN8@operator

; 787  :         streamsize _Pad = _Ostr.width() <= 1 ? 0 : _Ostr.width() - 1;

	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
	cmp	rax, 1
	jg	SHORT $LN15@operator
	mov	QWORD PTR tv130[rbp], 0
	jmp	SHORT $LN16@operator
$LN15@operator:
	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
	dec	rax
	mov	QWORD PTR tv130[rbp], rax
$LN16@operator:
	mov	rax, QWORD PTR tv130[rbp]
	mov	QWORD PTR _Pad$4[rbp], rax

; 788  : 
; 789  :         _TRY_IO_BEGIN
; 790  :         if ((_Ostr.flags() & ios_base::adjustfield) != ios_base::left) {

	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?flags@ios_base@std@@QEBAHXZ
	mov	DWORD PTR tv65[rbp], eax
	mov	eax, DWORD PTR tv65[rbp]
	and	eax, 448				; 000001c0H
	cmp	eax, 64					; 00000040H
	je	$LN10@operator

; 791  :             for (; _State == ios_base::goodbit && 0 < _Pad; --_Pad) { // pad on left

	jmp	SHORT $LN4@operator
$LN2@operator:
	mov	rax, QWORD PTR _Pad$4[rbp]
	dec	rax
	mov	QWORD PTR _Pad$4[rbp], rax
$LN4@operator:
	cmp	DWORD PTR _State$[rbp], 0
	jne	$LN10@operator
	cmp	QWORD PTR _Pad$4[rbp], 0
	jle	$LN10@operator

; 792  :                 if (_Traits::eq_int_type(_Traits::eof(), _Ostr.rdbuf()->sputc(_Ostr.fill()))) {

	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ
	mov	BYTE PTR tv284[rbp], al
	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	QWORD PTR tv285[rbp], rax
	movzx	edx, BYTE PTR tv284[rbp]
	mov	rcx, QWORD PTR tv285[rbp]
	call	QWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z
	mov	DWORD PTR tv286[rbp], eax
	mov	eax, DWORD PTR tv286[rbp]
	mov	DWORD PTR $T5[rbp], eax
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	mov	DWORD PTR $T6[rbp], eax
	lea	rdx, QWORD PTR $T5[rbp]
	lea	rcx, QWORD PTR $T6[rbp]
	call	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN11@operator

; 793  :                     _State |= ios_base::badbit;

	mov	eax, DWORD PTR _State$[rbp]
	or	eax, 4
	mov	DWORD PTR _State$[rbp], eax
$LN11@operator:

; 794  :                 }
; 795  :             }

	jmp	$LN2@operator
$LN10@operator:

; 796  :         }
; 797  : 
; 798  :         if (_State == ios_base::goodbit && _Traits::eq_int_type(_Traits::eof(), _Ostr.rdbuf()->sputc(_Ch))) {

	cmp	DWORD PTR _State$[rbp], 0
	jne	SHORT $LN12@operator
	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	QWORD PTR tv287[rbp], rax
	movzx	edx, BYTE PTR _Ch$[rbp]
	mov	rcx, QWORD PTR tv287[rbp]
	call	QWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z
	mov	DWORD PTR tv288[rbp], eax
	mov	eax, DWORD PTR tv288[rbp]
	mov	DWORD PTR $T7[rbp], eax
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	mov	DWORD PTR $T8[rbp], eax
	lea	rdx, QWORD PTR $T7[rbp]
	lea	rcx, QWORD PTR $T8[rbp]
	call	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN12@operator

; 799  :             _State |= ios_base::badbit;

	mov	eax, DWORD PTR _State$[rbp]
	or	eax, 4
	mov	DWORD PTR _State$[rbp], eax
$LN12@operator:

; 800  :         }
; 801  : 
; 802  :         for (; _State == ios_base::goodbit && 0 < _Pad; --_Pad) { // pad on right

	jmp	SHORT $LN7@operator
$LN5@operator:
	mov	rax, QWORD PTR _Pad$4[rbp]
	dec	rax
	mov	QWORD PTR _Pad$4[rbp], rax
$LN7@operator:
	cmp	DWORD PTR _State$[rbp], 0
	jne	$LN6@operator
	cmp	QWORD PTR _Pad$4[rbp], 0
	jle	$LN6@operator

; 803  :             if (_Traits::eq_int_type(_Traits::eof(), _Ostr.rdbuf()->sputc(_Ostr.fill()))) {

	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ
	mov	BYTE PTR tv289[rbp], al
	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	QWORD PTR tv290[rbp], rax
	movzx	edx, BYTE PTR tv289[rbp]
	mov	rcx, QWORD PTR tv290[rbp]
	call	QWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z
	mov	DWORD PTR tv291[rbp], eax
	mov	eax, DWORD PTR tv291[rbp]
	mov	DWORD PTR $T9[rbp], eax
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	mov	DWORD PTR $T10[rbp], eax
	lea	rdx, QWORD PTR $T9[rbp]
	lea	rcx, QWORD PTR $T10[rbp]
	call	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN13@operator

; 804  :                 _State |= ios_base::badbit;

	mov	eax, DWORD PTR _State$[rbp]
	or	eax, 4
	mov	DWORD PTR _State$[rbp], eax
$LN13@operator:

; 805  :             }
; 806  :         }

	jmp	$LN5@operator
$LN6@operator:
	jmp	SHORT $LN8@operator
$LN21@operator:
$LN8@operator:

; 807  :         _CATCH_IO_(ios_base, _Ostr)
; 808  :     }
; 809  : 
; 810  :     _Ostr.width(0);

	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	xor	edx, edx
	mov	rcx, rax
	call	QWORD PTR __imp_?width@ios_base@std@@QEAA_J_J@Z

; 811  :     _Ostr.setstate(_State);

	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	xor	r8d, r8d
	mov	edx, DWORD PTR _State$[rbp]
	mov	rcx, rax
	call	QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z

; 812  :     return _Ostr;

	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	QWORD PTR $T11[rbp], rax
	lea	rcx, QWORD PTR _Ok$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	mov	rax, QWORD PTR $T11[rbp]

; 813  : }

	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+552]
	pop	rdi
	pop	rbp
	ret	0
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ENDP ; std::operator<<<std::char_traits<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_State$ = 4
_Ok$ = 40
_Pad$4 = 88
$T5 = 308
$T6 = 340
$T7 = 372
$T8 = 404
$T9 = 436
$T10 = 468
$T11 = 504
tv289 = 516
tv284 = 516
tv65 = 516
tv290 = 520
tv287 = 520
tv285 = 520
tv130 = 520
tv291 = 528
tv288 = 528
tv286 = 528
__$ArrayPad$ = 536
_Ostr$ = 576
_Ch$ = 584
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR _Ok$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_State$ = 4
_Ok$ = 40
_Pad$4 = 88
$T5 = 308
$T6 = 340
$T7 = 372
$T8 = 404
$T9 = 436
$T10 = 468
$T11 = 504
tv289 = 516
tv284 = 516
tv65 = 516
tv290 = 520
tv287 = 520
tv285 = 520
tv130 = 520
tv291 = 528
tv288 = 528
tv286 = 528
__$ArrayPad$ = 536
_Ostr$ = 576
_Ch$ = 584
?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1

; 807  :         _CATCH_IO_(ios_base, _Ostr)

	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
__catch$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z$0:
	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	r8b, 1
	mov	edx, 4
	mov	rcx, rax
	call	QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
	npad	1
	lea	rax, $LN21@catch$1
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
	int	3
?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_State$ = 4
_Ok$ = 40
_Pad$4 = 88
$T5 = 308
$T6 = 340
$T7 = 372
$T8 = 404
$T9 = 436
$T10 = 468
$T11 = 504
tv289 = 516
tv284 = 516
tv65 = 516
tv290 = 520
tv287 = 520
tv285 = 520
tv130 = 520
tv291 = 528
tv288 = 528
tv286 = 528
__$ArrayPad$ = 536
_Ostr$ = 576
_Ch$ = 584
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR _Ok$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_State$ = 4
_Ok$ = 40
_Pad$4 = 88
$T5 = 308
$T6 = 340
$T7 = 372
$T8 = 404
$T9 = 436
$T10 = 468
$T11 = 504
tv289 = 516
tv284 = 516
tv65 = 516
tv290 = 520
tv287 = 520
tv285 = 520
tv130 = 520
tv291 = 528
tv288 = 528
tv286 = 528
__$ArrayPad$ = 536
_Ostr$ = 576
_Ch$ = 584
?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1

; 807  :         _CATCH_IO_(ios_base, _Ostr)

	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
__catch$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z$0:
	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	r8b, 1
	mov	edx, 4
	mov	rcx, rax
	call	QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
	npad	1
	lea	rax, $LN21@catch$1
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
	int	3
?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\ostream
;	COMDAT ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
_TEXT	SEGMENT
_State$ = 4
_Count$ = 40
_Pad$ = 72
_Ok$ = 104
$T4 = 340
$T5 = 372
$T6 = 404
$T7 = 436
$T8 = 472
tv300 = 484
tv295 = 484
tv139 = 484
tv301 = 488
tv298 = 488
tv296 = 488
tv137 = 488
tv302 = 496
tv299 = 496
tv297 = 496
__$ArrayPad$ = 504
_Ostr$ = 544
_Val$ = 552
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z PROC ; std::operator<<<std::char_traits<char> >, COMDAT

; 734  :     const char* _Val) { // insert NTBS into char stream

$LN25:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 552				; 00000228H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 82					; 00000052H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+584]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__C12F3EA4_ostream
	call	__CheckForDebuggerJustMyCode

; 735  :     using _Elem = char;
; 736  :     using _Myos = basic_ostream<_Elem, _Traits>;
; 737  : 
; 738  :     ios_base::iostate _State = ios_base::goodbit;

	mov	DWORD PTR _State$[rbp], 0

; 739  :     streamsize _Count        = static_cast<streamsize>(_Traits::length(_Val));

	mov	rcx, QWORD PTR _Val$[rbp]
	call	?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
	mov	QWORD PTR _Count$[rbp], rax

; 740  :     streamsize _Pad          = _Ostr.width() <= 0 || _Ostr.width() <= _Count ? 0 : _Ostr.width() - _Count;

	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
	test	rax, rax
	jle	SHORT $LN17@operator
	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
	cmp	rax, QWORD PTR _Count$[rbp]
	jle	SHORT $LN17@operator
	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
	sub	rax, QWORD PTR _Count$[rbp]
	mov	QWORD PTR tv137[rbp], rax
	jmp	SHORT $LN18@operator
$LN17@operator:
	mov	QWORD PTR tv137[rbp], 0
$LN18@operator:
	mov	rax, QWORD PTR tv137[rbp]
	mov	QWORD PTR _Pad$[rbp], rax

; 741  :     const typename _Myos::sentry _Ok(_Ostr);

	mov	rdx, QWORD PTR _Ostr$[rbp]
	lea	rcx, QWORD PTR _Ok$[rbp]
	call	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
	npad	1

; 742  : 
; 743  :     if (!_Ok) {

	lea	rcx, QWORD PTR _Ok$[rbp]
	call	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN8@operator

; 744  :         _State |= ios_base::badbit;

	mov	eax, DWORD PTR _State$[rbp]
	or	eax, 4
	mov	DWORD PTR _State$[rbp], eax

; 745  :     } else { // state okay, insert

	jmp	$LN9@operator
$LN8@operator:

; 746  :         _TRY_IO_BEGIN
; 747  :         if ((_Ostr.flags() & ios_base::adjustfield) != ios_base::left) {

	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?flags@ios_base@std@@QEBAHXZ
	mov	DWORD PTR tv139[rbp], eax
	mov	eax, DWORD PTR tv139[rbp]
	and	eax, 448				; 000001c0H
	cmp	eax, 64					; 00000040H
	je	$LN11@operator

; 748  :             for (; 0 < _Pad; --_Pad) { // pad on left

	jmp	SHORT $LN4@operator
$LN2@operator:
	mov	rax, QWORD PTR _Pad$[rbp]
	dec	rax
	mov	QWORD PTR _Pad$[rbp], rax
$LN4@operator:
	cmp	QWORD PTR _Pad$[rbp], 0
	jle	$LN11@operator

; 749  :                 if (_Traits::eq_int_type(_Traits::eof(), _Ostr.rdbuf()->sputc(_Ostr.fill()))) {

	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ
	mov	BYTE PTR tv295[rbp], al
	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	QWORD PTR tv296[rbp], rax
	movzx	edx, BYTE PTR tv295[rbp]
	mov	rcx, QWORD PTR tv296[rbp]
	call	QWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z
	mov	DWORD PTR tv297[rbp], eax
	mov	eax, DWORD PTR tv297[rbp]
	mov	DWORD PTR $T4[rbp], eax
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	mov	DWORD PTR $T5[rbp], eax
	lea	rdx, QWORD PTR $T4[rbp]
	lea	rcx, QWORD PTR $T5[rbp]
	call	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN12@operator

; 750  :                     _State |= ios_base::badbit; // insertion failed, quit

	mov	eax, DWORD PTR _State$[rbp]
	or	eax, 4
	mov	DWORD PTR _State$[rbp], eax

; 751  :                     break;

	jmp	SHORT $LN11@operator
$LN12@operator:

; 752  :                 }
; 753  :             }

	jmp	$LN2@operator
$LN11@operator:

; 754  :         }
; 755  : 
; 756  :         if (_State == ios_base::goodbit && _Ostr.rdbuf()->sputn(_Val, _Count) != _Count) {

	cmp	DWORD PTR _State$[rbp], 0
	jne	SHORT $LN13@operator
	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	QWORD PTR tv298[rbp], rax
	mov	r8, QWORD PTR _Count$[rbp]
	mov	rdx, QWORD PTR _Val$[rbp]
	mov	rcx, QWORD PTR tv298[rbp]
	call	QWORD PTR __imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z
	mov	QWORD PTR tv299[rbp], rax
	mov	rax, QWORD PTR _Count$[rbp]
	cmp	QWORD PTR tv299[rbp], rax
	je	SHORT $LN13@operator

; 757  :             _State |= ios_base::badbit;

	mov	eax, DWORD PTR _State$[rbp]
	or	eax, 4
	mov	DWORD PTR _State$[rbp], eax
$LN13@operator:

; 758  :         }
; 759  : 
; 760  :         if (_State == ios_base::goodbit) {

	cmp	DWORD PTR _State$[rbp], 0
	jne	$LN14@operator

; 761  :             for (; 0 < _Pad; --_Pad) { // pad on right

	jmp	SHORT $LN7@operator
$LN5@operator:
	mov	rax, QWORD PTR _Pad$[rbp]
	dec	rax
	mov	QWORD PTR _Pad$[rbp], rax
$LN7@operator:
	cmp	QWORD PTR _Pad$[rbp], 0
	jle	$LN14@operator

; 762  :                 if (_Traits::eq_int_type(_Traits::eof(), _Ostr.rdbuf()->sputc(_Ostr.fill()))) {

	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ
	mov	BYTE PTR tv300[rbp], al
	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	QWORD PTR tv301[rbp], rax
	movzx	edx, BYTE PTR tv300[rbp]
	mov	rcx, QWORD PTR tv301[rbp]
	call	QWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z
	mov	DWORD PTR tv302[rbp], eax
	mov	eax, DWORD PTR tv302[rbp]
	mov	DWORD PTR $T6[rbp], eax
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	mov	DWORD PTR $T7[rbp], eax
	lea	rdx, QWORD PTR $T6[rbp]
	lea	rcx, QWORD PTR $T7[rbp]
	call	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN15@operator

; 763  :                     _State |= ios_base::badbit; // insertion failed, quit

	mov	eax, DWORD PTR _State$[rbp]
	or	eax, 4
	mov	DWORD PTR _State$[rbp], eax

; 764  :                     break;

	jmp	SHORT $LN14@operator
$LN15@operator:

; 765  :                 }
; 766  :             }

	jmp	$LN5@operator
$LN14@operator:

; 767  :         }
; 768  : 
; 769  :         _Ostr.width(0);

	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	xor	edx, edx
	mov	rcx, rax
	call	QWORD PTR __imp_?width@ios_base@std@@QEAA_J_J@Z
	npad	1
	jmp	SHORT $LN9@operator
$LN23@operator:
$LN9@operator:

; 770  :         _CATCH_IO_(ios_base, _Ostr)
; 771  :     }
; 772  : 
; 773  :     _Ostr.setstate(_State);

	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	xor	r8d, r8d
	mov	edx, DWORD PTR _State$[rbp]
	mov	rcx, rax
	call	QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z

; 774  :     return _Ostr;

	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	QWORD PTR $T8[rbp], rax
	lea	rcx, QWORD PTR _Ok$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	mov	rax, QWORD PTR $T8[rbp]

; 775  : }

	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+520]
	pop	rdi
	pop	rbp
	ret	0
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ENDP ; std::operator<<<std::char_traits<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_State$ = 4
_Count$ = 40
_Pad$ = 72
_Ok$ = 104
$T4 = 340
$T5 = 372
$T6 = 404
$T7 = 436
$T8 = 472
tv300 = 484
tv295 = 484
tv139 = 484
tv301 = 488
tv298 = 488
tv296 = 488
tv137 = 488
tv302 = 496
tv299 = 496
tv297 = 496
__$ArrayPad$ = 504
_Ostr$ = 544
_Val$ = 552
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR _Ok$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_State$ = 4
_Count$ = 40
_Pad$ = 72
_Ok$ = 104
$T4 = 340
$T5 = 372
$T6 = 404
$T7 = 436
$T8 = 472
tv300 = 484
tv295 = 484
tv139 = 484
tv301 = 488
tv298 = 488
tv296 = 488
tv137 = 488
tv302 = 496
tv299 = 496
tv297 = 496
__$ArrayPad$ = 504
_Ostr$ = 544
_Val$ = 552
?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1

; 770  :         _CATCH_IO_(ios_base, _Ostr)

	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
__catch$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$0:
	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	r8b, 1
	mov	edx, 4
	mov	rcx, rax
	call	QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
	npad	1
	lea	rax, $LN23@catch$1
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
	int	3
?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_State$ = 4
_Count$ = 40
_Pad$ = 72
_Ok$ = 104
$T4 = 340
$T5 = 372
$T6 = 404
$T7 = 436
$T8 = 472
tv300 = 484
tv295 = 484
tv139 = 484
tv301 = 488
tv298 = 488
tv296 = 488
tv137 = 488
tv302 = 496
tv299 = 496
tv297 = 496
__$ArrayPad$ = 504
_Ostr$ = 544
_Val$ = 552
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR _Ok$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_State$ = 4
_Count$ = 40
_Pad$ = 72
_Ok$ = 104
$T4 = 340
$T5 = 372
$T6 = 404
$T7 = 436
$T8 = 472
tv300 = 484
tv295 = 484
tv139 = 484
tv301 = 488
tv298 = 488
tv296 = 488
tv137 = 488
tv302 = 496
tv299 = 496
tv297 = 496
__$ArrayPad$ = 504
_Ostr$ = 544
_Val$ = 552
?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1

; 770  :         _CATCH_IO_(ios_base, _Ostr)

	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
__catch$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$0:
	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	r8b, 1
	mov	edx, 4
	mov	rcx, rax
	call	QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
	npad	1
	lea	rax, $LN23@catch$1
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
	int	3
?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\shtuk\Desktop\Files\EquationStringParser\EquationStringParser\EquationStringParser.cpp
;	COMDAT main
_TEXT	SEGMENT
supportedOps$ = 4
eq$ = 40
ii$10 = 68
eqptr$11 = 104
tok$12 = 136
manager$13 = 192
prevChar$14 = 324
toklocal$15 = 360
builder$16 = 432
result$17 = 520
builder2$ = 560
r_result$ = 648
$T18 = 1448
$T19 = 1480
$T20 = 1512
$T21 = 1576
$T22 = 1608
$T23 = 1672
$T24 = 1704
$T25 = 1768
$T26 = 1800
$T27 = 1864
$T28 = 1896
$T29 = 1960
$T30 = 1992
$T31 = 2056
$T32 = 2088
$T33 = 2152
$T34 = 2184
$T35 = 2248
$T36 = 2312
$T37 = 2344
$T38 = 2408
$T39 = 2440
$T40 = 2500
tv182 = 2516
tv415 = 2520
tv413 = 2520
tv411 = 2520
tv409 = 2520
tv407 = 2520
tv405 = 2520
tv402 = 2520
tv350 = 2520
tv306 = 2520
tv138 = 2520
tv132 = 2520
tv425 = 2528
tv421 = 2528
tv418 = 2528
tv423 = 2536
__$ArrayPad$ = 2544
main	PROC						; COMDAT

; 59   : {

$LN52:
	push	rbp
	push	rdi
	sub	rsp, 2600				; 00000a28H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 450				; 000001c2H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__C90439AA_EquationStringParser@cpp
	call	__CheckForDebuggerJustMyCode

; 60   : 	char supportedOps[] = {'+','-','*','/','^'};

	mov	BYTE PTR supportedOps$[rbp], 43		; 0000002bH
	mov	BYTE PTR supportedOps$[rbp+1], 45	; 0000002dH
	mov	BYTE PTR supportedOps$[rbp+2], 42	; 0000002aH
	mov	BYTE PTR supportedOps$[rbp+3], 47	; 0000002fH
	mov	BYTE PTR supportedOps$[rbp+4], 94	; 0000005eH

; 61   : 
; 62   : 	//const char* eq = "(((55 + 3) ^ 4) * x + ((5 + y) * x))";
; 63   : 	//const char *eq = "15 - (6 + 5 / 3) / (1 * (4 + 2) + 7)";
; 64   : 	//const char *eq = "3.756 + (6.4563 / 2.23 /3.0 * (4.1 + 2.8))";
; 65   : 	//const char *eq = "(45.45 - 45 ^ -2) * -4563.45 - 485 * (4.4586 - (2.7562 * 756 / 3)) / (4585 * 45.45)";
; 66   : 	//const char* eq = "44 * x";
; 67   : 	const char* eq = "(45.45 - x ^ -2) * -4563.45 - y * (4.4586 - (2.7562 * z / 3)) / (4585 * 45.45)";

	lea	rax, OFFSET FLAT:??_C@_0EP@FLJIJNCO@?$CI45?445?5?9?5x?5?$FO?5?92?$CJ?5?$CK?5?94563?445?5?9?5y@
	mov	QWORD PTR eq$[rbp], rax

; 68   : 
; 69   : 
; 70   : 	for (int ii = 0; ii < 1; ii++)

	mov	DWORD PTR ii$10[rbp], 0
	jmp	SHORT $LN4@main
$LN2@main:
	mov	eax, DWORD PTR ii$10[rbp]
	inc	eax
	mov	DWORD PTR ii$10[rbp], eax
$LN4@main:
	cmp	DWORD PTR ii$10[rbp], 1
	jge	$LN3@main

; 71   : 	{
; 72   : 		std::cout << eq << std::endl;

	mov	rdx, QWORD PTR eq$[rbp]
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z

; 73   : 
; 74   : 		const char *eqptr = eq;

	mov	rax, QWORD PTR eq$[rbp]
	mov	QWORD PTR eqptr$11[rbp], rax

; 75   : 	
; 76   : 		token tok;

	mov	edx, 24
	lea	rcx, QWORD PTR tok$12[rbp]
	call	?__autoclassinit2@token@@QEAAX_K@Z
	lea	rcx, QWORD PTR tok$12[rbp]
	call	??0token@@QEAA@XZ			; token::token
	npad	1

; 77   : 		expression manager;

	mov	edx, 104				; 00000068H
	lea	rcx, QWORD PTR manager$13[rbp]
	call	?__autoclassinit2@expression@@QEAAX_K@Z
	lea	rcx, QWORD PTR manager$13[rbp]
	call	??0expression@@QEAA@XZ			; expression::expression
	npad	1

; 78   : 
; 79   : 		char prevChar = ' ';

	mov	BYTE PTR prevChar$14[rbp], 32		; 00000020H

; 80   : 
; 81   : 		manager.openBraket();

	lea	rcx, QWORD PTR manager$13[rbp]
	call	?openBraket@expression@@QEAAXXZ		; expression::openBraket
$LN5@main:

; 82   : 	   
; 83   : 		while (*eqptr != '\0')

	mov	rax, QWORD PTR eqptr$11[rbp]
	movsx	eax, BYTE PTR [rax]
	test	eax, eax
	je	$LN6@main

; 84   : 		{
; 85   : 			if (IsSupportedVariableName(*eqptr))

	mov	rax, QWORD PTR eqptr$11[rbp]
	movzx	ecx, BYTE PTR [rax]
	call	?IsSupportedVariableName@@YA_ND@Z	; IsSupportedVariableName
	movzx	eax, al
	test	eax, eax
	je	$LN9@main

; 86   : 			{
; 87   : 				if (tok.length() > 0)

	lea	rcx, QWORD PTR tok$12[rbp]
	call	?length@token@@QEBA_KXZ			; token::length
	test	rax, rax
	jbe	SHORT $LN11@main

; 88   : 					throw new std::exception("unexpected variable name");

	mov	ecx, 24
	call	??2@YAPEAX_K@Z				; operator new
	mov	QWORD PTR $T19[rbp], rax
	cmp	QWORD PTR $T19[rbp], 0
	je	SHORT $LN27@main
	lea	rdx, OFFSET FLAT:??_C@_0BJ@GBABLGIM@unexpected?5variable?5name@
	mov	rcx, QWORD PTR $T19[rbp]
	call	??0exception@std@@QEAA@QEBD@Z		; std::exception::exception
	mov	QWORD PTR tv132[rbp], rax
	jmp	SHORT $LN28@main
$LN27@main:
	mov	QWORD PTR tv132[rbp], 0
$LN28@main:
	mov	rax, QWORD PTR tv132[rbp]
	mov	QWORD PTR $T18[rbp], rax
	lea	rdx, OFFSET FLAT:_TI2PEAVexception@std@@
	lea	rcx, QWORD PTR $T18[rbp]
	call	_CxxThrowException
$LN11@main:

; 89   : 
; 90   : 				setPrev(*eqptr, &prevChar);

	lea	rdx, QWORD PTR prevChar$14[rbp]
	mov	rax, QWORD PTR eqptr$11[rbp]
	movzx	ecx, BYTE PTR [rax]
	call	?setPrev@@YA_NDPEAD@Z			; setPrev

; 91   : 				std::string toklocal(1, *eqptr);

	mov	rax, QWORD PTR eqptr$11[rbp]
	movzx	r8d, BYTE PTR [rax]
	mov	edx, 1
	lea	rcx, QWORD PTR toklocal$15[rbp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 92   : 				manager.addNumber(toklocal);

	lea	rax, QWORD PTR $T20[rbp]
	mov	QWORD PTR $T21[rbp], rax
	lea	rdx, QWORD PTR toklocal$15[rbp]
	mov	rcx, QWORD PTR $T21[rbp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	QWORD PTR tv402[rbp], rax
	mov	rdx, QWORD PTR tv402[rbp]
	lea	rcx, QWORD PTR manager$13[rbp]
	call	?addNumber@expression@@QEAAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; expression::addNumber

; 93   : 				eqptr++;

	mov	rax, QWORD PTR eqptr$11[rbp]
	inc	rax
	mov	QWORD PTR eqptr$11[rbp], rax

; 94   : 				continue;

	lea	rcx, QWORD PTR toklocal$15[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	jmp	$LN5@main

; 95   : 			}

	lea	rcx, QWORD PTR toklocal$15[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	jmp	$LN10@main
$LN9@main:

; 96   : 			else if (isTokenizable(*eqptr))

	mov	rax, QWORD PTR eqptr$11[rbp]
	movzx	ecx, BYTE PTR [rax]
	call	?isTokenizable@@YA_ND@Z			; isTokenizable
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN12@main

; 97   : 			{
; 98   : 				tok.add(*eqptr);

	mov	rax, QWORD PTR eqptr$11[rbp]
	movzx	edx, BYTE PTR [rax]
	lea	rcx, QWORD PTR tok$12[rbp]
	call	?add@token@@QEAAXD@Z			; token::add

; 99   : 				setPrev(*eqptr, &prevChar);

	lea	rdx, QWORD PTR prevChar$14[rbp]
	mov	rax, QWORD PTR eqptr$11[rbp]
	movzx	ecx, BYTE PTR [rax]
	call	?setPrev@@YA_NDPEAD@Z			; setPrev

; 100  : 				eqptr++;

	mov	rax, QWORD PTR eqptr$11[rbp]
	inc	rax
	mov	QWORD PTR eqptr$11[rbp], rax

; 101  : 				continue;

	jmp	$LN5@main

; 102  : 			}

	jmp	$LN10@main
$LN12@main:

; 103  : 			else if ((IsOperator(prevChar) || prevChar == '(') && *eqptr == '-')

	movzx	ecx, BYTE PTR prevChar$14[rbp]
	call	?IsOperator@@YA_ND@Z			; IsOperator
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN16@main
	movsx	eax, BYTE PTR prevChar$14[rbp]
	cmp	eax, 40					; 00000028H
	jne	SHORT $LN14@main
$LN16@main:
	mov	rax, QWORD PTR eqptr$11[rbp]
	movsx	eax, BYTE PTR [rax]
	cmp	eax, 45					; 0000002dH
	jne	SHORT $LN14@main

; 104  : 			{
; 105  : 				tok.add(*eqptr);

	mov	rax, QWORD PTR eqptr$11[rbp]
	movzx	edx, BYTE PTR [rax]
	lea	rcx, QWORD PTR tok$12[rbp]
	call	?add@token@@QEAAXD@Z			; token::add

; 106  : 				prevChar = ' ';

	mov	BYTE PTR prevChar$14[rbp], 32		; 00000020H

; 107  : 				eqptr++;

	mov	rax, QWORD PTR eqptr$11[rbp]
	inc	rax
	mov	QWORD PTR eqptr$11[rbp], rax

; 108  : 				continue;

	jmp	$LN5@main

; 109  : 			}

	jmp	SHORT $LN10@main
$LN14@main:

; 110  : 			else if (tok.length() > 0)

	lea	rcx, QWORD PTR tok$12[rbp]
	call	?length@token@@QEBA_KXZ			; token::length
	test	rax, rax
	jbe	SHORT $LN10@main

; 111  : 			{
; 112  : 				manager.addNumber(tok.readString());

	lea	rax, QWORD PTR $T22[rbp]
	mov	QWORD PTR $T23[rbp], rax
	mov	rdx, QWORD PTR $T23[rbp]
	lea	rcx, QWORD PTR tok$12[rbp]
	call	?readString@token@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; token::readString
	mov	QWORD PTR tv405[rbp], rax
	mov	rdx, QWORD PTR tv405[rbp]
	lea	rcx, QWORD PTR manager$13[rbp]
	call	?addNumber@expression@@QEAAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; expression::addNumber

; 113  : 				tok.reset();

	lea	rcx, QWORD PTR tok$12[rbp]
	call	?reset@token@@QEAAXXZ			; token::reset
$LN10@main:

; 114  : 			}
; 115  : 
; 116  : 			switch (*eqptr)

	mov	rax, QWORD PTR eqptr$11[rbp]
	movsx	eax, BYTE PTR [rax]
	mov	DWORD PTR tv182[rbp], eax
	mov	eax, DWORD PTR tv182[rbp]
	sub	eax, 32					; 00000020H
	mov	DWORD PTR tv182[rbp], eax
	cmp	DWORD PTR tv182[rbp], 62		; 0000003eH
	ja	$LN7@main
	movsxd	rax, DWORD PTR tv182[rbp]
	lea	rcx, OFFSET FLAT:__ImageBase
	movzx	eax, BYTE PTR $LN49@main[rcx+rax]
	mov	eax, DWORD PTR $LN50@main[rcx+rax*4]
	add	rax, rcx
	jmp	rax
$LN18@main:

; 117  : 			{
; 118  : 				case ' ':
; 119  : 					eqptr++;

	mov	rax, QWORD PTR eqptr$11[rbp]
	inc	rax
	mov	QWORD PTR eqptr$11[rbp], rax

; 120  : 					continue;

	jmp	$LN5@main
$LN19@main:

; 121  : 				case '(':
; 122  : 					manager.openBraket();

	lea	rcx, QWORD PTR manager$13[rbp]
	call	?openBraket@expression@@QEAAXXZ		; expression::openBraket

; 123  : 					break;	

	jmp	$LN7@main
$LN20@main:

; 124  : 				case ')':
; 125  : 					manager.closeBraket();

	lea	rcx, QWORD PTR manager$13[rbp]
	call	?closeBraket@expression@@QEAAXXZ	; expression::closeBraket

; 126  : 					break;			

	jmp	$LN7@main
$LN21@main:

; 127  : 				case '*':
; 128  : 					manager.addOperator(std::string(1, *eqptr));

	lea	rax, QWORD PTR $T24[rbp]
	mov	QWORD PTR $T25[rbp], rax
	mov	rax, QWORD PTR eqptr$11[rbp]
	movzx	r8d, BYTE PTR [rax]
	mov	edx, 1
	mov	rcx, QWORD PTR $T25[rbp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	QWORD PTR tv407[rbp], rax
	mov	rdx, QWORD PTR tv407[rbp]
	lea	rcx, QWORD PTR manager$13[rbp]
	call	?addOperator@expression@@QEAAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; expression::addOperator

; 129  : 					break;

	jmp	$LN7@main
$LN22@main:

; 130  : 				case '/':
; 131  : 					manager.addOperator(std::string(1, *eqptr));

	lea	rax, QWORD PTR $T26[rbp]
	mov	QWORD PTR $T27[rbp], rax
	mov	rax, QWORD PTR eqptr$11[rbp]
	movzx	r8d, BYTE PTR [rax]
	mov	edx, 1
	mov	rcx, QWORD PTR $T27[rbp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	QWORD PTR tv409[rbp], rax
	mov	rdx, QWORD PTR tv409[rbp]
	lea	rcx, QWORD PTR manager$13[rbp]
	call	?addOperator@expression@@QEAAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; expression::addOperator

; 132  : 					break;

	jmp	$LN7@main
$LN23@main:

; 133  : 				case '+':
; 134  : 					manager.addOperator(std::string(1, *eqptr));

	lea	rax, QWORD PTR $T28[rbp]
	mov	QWORD PTR $T29[rbp], rax
	mov	rax, QWORD PTR eqptr$11[rbp]
	movzx	r8d, BYTE PTR [rax]
	mov	edx, 1
	mov	rcx, QWORD PTR $T29[rbp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	QWORD PTR tv411[rbp], rax
	mov	rdx, QWORD PTR tv411[rbp]
	lea	rcx, QWORD PTR manager$13[rbp]
	call	?addOperator@expression@@QEAAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; expression::addOperator

; 135  : 					break;

	jmp	$LN7@main
$LN24@main:

; 136  : 				case '-':
; 137  : 					manager.addOperator(std::string(1, *eqptr));

	lea	rax, QWORD PTR $T30[rbp]
	mov	QWORD PTR $T31[rbp], rax
	mov	rax, QWORD PTR eqptr$11[rbp]
	movzx	r8d, BYTE PTR [rax]
	mov	edx, 1
	mov	rcx, QWORD PTR $T31[rbp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	QWORD PTR tv413[rbp], rax
	mov	rdx, QWORD PTR tv413[rbp]
	lea	rcx, QWORD PTR manager$13[rbp]
	call	?addOperator@expression@@QEAAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; expression::addOperator

; 138  : 					break;

	jmp	SHORT $LN7@main
$LN25@main:

; 139  : 				case '^':
; 140  : 					manager.addOperator(std::string(1, *eqptr));

	lea	rax, QWORD PTR $T32[rbp]
	mov	QWORD PTR $T33[rbp], rax
	mov	rax, QWORD PTR eqptr$11[rbp]
	movzx	r8d, BYTE PTR [rax]
	mov	edx, 1
	mov	rcx, QWORD PTR $T33[rbp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	QWORD PTR tv415[rbp], rax
	mov	rdx, QWORD PTR tv415[rbp]
	lea	rcx, QWORD PTR manager$13[rbp]
	call	?addOperator@expression@@QEAAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; expression::addOperator
$LN7@main:

; 141  : 					break;
; 142  : 			}
; 143  : 
; 144  : 			std::cout << *eqptr;

	mov	rax, QWORD PTR eqptr$11[rbp]
	movzx	edx, BYTE PTR [rax]
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >

; 145  : 
; 146  : 			setPrev(*eqptr, &prevChar);

	lea	rdx, QWORD PTR prevChar$14[rbp]
	mov	rax, QWORD PTR eqptr$11[rbp]
	movzx	ecx, BYTE PTR [rax]
	call	?setPrev@@YA_NDPEAD@Z			; setPrev

; 147  : 			eqptr++;

	mov	rax, QWORD PTR eqptr$11[rbp]
	inc	rax
	mov	QWORD PTR eqptr$11[rbp], rax

; 148  : 		}

	jmp	$LN5@main
$LN6@main:

; 149  : 
; 150  : 		manager.closeBraket();

	lea	rcx, QWORD PTR manager$13[rbp]
	call	?closeBraket@expression@@QEAAXXZ	; expression::closeBraket

; 151  : 
; 152  : 		std::cout << "\nNumbers:\n";

	lea	rdx, OFFSET FLAT:??_C@_0L@GKOFOFEA@?6Numbers?3?6@
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >

; 153  : 		manager.print_numbers();

	lea	rcx, QWORD PTR manager$13[rbp]
	call	?print_numbers@expression@@QEBAXXZ	; expression::print_numbers

; 154  : 		std::cout << "\nOperators:\n";

	lea	rdx, OFFSET FLAT:??_C@_0N@ELNFFMMN@?6Operators?3?6@
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >

; 155  : 		manager.print_operators();

	lea	rcx, QWORD PTR manager$13[rbp]
	call	?print_operators@expression@@QEBAXXZ	; expression::print_operators

; 156  : 		std::cout << "\nBrackets\n";

	lea	rdx, OFFSET FLAT:??_C@_0L@OPDGNCOI@?6Brackets?6@
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >

; 157  : 		manager.print_brakets();

	lea	rcx, QWORD PTR manager$13[rbp]
	call	?print_brakets@expression@@QEBAXXZ	; expression::print_brakets

; 158  : 
; 159  : 		tree_builder builder(&manager);

	mov	edx, 64					; 00000040H
	lea	rcx, QWORD PTR builder$16[rbp]
	call	?__autoclassinit2@tree_builder@@QEAAX_K@Z
	lea	rdx, QWORD PTR manager$13[rbp]
	lea	rcx, QWORD PTR builder$16[rbp]
	call	??0tree_builder@@QEAA@PEAVexpression@@@Z ; tree_builder::tree_builder
	npad	1

; 160  : 		builder.build();

	lea	rcx, QWORD PTR builder$16[rbp]
	call	?build@tree_builder@@QEAAXXZ		; tree_builder::build

; 161  : 
; 162  : 		std::cout << "\nTree:\n";

	lea	rdx, OFFSET FLAT:??_C@_07BEFECKPA@?6Tree?3?6@
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >

; 163  : 		builder.print_tree();

	lea	rcx, QWORD PTR builder$16[rbp]
	call	?print_tree@tree_builder@@QEAAXXZ	; tree_builder::print_tree

; 164  : 		double result = builder.calc(5, 4);

	xorps	xmm3, xmm3
	movsd	xmm2, QWORD PTR __real@4010000000000000
	movsd	xmm1, QWORD PTR __real@4014000000000000
	lea	rcx, QWORD PTR builder$16[rbp]
	call	?calc@tree_builder@@QEAANNNN@Z		; tree_builder::calc
	movsd	QWORD PTR result$17[rbp], xmm0

; 165  : 
; 166  : 		std::cout << "\nTree to string\n" << std::endl;

	lea	rdx, OFFSET FLAT:??_C@_0BB@NNEFPPLJ@?6Tree?5to?5string?6@
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z

; 167  : 		std::cout << builder.to_string() << std::endl;

	lea	rdx, QWORD PTR $T34[rbp]
	lea	rcx, QWORD PTR builder$16[rbp]
	call	?to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; tree_builder::to_string
	mov	QWORD PTR tv306[rbp], rax
	mov	rax, QWORD PTR tv306[rbp]
	mov	QWORD PTR tv418[rbp], rax
	mov	rdx, QWORD PTR tv418[rbp]
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z
	npad	1
	lea	rcx, QWORD PTR $T34[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 168  : 		std::cout << "\nResults:\n";

	lea	rdx, OFFSET FLAT:??_C@_0L@JILAODGG@?6Results?3?6@
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >

; 169  : 		std::cout << std::fixed << result << std::endl;

	lea	rdx, OFFSET FLAT:?fixed@std@@YAAEAVios_base@1@AEAV21@@Z ; std::fixed
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
	movsd	xmm1, QWORD PTR result$17[rbp]
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@N@Z
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z
	npad	1

; 170  : 	}

	lea	rcx, QWORD PTR builder$16[rbp]
	call	??1tree_builder@@QEAA@XZ
	npad	1
	lea	rcx, QWORD PTR manager$13[rbp]
	call	??1expression@@QEAA@XZ
	npad	1
	lea	rcx, QWORD PTR tok$12[rbp]
	call	??1token@@QEAA@XZ			; token::~token
	jmp	$LN2@main
$LN3@main:

; 171  : 
; 172  : 	std::cout << "########################################################\n";

	lea	rdx, OFFSET FLAT:??_C@_0DK@DDLKBKO@?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD?$CD@
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >

; 173  : 
; 174  : 	std::cout << "Generating random tree\n";

	lea	rdx, OFFSET FLAT:??_C@_0BI@MLCIECCN@Generating?5random?5tree?6@
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >

; 175  : 
; 176  : 	tree_builder builder2;

	mov	edx, 64					; 00000040H
	lea	rcx, QWORD PTR builder2$[rbp]
	call	?__autoclassinit2@tree_builder@@QEAAX_K@Z
	xor	edx, edx
	lea	rcx, QWORD PTR builder2$[rbp]
	call	??0tree_builder@@QEAA@PEAVexpression@@@Z ; tree_builder::tree_builder
	npad	1

; 177  : 	builder2.generate_random_tree(7, "*/+-");

	lea	rax, QWORD PTR $T35[rbp]
	mov	QWORD PTR $T36[rbp], rax
	lea	rax, QWORD PTR $T37[rbp]
	mov	QWORD PTR $T38[rbp], rax
	lea	rdx, OFFSET FLAT:??_C@_00CNPNBAHC@@
	mov	rcx, QWORD PTR $T36[rbp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	QWORD PTR tv350[rbp], rax
	mov	rax, QWORD PTR tv350[rbp]
	mov	QWORD PTR tv421[rbp], rax
	lea	rdx, OFFSET FLAT:??_C@_04FOMPHDMB@?$CK?1?$CL?9@
	mov	rcx, QWORD PTR $T38[rbp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	QWORD PTR tv423[rbp], rax
	mov	r9, QWORD PTR tv421[rbp]
	mov	r8, QWORD PTR tv423[rbp]
	mov	edx, 7
	lea	rcx, QWORD PTR builder2$[rbp]
	call	?generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ; tree_builder::generate_random_tree

; 178  : 	std::cout << builder2.random_to_string() << std::endl;

	lea	rdx, QWORD PTR $T39[rbp]
	lea	rcx, QWORD PTR builder2$[rbp]
	call	?random_to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; tree_builder::random_to_string
	mov	QWORD PTR tv138[rbp], rax
	mov	rax, QWORD PTR tv138[rbp]
	mov	QWORD PTR tv425[rbp], rax
	mov	rdx, QWORD PTR tv425[rbp]
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z
	npad	1
	lea	rcx, QWORD PTR $T39[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 179  : 	double r_result = builder2.calc(2);

	xorps	xmm3, xmm3
	xorps	xmm2, xmm2
	movsd	xmm1, QWORD PTR __real@4000000000000000
	lea	rcx, QWORD PTR builder2$[rbp]
	call	?calc@tree_builder@@QEAANNNN@Z		; tree_builder::calc
	movsd	QWORD PTR r_result$[rbp], xmm0

; 180  : 
; 181  : 	std::cout << "\nrandom result: " << r_result << std::endl;

	lea	rdx, OFFSET FLAT:??_C@_0BB@GEDOGCLG@?6random?5result?3?5@
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	movsd	xmm1, QWORD PTR r_result$[rbp]
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@N@Z
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z

; 182  : 
; 183  : 	return 0;

	mov	DWORD PTR $T40[rbp], 0
	lea	rcx, QWORD PTR builder2$[rbp]
	call	??1tree_builder@@QEAA@XZ
	mov	eax, DWORD PTR $T40[rbp]

; 184  : 
; 185  : }

	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:main$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+2568]
	pop	rdi
	pop	rbp
	ret	0
$LN51@main:
	npad	2
$LN50@main:
	DD	$LN18@main
	DD	$LN19@main
	DD	$LN20@main
	DD	$LN21@main
	DD	$LN23@main
	DD	$LN24@main
	DD	$LN22@main
	DD	$LN25@main
	DD	$LN7@main
$LN49@main:
	DB	0
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	1
	DB	2
	DB	3
	DB	4
	DB	8
	DB	5
	DB	8
	DB	6
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	7
main	ENDP
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
supportedOps$ = 4
eq$ = 40
ii$10 = 68
eqptr$11 = 104
tok$12 = 136
manager$13 = 192
prevChar$14 = 324
toklocal$15 = 360
builder$16 = 432
result$17 = 520
builder2$ = 560
r_result$ = 648
$T18 = 1448
$T19 = 1480
$T20 = 1512
$T21 = 1576
$T22 = 1608
$T23 = 1672
$T24 = 1704
$T25 = 1768
$T26 = 1800
$T27 = 1864
$T28 = 1896
$T29 = 1960
$T30 = 1992
$T31 = 2056
$T32 = 2088
$T33 = 2152
$T34 = 2184
$T35 = 2248
$T36 = 2312
$T37 = 2344
$T38 = 2408
$T39 = 2440
$T40 = 2500
tv182 = 2516
tv415 = 2520
tv413 = 2520
tv411 = 2520
tv409 = 2520
tv407 = 2520
tv405 = 2520
tv402 = 2520
tv350 = 2520
tv306 = 2520
tv138 = 2520
tv132 = 2520
tv425 = 2528
tv421 = 2528
tv418 = 2528
tv423 = 2536
__$ArrayPad$ = 2544
main$dtor$0 PROC
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR tok$12[rbp]
	call	??1token@@QEAA@XZ			; token::~token
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
main$dtor$0 ENDP
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
supportedOps$ = 4
eq$ = 40
ii$10 = 68
eqptr$11 = 104
tok$12 = 136
manager$13 = 192
prevChar$14 = 324
toklocal$15 = 360
builder$16 = 432
result$17 = 520
builder2$ = 560
r_result$ = 648
$T18 = 1448
$T19 = 1480
$T20 = 1512
$T21 = 1576
$T22 = 1608
$T23 = 1672
$T24 = 1704
$T25 = 1768
$T26 = 1800
$T27 = 1864
$T28 = 1896
$T29 = 1960
$T30 = 1992
$T31 = 2056
$T32 = 2088
$T33 = 2152
$T34 = 2184
$T35 = 2248
$T36 = 2312
$T37 = 2344
$T38 = 2408
$T39 = 2440
$T40 = 2500
tv182 = 2516
tv415 = 2520
tv413 = 2520
tv411 = 2520
tv409 = 2520
tv407 = 2520
tv405 = 2520
tv402 = 2520
tv350 = 2520
tv306 = 2520
tv138 = 2520
tv132 = 2520
tv425 = 2528
tv421 = 2528
tv418 = 2528
tv423 = 2536
__$ArrayPad$ = 2544
main$dtor$1 PROC
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR manager$13[rbp]
	call	??1expression@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
main$dtor$1 ENDP
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
supportedOps$ = 4
eq$ = 40
ii$10 = 68
eqptr$11 = 104
tok$12 = 136
manager$13 = 192
prevChar$14 = 324
toklocal$15 = 360
builder$16 = 432
result$17 = 520
builder2$ = 560
r_result$ = 648
$T18 = 1448
$T19 = 1480
$T20 = 1512
$T21 = 1576
$T22 = 1608
$T23 = 1672
$T24 = 1704
$T25 = 1768
$T26 = 1800
$T27 = 1864
$T28 = 1896
$T29 = 1960
$T30 = 1992
$T31 = 2056
$T32 = 2088
$T33 = 2152
$T34 = 2184
$T35 = 2248
$T36 = 2312
$T37 = 2344
$T38 = 2408
$T39 = 2440
$T40 = 2500
tv182 = 2516
tv415 = 2520
tv413 = 2520
tv411 = 2520
tv409 = 2520
tv407 = 2520
tv405 = 2520
tv402 = 2520
tv350 = 2520
tv306 = 2520
tv138 = 2520
tv132 = 2520
tv425 = 2528
tv421 = 2528
tv418 = 2528
tv423 = 2536
__$ArrayPad$ = 2544
main$dtor$2 PROC
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR toklocal$15[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
main$dtor$2 ENDP
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
supportedOps$ = 4
eq$ = 40
ii$10 = 68
eqptr$11 = 104
tok$12 = 136
manager$13 = 192
prevChar$14 = 324
toklocal$15 = 360
builder$16 = 432
result$17 = 520
builder2$ = 560
r_result$ = 648
$T18 = 1448
$T19 = 1480
$T20 = 1512
$T21 = 1576
$T22 = 1608
$T23 = 1672
$T24 = 1704
$T25 = 1768
$T26 = 1800
$T27 = 1864
$T28 = 1896
$T29 = 1960
$T30 = 1992
$T31 = 2056
$T32 = 2088
$T33 = 2152
$T34 = 2184
$T35 = 2248
$T36 = 2312
$T37 = 2344
$T38 = 2408
$T39 = 2440
$T40 = 2500
tv182 = 2516
tv415 = 2520
tv413 = 2520
tv411 = 2520
tv409 = 2520
tv407 = 2520
tv405 = 2520
tv402 = 2520
tv350 = 2520
tv306 = 2520
tv138 = 2520
tv132 = 2520
tv425 = 2528
tv421 = 2528
tv418 = 2528
tv423 = 2536
__$ArrayPad$ = 2544
main$dtor$10 PROC
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR builder$16[rbp]
	call	??1tree_builder@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
main$dtor$10 ENDP
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
supportedOps$ = 4
eq$ = 40
ii$10 = 68
eqptr$11 = 104
tok$12 = 136
manager$13 = 192
prevChar$14 = 324
toklocal$15 = 360
builder$16 = 432
result$17 = 520
builder2$ = 560
r_result$ = 648
$T18 = 1448
$T19 = 1480
$T20 = 1512
$T21 = 1576
$T22 = 1608
$T23 = 1672
$T24 = 1704
$T25 = 1768
$T26 = 1800
$T27 = 1864
$T28 = 1896
$T29 = 1960
$T30 = 1992
$T31 = 2056
$T32 = 2088
$T33 = 2152
$T34 = 2184
$T35 = 2248
$T36 = 2312
$T37 = 2344
$T38 = 2408
$T39 = 2440
$T40 = 2500
tv182 = 2516
tv415 = 2520
tv413 = 2520
tv411 = 2520
tv409 = 2520
tv407 = 2520
tv405 = 2520
tv402 = 2520
tv350 = 2520
tv306 = 2520
tv138 = 2520
tv132 = 2520
tv425 = 2528
tv421 = 2528
tv418 = 2528
tv423 = 2536
__$ArrayPad$ = 2544
main$dtor$11 PROC
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR $T34[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
main$dtor$11 ENDP
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
supportedOps$ = 4
eq$ = 40
ii$10 = 68
eqptr$11 = 104
tok$12 = 136
manager$13 = 192
prevChar$14 = 324
toklocal$15 = 360
builder$16 = 432
result$17 = 520
builder2$ = 560
r_result$ = 648
$T18 = 1448
$T19 = 1480
$T20 = 1512
$T21 = 1576
$T22 = 1608
$T23 = 1672
$T24 = 1704
$T25 = 1768
$T26 = 1800
$T27 = 1864
$T28 = 1896
$T29 = 1960
$T30 = 1992
$T31 = 2056
$T32 = 2088
$T33 = 2152
$T34 = 2184
$T35 = 2248
$T36 = 2312
$T37 = 2344
$T38 = 2408
$T39 = 2440
$T40 = 2500
tv182 = 2516
tv415 = 2520
tv413 = 2520
tv411 = 2520
tv409 = 2520
tv407 = 2520
tv405 = 2520
tv402 = 2520
tv350 = 2520
tv306 = 2520
tv138 = 2520
tv132 = 2520
tv425 = 2528
tv421 = 2528
tv418 = 2528
tv423 = 2536
__$ArrayPad$ = 2544
main$dtor$12 PROC
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR builder2$[rbp]
	call	??1tree_builder@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
main$dtor$12 ENDP
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
supportedOps$ = 4
eq$ = 40
ii$10 = 68
eqptr$11 = 104
tok$12 = 136
manager$13 = 192
prevChar$14 = 324
toklocal$15 = 360
builder$16 = 432
result$17 = 520
builder2$ = 560
r_result$ = 648
$T18 = 1448
$T19 = 1480
$T20 = 1512
$T21 = 1576
$T22 = 1608
$T23 = 1672
$T24 = 1704
$T25 = 1768
$T26 = 1800
$T27 = 1864
$T28 = 1896
$T29 = 1960
$T30 = 1992
$T31 = 2056
$T32 = 2088
$T33 = 2152
$T34 = 2184
$T35 = 2248
$T36 = 2312
$T37 = 2344
$T38 = 2408
$T39 = 2440
$T40 = 2500
tv182 = 2516
tv415 = 2520
tv413 = 2520
tv411 = 2520
tv409 = 2520
tv407 = 2520
tv405 = 2520
tv402 = 2520
tv350 = 2520
tv306 = 2520
tv138 = 2520
tv132 = 2520
tv425 = 2528
tv421 = 2528
tv418 = 2528
tv423 = 2536
__$ArrayPad$ = 2544
main$dtor$13 PROC
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR $T36[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
main$dtor$13 ENDP
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
supportedOps$ = 4
eq$ = 40
ii$10 = 68
eqptr$11 = 104
tok$12 = 136
manager$13 = 192
prevChar$14 = 324
toklocal$15 = 360
builder$16 = 432
result$17 = 520
builder2$ = 560
r_result$ = 648
$T18 = 1448
$T19 = 1480
$T20 = 1512
$T21 = 1576
$T22 = 1608
$T23 = 1672
$T24 = 1704
$T25 = 1768
$T26 = 1800
$T27 = 1864
$T28 = 1896
$T29 = 1960
$T30 = 1992
$T31 = 2056
$T32 = 2088
$T33 = 2152
$T34 = 2184
$T35 = 2248
$T36 = 2312
$T37 = 2344
$T38 = 2408
$T39 = 2440
$T40 = 2500
tv182 = 2516
tv415 = 2520
tv413 = 2520
tv411 = 2520
tv409 = 2520
tv407 = 2520
tv405 = 2520
tv402 = 2520
tv350 = 2520
tv306 = 2520
tv138 = 2520
tv132 = 2520
tv425 = 2528
tv421 = 2528
tv418 = 2528
tv423 = 2536
__$ArrayPad$ = 2544
main$dtor$15 PROC
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR $T39[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
main$dtor$15 ENDP
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
supportedOps$ = 4
eq$ = 40
ii$10 = 68
eqptr$11 = 104
tok$12 = 136
manager$13 = 192
prevChar$14 = 324
toklocal$15 = 360
builder$16 = 432
result$17 = 520
builder2$ = 560
r_result$ = 648
$T18 = 1448
$T19 = 1480
$T20 = 1512
$T21 = 1576
$T22 = 1608
$T23 = 1672
$T24 = 1704
$T25 = 1768
$T26 = 1800
$T27 = 1864
$T28 = 1896
$T29 = 1960
$T30 = 1992
$T31 = 2056
$T32 = 2088
$T33 = 2152
$T34 = 2184
$T35 = 2248
$T36 = 2312
$T37 = 2344
$T38 = 2408
$T39 = 2440
$T40 = 2500
tv182 = 2516
tv415 = 2520
tv413 = 2520
tv411 = 2520
tv409 = 2520
tv407 = 2520
tv405 = 2520
tv402 = 2520
tv350 = 2520
tv306 = 2520
tv138 = 2520
tv132 = 2520
tv425 = 2528
tv421 = 2528
tv418 = 2528
tv423 = 2536
__$ArrayPad$ = 2544
main$dtor$0 PROC
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR tok$12[rbp]
	call	??1token@@QEAA@XZ			; token::~token
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
main$dtor$0 ENDP
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
supportedOps$ = 4
eq$ = 40
ii$10 = 68
eqptr$11 = 104
tok$12 = 136
manager$13 = 192
prevChar$14 = 324
toklocal$15 = 360
builder$16 = 432
result$17 = 520
builder2$ = 560
r_result$ = 648
$T18 = 1448
$T19 = 1480
$T20 = 1512
$T21 = 1576
$T22 = 1608
$T23 = 1672
$T24 = 1704
$T25 = 1768
$T26 = 1800
$T27 = 1864
$T28 = 1896
$T29 = 1960
$T30 = 1992
$T31 = 2056
$T32 = 2088
$T33 = 2152
$T34 = 2184
$T35 = 2248
$T36 = 2312
$T37 = 2344
$T38 = 2408
$T39 = 2440
$T40 = 2500
tv182 = 2516
tv415 = 2520
tv413 = 2520
tv411 = 2520
tv409 = 2520
tv407 = 2520
tv405 = 2520
tv402 = 2520
tv350 = 2520
tv306 = 2520
tv138 = 2520
tv132 = 2520
tv425 = 2528
tv421 = 2528
tv418 = 2528
tv423 = 2536
__$ArrayPad$ = 2544
main$dtor$1 PROC
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR manager$13[rbp]
	call	??1expression@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
main$dtor$1 ENDP
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
supportedOps$ = 4
eq$ = 40
ii$10 = 68
eqptr$11 = 104
tok$12 = 136
manager$13 = 192
prevChar$14 = 324
toklocal$15 = 360
builder$16 = 432
result$17 = 520
builder2$ = 560
r_result$ = 648
$T18 = 1448
$T19 = 1480
$T20 = 1512
$T21 = 1576
$T22 = 1608
$T23 = 1672
$T24 = 1704
$T25 = 1768
$T26 = 1800
$T27 = 1864
$T28 = 1896
$T29 = 1960
$T30 = 1992
$T31 = 2056
$T32 = 2088
$T33 = 2152
$T34 = 2184
$T35 = 2248
$T36 = 2312
$T37 = 2344
$T38 = 2408
$T39 = 2440
$T40 = 2500
tv182 = 2516
tv415 = 2520
tv413 = 2520
tv411 = 2520
tv409 = 2520
tv407 = 2520
tv405 = 2520
tv402 = 2520
tv350 = 2520
tv306 = 2520
tv138 = 2520
tv132 = 2520
tv425 = 2528
tv421 = 2528
tv418 = 2528
tv423 = 2536
__$ArrayPad$ = 2544
main$dtor$2 PROC
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR toklocal$15[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
main$dtor$2 ENDP
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
supportedOps$ = 4
eq$ = 40
ii$10 = 68
eqptr$11 = 104
tok$12 = 136
manager$13 = 192
prevChar$14 = 324
toklocal$15 = 360
builder$16 = 432
result$17 = 520
builder2$ = 560
r_result$ = 648
$T18 = 1448
$T19 = 1480
$T20 = 1512
$T21 = 1576
$T22 = 1608
$T23 = 1672
$T24 = 1704
$T25 = 1768
$T26 = 1800
$T27 = 1864
$T28 = 1896
$T29 = 1960
$T30 = 1992
$T31 = 2056
$T32 = 2088
$T33 = 2152
$T34 = 2184
$T35 = 2248
$T36 = 2312
$T37 = 2344
$T38 = 2408
$T39 = 2440
$T40 = 2500
tv182 = 2516
tv415 = 2520
tv413 = 2520
tv411 = 2520
tv409 = 2520
tv407 = 2520
tv405 = 2520
tv402 = 2520
tv350 = 2520
tv306 = 2520
tv138 = 2520
tv132 = 2520
tv425 = 2528
tv421 = 2528
tv418 = 2528
tv423 = 2536
__$ArrayPad$ = 2544
main$dtor$10 PROC
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR builder$16[rbp]
	call	??1tree_builder@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
main$dtor$10 ENDP
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
supportedOps$ = 4
eq$ = 40
ii$10 = 68
eqptr$11 = 104
tok$12 = 136
manager$13 = 192
prevChar$14 = 324
toklocal$15 = 360
builder$16 = 432
result$17 = 520
builder2$ = 560
r_result$ = 648
$T18 = 1448
$T19 = 1480
$T20 = 1512
$T21 = 1576
$T22 = 1608
$T23 = 1672
$T24 = 1704
$T25 = 1768
$T26 = 1800
$T27 = 1864
$T28 = 1896
$T29 = 1960
$T30 = 1992
$T31 = 2056
$T32 = 2088
$T33 = 2152
$T34 = 2184
$T35 = 2248
$T36 = 2312
$T37 = 2344
$T38 = 2408
$T39 = 2440
$T40 = 2500
tv182 = 2516
tv415 = 2520
tv413 = 2520
tv411 = 2520
tv409 = 2520
tv407 = 2520
tv405 = 2520
tv402 = 2520
tv350 = 2520
tv306 = 2520
tv138 = 2520
tv132 = 2520
tv425 = 2528
tv421 = 2528
tv418 = 2528
tv423 = 2536
__$ArrayPad$ = 2544
main$dtor$11 PROC
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR $T34[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
main$dtor$11 ENDP
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
supportedOps$ = 4
eq$ = 40
ii$10 = 68
eqptr$11 = 104
tok$12 = 136
manager$13 = 192
prevChar$14 = 324
toklocal$15 = 360
builder$16 = 432
result$17 = 520
builder2$ = 560
r_result$ = 648
$T18 = 1448
$T19 = 1480
$T20 = 1512
$T21 = 1576
$T22 = 1608
$T23 = 1672
$T24 = 1704
$T25 = 1768
$T26 = 1800
$T27 = 1864
$T28 = 1896
$T29 = 1960
$T30 = 1992
$T31 = 2056
$T32 = 2088
$T33 = 2152
$T34 = 2184
$T35 = 2248
$T36 = 2312
$T37 = 2344
$T38 = 2408
$T39 = 2440
$T40 = 2500
tv182 = 2516
tv415 = 2520
tv413 = 2520
tv411 = 2520
tv409 = 2520
tv407 = 2520
tv405 = 2520
tv402 = 2520
tv350 = 2520
tv306 = 2520
tv138 = 2520
tv132 = 2520
tv425 = 2528
tv421 = 2528
tv418 = 2528
tv423 = 2536
__$ArrayPad$ = 2544
main$dtor$12 PROC
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR builder2$[rbp]
	call	??1tree_builder@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
main$dtor$12 ENDP
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
supportedOps$ = 4
eq$ = 40
ii$10 = 68
eqptr$11 = 104
tok$12 = 136
manager$13 = 192
prevChar$14 = 324
toklocal$15 = 360
builder$16 = 432
result$17 = 520
builder2$ = 560
r_result$ = 648
$T18 = 1448
$T19 = 1480
$T20 = 1512
$T21 = 1576
$T22 = 1608
$T23 = 1672
$T24 = 1704
$T25 = 1768
$T26 = 1800
$T27 = 1864
$T28 = 1896
$T29 = 1960
$T30 = 1992
$T31 = 2056
$T32 = 2088
$T33 = 2152
$T34 = 2184
$T35 = 2248
$T36 = 2312
$T37 = 2344
$T38 = 2408
$T39 = 2440
$T40 = 2500
tv182 = 2516
tv415 = 2520
tv413 = 2520
tv411 = 2520
tv409 = 2520
tv407 = 2520
tv405 = 2520
tv402 = 2520
tv350 = 2520
tv306 = 2520
tv138 = 2520
tv132 = 2520
tv425 = 2528
tv421 = 2528
tv418 = 2528
tv423 = 2536
__$ArrayPad$ = 2544
main$dtor$13 PROC
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR $T36[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
main$dtor$13 ENDP
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
supportedOps$ = 4
eq$ = 40
ii$10 = 68
eqptr$11 = 104
tok$12 = 136
manager$13 = 192
prevChar$14 = 324
toklocal$15 = 360
builder$16 = 432
result$17 = 520
builder2$ = 560
r_result$ = 648
$T18 = 1448
$T19 = 1480
$T20 = 1512
$T21 = 1576
$T22 = 1608
$T23 = 1672
$T24 = 1704
$T25 = 1768
$T26 = 1800
$T27 = 1864
$T28 = 1896
$T29 = 1960
$T30 = 1992
$T31 = 2056
$T32 = 2088
$T33 = 2152
$T34 = 2184
$T35 = 2248
$T36 = 2312
$T37 = 2344
$T38 = 2408
$T39 = 2440
$T40 = 2500
tv182 = 2516
tv415 = 2520
tv413 = 2520
tv411 = 2520
tv409 = 2520
tv407 = 2520
tv405 = 2520
tv402 = 2520
tv350 = 2520
tv306 = 2520
tv138 = 2520
tv132 = 2520
tv425 = 2528
tv421 = 2528
tv418 = 2528
tv423 = 2536
__$ArrayPad$ = 2544
main$dtor$15 PROC
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR $T39[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
main$dtor$15 ENDP
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\shtuk\Desktop\Files\EquationStringParser\EquationStringParser\EquationStringParser.cpp
;	COMDAT ?IsOperator@@YA_ND@Z
_TEXT	SEGMENT
<range>$L0$1 = 8
<begin>$L0$2 = 40
<end>$L0$3 = 72
a$4 = 100
in$ = 352
?IsOperator@@YA_ND@Z PROC				; IsOperator, COMDAT

; 48   : {

$LN7:
	mov	BYTE PTR [rsp+8], cl
	push	rbp
	push	rdi
	sub	rsp, 360				; 00000168H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__C90439AA_EquationStringParser@cpp
	call	__CheckForDebuggerJustMyCode

; 49   : 	for (auto a : supportedOps)

	lea	rax, OFFSET FLAT:?supportedOps@@3QBDB
	mov	QWORD PTR <range>$L0$1[rbp], rax
	mov	rax, QWORD PTR <range>$L0$1[rbp]
	mov	QWORD PTR <begin>$L0$2[rbp], rax
	mov	rax, QWORD PTR <range>$L0$1[rbp]
	add	rax, 5
	mov	QWORD PTR <end>$L0$3[rbp], rax
	jmp	SHORT $LN4@IsOperator
$LN2@IsOperator:
	mov	rax, QWORD PTR <begin>$L0$2[rbp]
	inc	rax
	mov	QWORD PTR <begin>$L0$2[rbp], rax
$LN4@IsOperator:
	mov	rax, QWORD PTR <end>$L0$3[rbp]
	cmp	QWORD PTR <begin>$L0$2[rbp], rax
	je	SHORT $LN3@IsOperator
	mov	rax, QWORD PTR <begin>$L0$2[rbp]
	movzx	eax, BYTE PTR [rax]
	mov	BYTE PTR a$4[rbp], al

; 50   : 	{
; 51   : 		if (in == a)

	movsx	eax, BYTE PTR in$[rbp]
	movsx	ecx, BYTE PTR a$4[rbp]
	cmp	eax, ecx
	jne	SHORT $LN5@IsOperator

; 52   : 			return true;

	mov	al, 1
	jmp	SHORT $LN1@IsOperator
$LN5@IsOperator:

; 53   : 	}

	jmp	SHORT $LN2@IsOperator
$LN3@IsOperator:

; 54   : 
; 55   : 	return false;

	xor	al, al
$LN1@IsOperator:

; 56   : }

	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
?IsOperator@@YA_ND@Z ENDP				; IsOperator
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\shtuk\Desktop\Files\EquationStringParser\EquationStringParser\EquationStringParser.cpp
;	COMDAT ?setPrev@@YA_NDPEAD@Z
_TEXT	SEGMENT
in$ = 224
prev$ = 232
?setPrev@@YA_NDPEAD@Z PROC				; setPrev, COMDAT

; 35   : {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	BYTE PTR [rsp+8], cl
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__C90439AA_EquationStringParser@cpp
	call	__CheckForDebuggerJustMyCode

; 36   : 	if (in != ' ')

	movsx	eax, BYTE PTR in$[rbp]
	cmp	eax, 32					; 00000020H
	je	SHORT $LN2@setPrev

; 37   : 	{
; 38   : 		*prev = in;

	mov	rax, QWORD PTR prev$[rbp]
	movzx	ecx, BYTE PTR in$[rbp]
	mov	BYTE PTR [rax], cl

; 39   : 		return true;

	mov	al, 1
	jmp	SHORT $LN1@setPrev

; 40   : 	}

	jmp	SHORT $LN3@setPrev
$LN2@setPrev:

; 41   : 	else
; 42   : 	{
; 43   : 		return false;

	xor	al, al
$LN3@setPrev:
$LN1@setPrev:

; 44   : 	}
; 45   : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?setPrev@@YA_NDPEAD@Z ENDP				; setPrev
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\shtuk\Desktop\Files\EquationStringParser\EquationStringParser\EquationStringParser.cpp
;	COMDAT ?IsSupportedVariableName@@YA_ND@Z
_TEXT	SEGMENT
<range>$L0$1 = 8
<begin>$L0$2 = 40
<end>$L0$3 = 72
a$4 = 100
in$ = 352
?IsSupportedVariableName@@YA_ND@Z PROC			; IsSupportedVariableName, COMDAT

; 24   : {

$LN7:
	mov	BYTE PTR [rsp+8], cl
	push	rbp
	push	rdi
	sub	rsp, 360				; 00000168H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__C90439AA_EquationStringParser@cpp
	call	__CheckForDebuggerJustMyCode

; 25   : 	for (auto a : supportedVariableNames)

	lea	rax, OFFSET FLAT:?supportedVariableNames@@3QBDB
	mov	QWORD PTR <range>$L0$1[rbp], rax
	mov	rax, QWORD PTR <range>$L0$1[rbp]
	mov	QWORD PTR <begin>$L0$2[rbp], rax
	mov	rax, QWORD PTR <range>$L0$1[rbp]
	add	rax, 3
	mov	QWORD PTR <end>$L0$3[rbp], rax
	jmp	SHORT $LN4@IsSupporte
$LN2@IsSupporte:
	mov	rax, QWORD PTR <begin>$L0$2[rbp]
	inc	rax
	mov	QWORD PTR <begin>$L0$2[rbp], rax
$LN4@IsSupporte:
	mov	rax, QWORD PTR <end>$L0$3[rbp]
	cmp	QWORD PTR <begin>$L0$2[rbp], rax
	je	SHORT $LN3@IsSupporte
	mov	rax, QWORD PTR <begin>$L0$2[rbp]
	movzx	eax, BYTE PTR [rax]
	mov	BYTE PTR a$4[rbp], al

; 26   : 	{
; 27   : 		if (in == a)

	movsx	eax, BYTE PTR in$[rbp]
	movsx	ecx, BYTE PTR a$4[rbp]
	cmp	eax, ecx
	jne	SHORT $LN5@IsSupporte

; 28   : 			return true;

	mov	al, 1
	jmp	SHORT $LN1@IsSupporte
$LN5@IsSupporte:

; 29   : 	}

	jmp	SHORT $LN2@IsSupporte
$LN3@IsSupporte:

; 30   : 
; 31   : 	return false;

	xor	al, al
$LN1@IsSupporte:

; 32   : }

	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
?IsSupportedVariableName@@YA_ND@Z ENDP			; IsSupportedVariableName
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\shtuk\Desktop\Files\EquationStringParser\EquationStringParser\EquationStringParser.cpp
;	COMDAT ?isTokenizable@@YA_ND@Z
_TEXT	SEGMENT
tv70 = 192
in$ = 240
?isTokenizable@@YA_ND@Z PROC				; isTokenizable, COMDAT

; 19   : {

$LN5:
	mov	BYTE PTR [rsp+8], cl
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__C90439AA_EquationStringParser@cpp
	call	__CheckForDebuggerJustMyCode

; 20   : 	return isdigit(in) || in == '.';

	movsx	eax, BYTE PTR in$[rbp]
	mov	ecx, eax
	call	QWORD PTR __imp_isdigit
	test	eax, eax
	jne	SHORT $LN3@isTokeniza
	movsx	eax, BYTE PTR in$[rbp]
	cmp	eax, 46					; 0000002eH
	je	SHORT $LN3@isTokeniza
	mov	DWORD PTR tv70[rbp], 0
	jmp	SHORT $LN4@isTokeniza
$LN3@isTokeniza:
	mov	DWORD PTR tv70[rbp], 1
$LN4@isTokeniza:
	movzx	eax, BYTE PTR tv70[rbp]

; 21   : }

	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?isTokenizable@@YA_ND@Z ENDP				; isTokenizable
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@0@Z
_TEXT	SEGMENT
$T1 = 196
$T2 = 228
tv64 = 248
__$ReturnUdt$ = 288
_Left$ = 296
_Right$ = 304
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@0@Z PROC ; std::operator+<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 4758 :     basic_string<_Elem, _Traits, _Alloc>&& _Left, basic_string<_Elem, _Traits, _Alloc>&& _Right) {

$LN14:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 312				; 00000138H
	lea	rbp, QWORD PTR [rsp+48]
	mov	DWORD PTR $T2[rbp], 0
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode
$LN4@operator:

; 4759 : #if _ITERATOR_DEBUG_LEVEL == 2
; 4760 :     _STL_VERIFY(_STD addressof(_Left) != _STD addressof(_Right),

	mov	rcx, QWORD PTR _Left$[rbp]
	call	??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	mov	QWORD PTR tv64[rbp], rax
	mov	rcx, QWORD PTR _Right$[rbp]
	call	??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	mov	rcx, QWORD PTR tv64[rbp]
	cmp	rcx, rax
	je	SHORT $LN7@operator
	jmp	SHORT $LN9@operator
$LN7@operator:
	lea	rax, OFFSET FLAT:??_C@_0PC@KBJGOMJG@You?5cannot?5concatenate?5the?5same@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 4764				; 0000129cH
	lea	rdx, OFFSET FLAT:??_C@_0GI@DEIBJNCC@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN11@operator
	int	3
	xor	eax, eax
$LN11@operator:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 4764				; 0000129cH
	lea	r8, OFFSET FLAT:??_C@_1NA@CHJCONEK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_1CA@DFIMIFBJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAo?$AAp?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AA?$CL@
	lea	rcx, OFFSET FLAT:??_C@_1BPK@IDOEFEOL@?$AA?$CC?$AAY?$AAo?$AAu?$AA?5?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAc?$AAo?$AAn@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@operator
$LN9@operator:
	xor	eax, eax
	test	eax, eax
	jne	$LN4@operator

; 4761 :         "You cannot concatenate the same moved string to itself. See "
; 4762 :         "N4849 [res.on.arguments]/1.3: If a function argument binds to an rvalue reference "
; 4763 :         "parameter, the implementation may assume that this parameter is a unique reference "
; 4764 :         "to this argument");
; 4765 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 4766 :     return {_String_constructor_concat_tag{}, _Left, _Right};

	mov	r9, QWORD PTR _Right$[rbp]
	mov	r8, QWORD PTR _Left$[rbp]
	movzx	edx, BYTE PTR $T1[rbp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEAV01@1@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T2[rbp]
	or	eax, 1
	mov	DWORD PTR $T2[rbp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]

; 4767 : }

	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@0@Z ENDP ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z
_TEXT	SEGMENT
$T1 = 196
__$ReturnUdt$ = 256
_Left$ = 264
_Right$ = 272
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z PROC ; std::operator+<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 4752 :     basic_string<_Elem, _Traits, _Alloc>&& _Left, const basic_string<_Elem, _Traits, _Alloc>& _Right) {

$LN5:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	DWORD PTR $T1[rbp], 0
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode

; 4753 :     return _STD move(_Left.append(_Right));

	mov	rdx, QWORD PTR _Right$[rbp]
	mov	rcx, QWORD PTR _Left$[rbp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
	mov	rcx, rax
	call	??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[rbp]
	or	eax, 1
	mov	DWORD PTR $T1[rbp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]

; 4754 : }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z ENDP ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z
_TEXT	SEGMENT
$T1 = 196
__$ReturnUdt$ = 256
_Left$ = 264
_Right$ = 272
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z PROC ; std::operator+<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 4783 :     basic_string<_Elem, _Traits, _Alloc>&& _Left, _In_z_ const _Elem* const _Right) {

$LN5:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	DWORD PTR $T1[rbp], 0
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode

; 4784 :     return _STD move(_Left.append(_Right));

	mov	rdx, QWORD PTR _Right$[rbp]
	mov	rcx, QWORD PTR _Left$[rbp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
	mov	rcx, rax
	call	??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[rbp]
	or	eax, 1
	mov	DWORD PTR $T1[rbp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]

; 4785 : }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z ENDP ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBDAEBV10@@Z
_TEXT	SEGMENT
_Left_size$ = 8
_Right_size$ = 40
$T1 = 260
$T2 = 292
$T3 = 324
tv86 = 344
__$ReturnUdt$ = 384
_Left$ = 392
_Right$ = 400
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBDAEBV10@@Z PROC ; std::operator+<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 4698 :     _In_z_ const _Elem* const _Left, const basic_string<_Elem, _Traits, _Alloc>& _Right) {

$LN6:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 424				; 000001a8H
	lea	rbp, QWORD PTR [rsp+64]
	mov	DWORD PTR $T3[rbp], 0
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode

; 4699 :     using _Size_type       = typename basic_string<_Elem, _Traits, _Alloc>::size_type;
; 4700 :     const auto _Left_size  = _Convert_size<_Size_type>(_Traits::length(_Left));

	mov	rcx, QWORD PTR _Left$[rbp]
	call	?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
	mov	rcx, rax
	call	??$_Convert_size@_K@std@@YA_K_K@Z	; std::_Convert_size<unsigned __int64>
	mov	QWORD PTR _Left_size$[rbp], rax

; 4701 :     const auto _Right_size = _Right.size();

	mov	rcx, QWORD PTR _Right$[rbp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	mov	QWORD PTR _Right_size$[rbp], rax

; 4702 :     if (_Right.max_size() - _Right_size < _Left_size) {

	mov	rcx, QWORD PTR _Right$[rbp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	sub	rax, QWORD PTR _Right_size$[rbp]
	cmp	rax, QWORD PTR _Left_size$[rbp]
	jae	SHORT $LN2@operator

; 4703 :         _Xlen_string();

	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
$LN2@operator:

; 4704 :     }
; 4705 : 
; 4706 :     return {_String_constructor_concat_tag{}, _Right, _Left, _Left_size, _Right.c_str(), _Right_size};

	movzx	eax, BYTE PTR $T1[rbp]
	mov	BYTE PTR $T2[rbp], al
	mov	rcx, QWORD PTR _Right$[rbp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	mov	QWORD PTR tv86[rbp], rax
	mov	rax, QWORD PTR _Right_size$[rbp]
	mov	QWORD PTR [rsp+48], rax
	mov	rax, QWORD PTR tv86[rbp]
	mov	QWORD PTR [rsp+40], rax
	mov	rax, QWORD PTR _Left_size$[rbp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR _Left$[rbp]
	mov	r8, QWORD PTR _Right$[rbp]
	movzx	edx, BYTE PTR $T2[rbp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T3[rbp]
	or	eax, 1
	mov	DWORD PTR $T3[rbp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]

; 4707 : }

	lea	rsp, QWORD PTR [rbp+360]
	pop	rdi
	pop	rbp
	ret	0
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBDAEBV10@@Z ENDP ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\ostream
;	COMDAT ??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Ostr$ = 224
??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z PROC ; std::endl<char,std::char_traits<char> >, COMDAT

; 978  :     basic_ostream<_Elem, _Traits>& _Ostr) { // insert newline and flush stream

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__C12F3EA4_ostream
	call	__CheckForDebuggerJustMyCode

; 979  :     _Ostr.put(_Ostr.widen('\n'));

	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	dl, 10
	mov	rcx, rax
	call	QWORD PTR __imp_?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z
	movzx	edx, al
	mov	rcx, QWORD PTR _Ostr$[rbp]
	call	QWORD PTR __imp_?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z

; 980  :     _Ostr.flush();

	mov	rcx, QWORD PTR _Ostr$[rbp]
	call	QWORD PTR __imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ

; 981  :     return _Ostr;

	mov	rax, QWORD PTR _Ostr$[rbp]

; 982  : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ENDP ; std::endl<char,std::char_traits<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
_TEXT	SEGMENT
tv66 = 192
_Ostr$ = 240
_Str$ = 248
??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z PROC ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 4982 :     basic_ostream<_Elem, _Traits>& _Ostr, const basic_string<_Elem, _Traits, _Alloc>& _Str) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode

; 4983 :     return _Insert_string(_Ostr, _Str.data(), _Str.size());

	mov	rcx, QWORD PTR _Str$[rbp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	mov	QWORD PTR tv66[rbp], rax
	mov	rcx, QWORD PTR _Str$[rbp]
	call	?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
	mov	rcx, QWORD PTR tv66[rbp]
	mov	r8, rcx
	mov	rdx, rax
	mov	rcx, QWORD PTR _Ostr$[rbp]
	call	??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z ; std::_Insert_string<char,std::char_traits<char>,unsigned __int64>

; 4984 : }

	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ENDP ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@tree_builder@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 224
classSize$ = 232
?__autoclassinit2@tree_builder@@QEAAX_K@Z PROC		; tree_builder::__autoclassinit2, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 200				; 000000c8H
	mov	rbp, rsp
	mov	rdi, QWORD PTR this$[rbp]
	xor	eax, eax
	mov	rcx, QWORD PTR classSize$[rbp]
	rep stosb
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?__autoclassinit2@tree_builder@@QEAAX_K@Z ENDP		; tree_builder::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1tree_builder@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1tree_builder@@QEAA@XZ PROC				; tree_builder::~tree_builder, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	rcx, rax
	call	??1binary_tree@@QEAA@XZ			; binary_tree::~binary_tree
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1tree_builder@@QEAA@XZ ENDP				; tree_builder::~tree_builder
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\shtuk\Desktop\Files\EquationStringParser\EquationStringParser\tree_builder.h
;	COMDAT ?calc@tree_builder@@QEAANNNN@Z
_TEXT	SEGMENT
firstNode$ = 8
result$ = 40
this$ = 288
x$ = 296
y$ = 304
z$ = 312
?calc@tree_builder@@QEAANNNN@Z PROC			; tree_builder::calc, COMDAT

; 383  : 	{

$LN3:
	movsd	QWORD PTR [rsp+32], xmm3
	movsd	QWORD PTR [rsp+24], xmm2
	movsd	QWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 312				; 00000138H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__3F6EDB1A_tree_builder@h
	call	__CheckForDebuggerJustMyCode

; 384  : 		this->x = x;

	mov	rax, QWORD PTR this$[rbp]
	movsd	xmm0, QWORD PTR x$[rbp]
	movsd	QWORD PTR [rax+40], xmm0

; 385  : 		this->y = y;

	mov	rax, QWORD PTR this$[rbp]
	movsd	xmm0, QWORD PTR y$[rbp]
	movsd	QWORD PTR [rax+48], xmm0

; 386  : 		this->z = z;

	mov	rax, QWORD PTR this$[rbp]
	movsd	xmm0, QWORD PTR z$[rbp]
	movsd	QWORD PTR [rax+56], xmm0

; 387  : 
; 388  : 
; 389  : 		node* firstNode = tree.nodes.front();

	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	rcx, rax
	call	?front@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAAEAPEAVnode@@XZ ; std::vector<node *,std::allocator<node *> >::front
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR firstNode$[rbp], rax

; 390  : 
; 391  : 		double result = calcNode(firstNode);

	mov	rdx, QWORD PTR firstNode$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?calcNode@tree_builder@@QEAANPEAVnode@@@Z ; tree_builder::calcNode
	movsd	QWORD PTR result$[rbp], xmm0

; 392  : 
; 393  : 		return result;

	movsd	xmm0, QWORD PTR result$[rbp]

; 394  : 	}

	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?calc@tree_builder@@QEAANNNN@Z ENDP			; tree_builder::calc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\shtuk\Desktop\Files\EquationStringParser\EquationStringParser\tree_builder.h
;	COMDAT ?calcNode@tree_builder@@QEAANPEAVnode@@@Z
_TEXT	SEGMENT
result$ = 8
c$4 = 40
left$5 = 104
right$6 = 136
$T7 = 360
$T8 = 440
tv148 = 456
__$ArrayPad$ = 464
this$ = 512
n$ = 520
?calcNode@tree_builder@@QEAANPEAVnode@@@Z PROC		; tree_builder::calcNode, COMDAT

; 347  : 	{

$LN13:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 536				; 00000218H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 74					; 0000004aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+568]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__3F6EDB1A_tree_builder@h
	call	__CheckForDebuggerJustMyCode

; 348  : 		double result;
; 349  : 
; 350  : 		if (n->IsConstant())

	mov	rcx, QWORD PTR n$[rbp]
	call	?IsConstant@node@@QEBA_NXZ		; node::IsConstant
	movzx	eax, al
	test	eax, eax
	je	$LN2@calcNode

; 351  : 		{
; 352  : 			std::string c = n->getConstant();

	lea	rdx, QWORD PTR c$4[rbp]
	mov	rcx, QWORD PTR n$[rbp]
	call	?getConstant@node@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; node::getConstant

; 353  : 
; 354  : 			if (c.compare("x") == 0)

	lea	rdx, OFFSET FLAT:??_C@_01FJMABOPO@x@
	lea	rcx, QWORD PTR c$4[rbp]
	call	?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAHQEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
	test	eax, eax
	jne	SHORT $LN4@calcNode

; 355  : 			{
; 356  : 				result = x;

	mov	rax, QWORD PTR this$[rbp]
	movsd	xmm0, QWORD PTR [rax+40]
	movsd	QWORD PTR result$[rbp], xmm0

; 357  : 			}

	jmp	SHORT $LN5@calcNode
$LN4@calcNode:

; 358  : 			else if (c.compare("y") == 0)

	lea	rdx, OFFSET FLAT:??_C@_01EANLCPLP@y@
	lea	rcx, QWORD PTR c$4[rbp]
	call	?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAHQEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
	test	eax, eax
	jne	SHORT $LN6@calcNode

; 359  : 			{
; 360  : 				result = y;

	mov	rax, QWORD PTR this$[rbp]
	movsd	xmm0, QWORD PTR [rax+48]
	movsd	QWORD PTR result$[rbp], xmm0

; 361  : 			}

	jmp	SHORT $LN5@calcNode
$LN6@calcNode:

; 362  : 			else if (c.compare("z") == 0)

	lea	rdx, OFFSET FLAT:??_C@_01GLPGHMHM@z@
	lea	rcx, QWORD PTR c$4[rbp]
	call	?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAHQEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
	test	eax, eax
	jne	SHORT $LN8@calcNode

; 363  : 			{
; 364  : 				result = z;

	mov	rax, QWORD PTR this$[rbp]
	movsd	xmm0, QWORD PTR [rax+56]
	movsd	QWORD PTR result$[rbp], xmm0

; 365  : 			}

	jmp	SHORT $LN5@calcNode
$LN8@calcNode:

; 366  : 			else
; 367  : 			{
; 368  : 				result = atof(c.c_str());

	lea	rcx, QWORD PTR c$4[rbp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	mov	rcx, rax
	call	QWORD PTR __imp_atof
	movsd	QWORD PTR result$[rbp], xmm0
$LN5@calcNode:

; 369  : 			}
; 370  : 		}

	lea	rcx, QWORD PTR c$4[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	jmp	$LN3@calcNode
$LN2@calcNode:

; 371  : 		else
; 372  : 		{
; 373  : 			double left = calcNode(n->left);

	mov	rax, QWORD PTR n$[rbp]
	mov	rdx, QWORD PTR [rax+128]
	mov	rcx, QWORD PTR this$[rbp]
	call	?calcNode@tree_builder@@QEAANPEAVnode@@@Z ; tree_builder::calcNode
	movsd	QWORD PTR left$5[rbp], xmm0

; 374  : 			double right = calcNode(n->right);

	mov	rax, QWORD PTR n$[rbp]
	mov	rdx, QWORD PTR [rax+136]
	mov	rcx, QWORD PTR this$[rbp]
	call	?calcNode@tree_builder@@QEAANPEAVnode@@@Z ; tree_builder::calcNode
	movsd	QWORD PTR right$6[rbp], xmm0

; 375  : 			result = performOperation(n->getOperator(), left, right);

	lea	rax, QWORD PTR $T7[rbp]
	mov	QWORD PTR $T8[rbp], rax
	mov	rdx, QWORD PTR $T8[rbp]
	mov	rcx, QWORD PTR n$[rbp]
	call	?getOperator@node@@QEBA?AUop@@XZ	; node::getOperator
	mov	QWORD PTR tv148[rbp], rax
	movsd	xmm3, QWORD PTR right$6[rbp]
	movsd	xmm2, QWORD PTR left$5[rbp]
	mov	rdx, QWORD PTR tv148[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?performOperation@tree_builder@@QEAANUop@@NN@Z ; tree_builder::performOperation
	movsd	QWORD PTR result$[rbp], xmm0
$LN3@calcNode:

; 376  : 		}
; 377  : 
; 378  : 
; 379  : 		return result;

	movsd	xmm0, QWORD PTR result$[rbp]

; 380  : 	}

	movdqu	XMMWORD PTR [rsp+32], xmm0
	lea	rcx, QWORD PTR [rbp-48]
	lea	rdx, OFFSET FLAT:?calcNode@tree_builder@@QEAANPEAVnode@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	movdqu	xmm0, XMMWORD PTR [rsp+32]
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+488]
	pop	rdi
	pop	rbp
	ret	0
?calcNode@tree_builder@@QEAANPEAVnode@@@Z ENDP		; tree_builder::calcNode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\shtuk\Desktop\Files\EquationStringParser\EquationStringParser\tree_builder.h
;	COMDAT ?performOperation@tree_builder@@QEAANUop@@NN@Z
_TEXT	SEGMENT
result$ = 8
$T1 = 232
$T2 = 264
$T3 = 296
tv70 = 308
tv87 = 312
this$ = 352
o$ = 360
l$ = 368
r$ = 376
?performOperation@tree_builder@@QEAANUop@@NN@Z PROC	; tree_builder::performOperation, COMDAT

; 319  : 	{

$LN15:
	movsd	QWORD PTR [rsp+32], xmm3
	movsd	QWORD PTR [rsp+24], xmm2
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 376				; 00000178H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__3F6EDB1A_tree_builder@h
	call	__CheckForDebuggerJustMyCode

; 320  : 		double result;
; 321  : 
; 322  : 		switch (o.name[0])

	mov	rax, QWORD PTR o$[rbp]
	xor	edx, edx
	mov	rcx, rax
	call	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
	movzx	eax, BYTE PTR [rax]
	mov	BYTE PTR tv70[rbp], al
	cmp	BYTE PTR tv70[rbp], 42			; 0000002aH
	je	SHORT $LN7@performOpe
	cmp	BYTE PTR tv70[rbp], 43			; 0000002bH
	je	SHORT $LN4@performOpe
	cmp	BYTE PTR tv70[rbp], 45			; 0000002dH
	je	SHORT $LN5@performOpe
	cmp	BYTE PTR tv70[rbp], 47			; 0000002fH
	je	SHORT $LN6@performOpe
	cmp	BYTE PTR tv70[rbp], 94			; 0000005eH
	je	SHORT $LN8@performOpe
	jmp	$LN9@performOpe
$LN4@performOpe:

; 323  : 		{
; 324  : 			case '+':
; 325  : 				result = l + r;

	movsd	xmm0, QWORD PTR l$[rbp]
	addsd	xmm0, QWORD PTR r$[rbp]
	movsd	QWORD PTR result$[rbp], xmm0

; 326  : 				break;

	jmp	$LN2@performOpe
$LN5@performOpe:

; 327  : 			case '-':
; 328  : 				result = l - r;

	movsd	xmm0, QWORD PTR l$[rbp]
	subsd	xmm0, QWORD PTR r$[rbp]
	movsd	QWORD PTR result$[rbp], xmm0

; 329  : 				break;

	jmp	$LN2@performOpe
$LN6@performOpe:

; 330  : 			case '/':
; 331  : 				result = l / r;

	movsd	xmm0, QWORD PTR l$[rbp]
	divsd	xmm0, QWORD PTR r$[rbp]
	movsd	QWORD PTR result$[rbp], xmm0

; 332  : 				break;

	jmp	$LN2@performOpe
$LN7@performOpe:

; 333  : 			case '*':
; 334  : 				result = l * r;

	movsd	xmm0, QWORD PTR l$[rbp]
	mulsd	xmm0, QWORD PTR r$[rbp]
	movsd	QWORD PTR result$[rbp], xmm0

; 335  : 				break;

	jmp	SHORT $LN2@performOpe
$LN8@performOpe:

; 336  : 			case '^':
; 337  : 				result = pow(l,r);

	movsd	xmm1, QWORD PTR r$[rbp]
	movsd	xmm0, QWORD PTR l$[rbp]
	call	pow
	movsd	QWORD PTR result$[rbp], xmm0

; 338  : 				break;

	jmp	SHORT $LN2@performOpe
$LN9@performOpe:

; 339  : 			default:
; 340  : 				throw new std::exception("undefined operator in performOperation()");

	mov	ecx, 24
	call	??2@YAPEAX_K@Z				; operator new
	mov	QWORD PTR $T2[rbp], rax
	cmp	QWORD PTR $T2[rbp], 0
	je	SHORT $LN11@performOpe
	lea	rdx, OFFSET FLAT:??_C@_0CJ@CHLOGLPG@undefined?5operator?5in?5performOp@
	mov	rcx, QWORD PTR $T2[rbp]
	call	??0exception@std@@QEAA@QEBD@Z		; std::exception::exception
	mov	QWORD PTR tv87[rbp], rax
	jmp	SHORT $LN12@performOpe
$LN11@performOpe:
	mov	QWORD PTR tv87[rbp], 0
$LN12@performOpe:
	mov	rax, QWORD PTR tv87[rbp]
	mov	QWORD PTR $T1[rbp], rax
	lea	rdx, OFFSET FLAT:_TI2PEAVexception@std@@
	lea	rcx, QWORD PTR $T1[rbp]
	call	_CxxThrowException
$LN2@performOpe:

; 341  : 		}
; 342  : 
; 343  : 		return result;

	movsd	xmm0, QWORD PTR result$[rbp]
	movsd	QWORD PTR $T3[rbp], xmm0
	mov	rcx, QWORD PTR o$[rbp]
	call	??1op@@QEAA@XZ
	movsd	xmm0, QWORD PTR $T3[rbp]

; 344  : 	}

	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
$LN14@performOpe:
?performOperation@tree_builder@@QEAANUop@@NN@Z ENDP	; tree_builder::performOperation
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
result$ = 8
$T1 = 232
$T2 = 264
$T3 = 296
tv70 = 308
tv87 = 312
this$ = 352
o$ = 360
l$ = 368
r$ = 376
?dtor$0@?0??performOperation@tree_builder@@QEAANUop@@NN@Z@4HA PROC ; `tree_builder::performOperation'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 56					; 00000038H
	lea	rbp, QWORD PTR [rdx+48]
	mov	rcx, QWORD PTR o$[rbp]
	call	??1op@@QEAA@XZ
	add	rsp, 56					; 00000038H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??performOperation@tree_builder@@QEAANUop@@NN@Z@4HA ENDP ; `tree_builder::performOperation'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
result$ = 8
$T1 = 232
$T2 = 264
$T3 = 296
tv70 = 308
tv87 = 312
this$ = 352
o$ = 360
l$ = 368
r$ = 376
?dtor$0@?0??performOperation@tree_builder@@QEAANUop@@NN@Z@4HA PROC ; `tree_builder::performOperation'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 56					; 00000038H
	lea	rbp, QWORD PTR [rdx+48]
	mov	rcx, QWORD PTR o$[rbp]
	call	??1op@@QEAA@XZ
	add	rsp, 56					; 00000038H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??performOperation@tree_builder@@QEAANUop@@NN@Z@4HA ENDP ; `tree_builder::performOperation'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\shtuk\Desktop\Files\EquationStringParser\EquationStringParser\tree_builder.h
;	COMDAT ?build@tree_builder@@QEAAXXZ
_TEXT	SEGMENT
operators$ = 8
numbers$ = 72
numberOfOperators$ = 132
indexMaximum$ = 164
maxNode$ = 200
newNode$ = 280
$T7 = 696
$T8 = 760
$T9 = 792
$T10 = 824
$T11 = 856
$T12 = 936
tv179 = 952
tv174 = 952
tv161 = 960
__$ArrayPad$ = 968
this$ = 1008
?build@tree_builder@@QEAAXXZ PROC			; tree_builder::build, COMDAT

; 302  : 	{

$LN11:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 1032				; 00000408H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 150				; 00000096H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+1064]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__3F6EDB1A_tree_builder@h
	call	__CheckForDebuggerJustMyCode

; 303  : 		std::vector<op> operators = manager->getOperators();

	mov	edx, 32					; 00000020H
	lea	rcx, QWORD PTR operators$[rbp]
	call	?__autoclassinit2@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAAX_K@Z
	lea	rdx, QWORD PTR operators$[rbp]
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	?getOperators@expression@@QEAA?AV?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@XZ ; expression::getOperators
	npad	1

; 304  : 		std::vector<std::string> numbers = manager->getNumbers();

	mov	edx, 32					; 00000020H
	lea	rcx, QWORD PTR numbers$[rbp]
	call	?__autoclassinit2@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAX_K@Z
	lea	rdx, QWORD PTR numbers$[rbp]
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	?getNumbers@expression@@QEAA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ ; expression::getNumbers
	npad	1

; 305  : 
; 306  : 		int numberOfOperators = (int)operators.size();

	lea	rcx, QWORD PTR operators$[rbp]
	call	?size@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEBA_KXZ ; std::vector<op,std::allocator<op> >::size
	mov	DWORD PTR numberOfOperators$[rbp], eax

; 307  : 
; 308  : 		int indexMaximum = findMaxIndex(operators, 0, numberOfOperators, numberOfOperators);

	lea	rax, QWORD PTR $T7[rbp]
	mov	QWORD PTR $T8[rbp], rax
	lea	rdx, QWORD PTR operators$[rbp]
	mov	rcx, QWORD PTR $T8[rbp]
	call	??0?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@AEBV01@@Z ; std::vector<op,std::allocator<op> >::vector<op,std::allocator<op> >
	mov	QWORD PTR tv174[rbp], rax
	mov	eax, DWORD PTR numberOfOperators$[rbp]
	mov	DWORD PTR [rsp+32], eax
	mov	r9d, DWORD PTR numberOfOperators$[rbp]
	xor	r8d, r8d
	mov	rdx, QWORD PTR tv174[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?findMaxIndex@tree_builder@@QEAAHV?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@HHH@Z ; tree_builder::findMaxIndex
	mov	DWORD PTR indexMaximum$[rbp], eax

; 309  : 
; 310  : 		op maxNode = operators[indexMaximum];

	movsxd	rax, DWORD PTR indexMaximum$[rbp]
	mov	rdx, rax
	lea	rcx, QWORD PTR operators$[rbp]
	call	??A?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAAAEAUop@@_K@Z ; std::vector<op,std::allocator<op> >::operator[]
	mov	rdx, rax
	lea	rcx, QWORD PTR maxNode$[rbp]
	call	??0op@@QEAA@AEBU0@@Z
	npad	1

; 311  : 		node* newNode = new node(maxNode);

	mov	ecx, 144				; 00000090H
	call	??2@YAPEAX_K@Z				; operator new
	mov	QWORD PTR $T10[rbp], rax
	cmp	QWORD PTR $T10[rbp], 0
	je	SHORT $LN3@build
	mov	edx, 144				; 00000090H
	mov	rcx, QWORD PTR $T10[rbp]
	call	?__autoclassinit2@node@@QEAAX_K@Z
	lea	rax, QWORD PTR $T11[rbp]
	mov	QWORD PTR $T12[rbp], rax
	lea	rdx, QWORD PTR maxNode$[rbp]
	mov	rcx, QWORD PTR $T12[rbp]
	call	??0op@@QEAA@AEBU0@@Z
	mov	QWORD PTR tv179[rbp], rax
	mov	rdx, QWORD PTR tv179[rbp]
	mov	rcx, QWORD PTR $T10[rbp]
	call	??0node@@QEAA@Uop@@@Z			; node::node
	mov	QWORD PTR tv161[rbp], rax
	jmp	SHORT $LN4@build
$LN3@build:
	mov	QWORD PTR tv161[rbp], 0
$LN4@build:
	mov	rax, QWORD PTR tv161[rbp]
	mov	QWORD PTR $T9[rbp], rax
	mov	rax, QWORD PTR $T9[rbp]
	mov	QWORD PTR newNode$[rbp], rax

; 312  : 		tree.nodes.push_back(newNode);

	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	lea	rdx, QWORD PTR newNode$[rbp]
	mov	rcx, rax
	call	?push_back@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAXAEBQEAVnode@@@Z ; std::vector<node *,std::allocator<node *> >::push_back

; 313  : 
; 314  : 		addLeft(newNode, indexMaximum);

	mov	r8d, DWORD PTR indexMaximum$[rbp]
	mov	rdx, QWORD PTR newNode$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?addLeft@tree_builder@@QEAAXPEAVnode@@H@Z ; tree_builder::addLeft

; 315  : 		addRight(newNode, indexMaximum, numberOfOperators);

	mov	r9d, DWORD PTR numberOfOperators$[rbp]
	mov	r8d, DWORD PTR indexMaximum$[rbp]
	mov	rdx, QWORD PTR newNode$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?addRight@tree_builder@@QEAAXPEAVnode@@HH@Z ; tree_builder::addRight
	npad	1

; 316  : 	}

	lea	rcx, QWORD PTR maxNode$[rbp]
	call	??1op@@QEAA@XZ
	npad	1
	lea	rcx, QWORD PTR numbers$[rbp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	npad	1
	lea	rcx, QWORD PTR operators$[rbp]
	call	??1?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@XZ ; std::vector<op,std::allocator<op> >::~vector<op,std::allocator<op> >
	lea	rcx, QWORD PTR [rbp-48]
	lea	rdx, OFFSET FLAT:?build@tree_builder@@QEAAXXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+984]
	pop	rdi
	pop	rbp
	ret	0
?build@tree_builder@@QEAAXXZ ENDP			; tree_builder::build
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
operators$ = 8
numbers$ = 72
numberOfOperators$ = 132
indexMaximum$ = 164
maxNode$ = 200
newNode$ = 280
$T7 = 696
$T8 = 760
$T9 = 792
$T10 = 824
$T11 = 856
$T12 = 936
tv179 = 952
tv174 = 952
tv161 = 960
__$ArrayPad$ = 968
this$ = 1008
?dtor$0@?0??build@tree_builder@@QEAAXXZ@4HA PROC	; `tree_builder::build'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	lea	rcx, QWORD PTR operators$[rbp]
	call	??1?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@XZ ; std::vector<op,std::allocator<op> >::~vector<op,std::allocator<op> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??build@tree_builder@@QEAAXXZ@4HA ENDP	; `tree_builder::build'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
operators$ = 8
numbers$ = 72
numberOfOperators$ = 132
indexMaximum$ = 164
maxNode$ = 200
newNode$ = 280
$T7 = 696
$T8 = 760
$T9 = 792
$T10 = 824
$T11 = 856
$T12 = 936
tv179 = 952
tv174 = 952
tv161 = 960
__$ArrayPad$ = 968
this$ = 1008
?dtor$1@?0??build@tree_builder@@QEAAXXZ@4HA PROC	; `tree_builder::build'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	lea	rcx, QWORD PTR numbers$[rbp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0??build@tree_builder@@QEAAXXZ@4HA ENDP	; `tree_builder::build'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
operators$ = 8
numbers$ = 72
numberOfOperators$ = 132
indexMaximum$ = 164
maxNode$ = 200
newNode$ = 280
$T7 = 696
$T8 = 760
$T9 = 792
$T10 = 824
$T11 = 856
$T12 = 936
tv179 = 952
tv174 = 952
tv161 = 960
__$ArrayPad$ = 968
this$ = 1008
?dtor$3@?0??build@tree_builder@@QEAAXXZ@4HA PROC	; `tree_builder::build'::`1'::dtor$3
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	lea	rcx, QWORD PTR maxNode$[rbp]
	call	??1op@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$3@?0??build@tree_builder@@QEAAXXZ@4HA ENDP	; `tree_builder::build'::`1'::dtor$3
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
operators$ = 8
numbers$ = 72
numberOfOperators$ = 132
indexMaximum$ = 164
maxNode$ = 200
newNode$ = 280
$T7 = 696
$T8 = 760
$T9 = 792
$T10 = 824
$T11 = 856
$T12 = 936
tv179 = 952
tv174 = 952
tv161 = 960
__$ArrayPad$ = 968
this$ = 1008
?dtor$4@?0??build@tree_builder@@QEAAXXZ@4HA PROC	; `tree_builder::build'::`1'::dtor$4
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	mov	edx, 144				; 00000090H
	mov	rcx, QWORD PTR $T10[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$4@?0??build@tree_builder@@QEAAXXZ@4HA ENDP	; `tree_builder::build'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
operators$ = 8
numbers$ = 72
numberOfOperators$ = 132
indexMaximum$ = 164
maxNode$ = 200
newNode$ = 280
$T7 = 696
$T8 = 760
$T9 = 792
$T10 = 824
$T11 = 856
$T12 = 936
tv179 = 952
tv174 = 952
tv161 = 960
__$ArrayPad$ = 968
this$ = 1008
?dtor$0@?0??build@tree_builder@@QEAAXXZ@4HA PROC	; `tree_builder::build'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	lea	rcx, QWORD PTR operators$[rbp]
	call	??1?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@XZ ; std::vector<op,std::allocator<op> >::~vector<op,std::allocator<op> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??build@tree_builder@@QEAAXXZ@4HA ENDP	; `tree_builder::build'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
operators$ = 8
numbers$ = 72
numberOfOperators$ = 132
indexMaximum$ = 164
maxNode$ = 200
newNode$ = 280
$T7 = 696
$T8 = 760
$T9 = 792
$T10 = 824
$T11 = 856
$T12 = 936
tv179 = 952
tv174 = 952
tv161 = 960
__$ArrayPad$ = 968
this$ = 1008
?dtor$1@?0??build@tree_builder@@QEAAXXZ@4HA PROC	; `tree_builder::build'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	lea	rcx, QWORD PTR numbers$[rbp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0??build@tree_builder@@QEAAXXZ@4HA ENDP	; `tree_builder::build'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
operators$ = 8
numbers$ = 72
numberOfOperators$ = 132
indexMaximum$ = 164
maxNode$ = 200
newNode$ = 280
$T7 = 696
$T8 = 760
$T9 = 792
$T10 = 824
$T11 = 856
$T12 = 936
tv179 = 952
tv174 = 952
tv161 = 960
__$ArrayPad$ = 968
this$ = 1008
?dtor$3@?0??build@tree_builder@@QEAAXXZ@4HA PROC	; `tree_builder::build'::`1'::dtor$3
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	lea	rcx, QWORD PTR maxNode$[rbp]
	call	??1op@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$3@?0??build@tree_builder@@QEAAXXZ@4HA ENDP	; `tree_builder::build'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
operators$ = 8
numbers$ = 72
numberOfOperators$ = 132
indexMaximum$ = 164
maxNode$ = 200
newNode$ = 280
$T7 = 696
$T8 = 760
$T9 = 792
$T10 = 824
$T11 = 856
$T12 = 936
tv179 = 952
tv174 = 952
tv161 = 960
__$ArrayPad$ = 968
this$ = 1008
?dtor$4@?0??build@tree_builder@@QEAAXXZ@4HA PROC	; `tree_builder::build'::`1'::dtor$4
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	mov	edx, 144				; 00000090H
	mov	rcx, QWORD PTR $T10[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$4@?0??build@tree_builder@@QEAAXXZ@4HA ENDP	; `tree_builder::build'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\shtuk\Desktop\Files\EquationStringParser\EquationStringParser\tree_builder.h
;	COMDAT ?addRight@tree_builder@@QEAAXPEAVnode@@HH@Z
_TEXT	SEGMENT
operators$ = 8
currentExecNumber$ = 68
nextMaximumRight$ = 100
nextMaximumNode$5 = 136
$T6 = 600
$T7 = 664
$T8 = 728
$T9 = 760
$T10 = 824
$T11 = 856
$T12 = 888
$T13 = 968
$T14 = 1000
$T15 = 1032
$T16 = 1064
$T17 = 1128
$T18 = 1160
$T19 = 1220
tv235 = 1240
tv228 = 1240
tv214 = 1240
tv141 = 1240
tv79 = 1240
tv226 = 1248
tv171 = 1248
tv91 = 1248
tv68 = 1248
tv242 = 1256
tv230 = 1256
tv244 = 1264
tv220 = 1272
__$ArrayPad$ = 1280
this$ = 1328
n$ = 1336
index$ = 1344
parentIndex$ = 1352
?addRight@tree_builder@@QEAAXPEAVnode@@HH@Z PROC	; tree_builder::addRight, COMDAT

; 278  : 	{

$LN21:
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 1352				; 00000548H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 230				; 000000e6H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+1384]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	mov	DWORD PTR $T19[rbp], 0
	lea	rcx, OFFSET FLAT:__3F6EDB1A_tree_builder@h
	call	__CheckForDebuggerJustMyCode

; 279  : 		std::vector<op> operators = manager->getOperators();

	mov	edx, 32					; 00000020H
	lea	rcx, QWORD PTR operators$[rbp]
	call	?__autoclassinit2@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAAX_K@Z
	lea	rdx, QWORD PTR operators$[rbp]
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	?getOperators@expression@@QEAA?AV?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@XZ ; expression::getOperators
	npad	1

; 280  : 
; 281  : 		int currentExecNumber = manager->getOperators()[index].executionNumber;

	movsxd	rax, DWORD PTR index$[rbp]
	mov	QWORD PTR tv79[rbp], rax
	lea	rdx, QWORD PTR $T6[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx]
	call	?getOperators@expression@@QEAA?AV?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@XZ ; expression::getOperators
	mov	QWORD PTR tv226[rbp], rax
	mov	rax, QWORD PTR tv79[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR tv226[rbp]
	call	??A?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAAAEAUop@@_K@Z ; std::vector<op,std::allocator<op> >::operator[]
	mov	eax, DWORD PTR [rax+40]
	mov	DWORD PTR currentExecNumber$[rbp], eax
	lea	rcx, QWORD PTR $T6[rbp]
	call	??1?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@XZ ; std::vector<op,std::allocator<op> >::~vector<op,std::allocator<op> >

; 282  : 
; 283  : 		int nextMaximumRight = findMaxIndex(manager->getOperators(), index, parentIndex, currentExecNumber);

	lea	rax, QWORD PTR $T7[rbp]
	mov	QWORD PTR $T8[rbp], rax
	mov	rdx, QWORD PTR $T8[rbp]
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	?getOperators@expression@@QEAA?AV?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@XZ ; expression::getOperators
	mov	QWORD PTR tv228[rbp], rax
	mov	eax, DWORD PTR currentExecNumber$[rbp]
	mov	DWORD PTR [rsp+32], eax
	mov	r9d, DWORD PTR parentIndex$[rbp]
	mov	r8d, DWORD PTR index$[rbp]
	mov	rdx, QWORD PTR tv228[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?findMaxIndex@tree_builder@@QEAAHV?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@HHH@Z ; tree_builder::findMaxIndex
	mov	DWORD PTR nextMaximumRight$[rbp], eax

; 284  : 
; 285  : 		if (nextMaximumRight != -1)

	cmp	DWORD PTR nextMaximumRight$[rbp], -1
	je	$LN2@addRight

; 286  : 		{
; 287  : 			op nextMaximumNode = (manager->getOperators()[nextMaximumRight]);

	movsxd	rax, DWORD PTR nextMaximumRight$[rbp]
	mov	QWORD PTR tv141[rbp], rax
	lea	rdx, QWORD PTR $T9[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx]
	call	?getOperators@expression@@QEAA?AV?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@XZ ; expression::getOperators
	mov	QWORD PTR tv68[rbp], rax
	mov	rax, QWORD PTR tv68[rbp]
	mov	QWORD PTR tv230[rbp], rax
	mov	rax, QWORD PTR tv141[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR tv230[rbp]
	call	??A?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAAAEAUop@@_K@Z ; std::vector<op,std::allocator<op> >::operator[]
	mov	rdx, rax
	lea	rcx, QWORD PTR nextMaximumNode$5[rbp]
	call	??0op@@QEAA@AEBU0@@Z
	npad	1
	lea	rcx, QWORD PTR $T9[rbp]
	call	??1?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@XZ ; std::vector<op,std::allocator<op> >::~vector<op,std::allocator<op> >

; 288  : 			n->right = new node(nextMaximumNode);

	mov	ecx, 144				; 00000090H
	call	??2@YAPEAX_K@Z				; operator new
	mov	QWORD PTR $T11[rbp], rax
	cmp	QWORD PTR $T11[rbp], 0
	je	SHORT $LN5@addRight
	mov	edx, 144				; 00000090H
	mov	rcx, QWORD PTR $T11[rbp]
	call	?__autoclassinit2@node@@QEAAX_K@Z
	lea	rax, QWORD PTR $T12[rbp]
	mov	QWORD PTR $T13[rbp], rax
	lea	rdx, QWORD PTR nextMaximumNode$5[rbp]
	mov	rcx, QWORD PTR $T13[rbp]
	call	??0op@@QEAA@AEBU0@@Z
	mov	QWORD PTR tv235[rbp], rax
	mov	rdx, QWORD PTR tv235[rbp]
	mov	rcx, QWORD PTR $T11[rbp]
	call	??0node@@QEAA@Uop@@@Z			; node::node
	mov	QWORD PTR tv171[rbp], rax
	jmp	SHORT $LN6@addRight
$LN5@addRight:
	mov	QWORD PTR tv171[rbp], 0
$LN6@addRight:
	mov	rax, QWORD PTR tv171[rbp]
	mov	QWORD PTR $T10[rbp], rax
	mov	rax, QWORD PTR n$[rbp]
	mov	rcx, QWORD PTR $T10[rbp]
	mov	QWORD PTR [rax+136], rcx

; 289  : 			tree.nodes.push_back(n->right);

	mov	rax, QWORD PTR n$[rbp]
	add	rax, 136				; 00000088H
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 8
	mov	rdx, rax
	call	?push_back@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAXAEBQEAVnode@@@Z ; std::vector<node *,std::allocator<node *> >::push_back

; 290  : 
; 291  : 			addLeft(n->right, nextMaximumRight);

	mov	r8d, DWORD PTR nextMaximumRight$[rbp]
	mov	rax, QWORD PTR n$[rbp]
	mov	rdx, QWORD PTR [rax+136]
	mov	rcx, QWORD PTR this$[rbp]
	call	?addLeft@tree_builder@@QEAAXPEAVnode@@H@Z ; tree_builder::addLeft

; 292  : 			addRight(n->right, nextMaximumRight, parentIndex);

	mov	r9d, DWORD PTR parentIndex$[rbp]
	mov	r8d, DWORD PTR nextMaximumRight$[rbp]
	mov	rax, QWORD PTR n$[rbp]
	mov	rdx, QWORD PTR [rax+136]
	mov	rcx, QWORD PTR this$[rbp]
	call	?addRight@tree_builder@@QEAAXPEAVnode@@HH@Z ; tree_builder::addRight
	npad	1

; 293  : 		}

	lea	rcx, QWORD PTR nextMaximumNode$5[rbp]
	call	??1op@@QEAA@XZ
	jmp	$LN3@addRight
$LN2@addRight:

; 294  : 		else
; 295  : 		{
; 296  : 			n->right = new node(manager->getNumbers()[index + 1]);

	mov	ecx, 144				; 00000090H
	call	??2@YAPEAX_K@Z				; operator new
	mov	QWORD PTR $T15[rbp], rax
	cmp	QWORD PTR $T15[rbp], 0
	je	$LN7@addRight
	mov	edx, 144				; 00000090H
	mov	rcx, QWORD PTR $T15[rbp]
	call	?__autoclassinit2@node@@QEAAX_K@Z
	lea	rax, QWORD PTR $T16[rbp]
	mov	QWORD PTR $T17[rbp], rax
	mov	eax, DWORD PTR index$[rbp]
	inc	eax
	cdqe
	mov	QWORD PTR tv214[rbp], rax
	lea	rdx, QWORD PTR $T18[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx]
	call	?getNumbers@expression@@QEAA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ ; expression::getNumbers
	mov	QWORD PTR tv91[rbp], rax
	mov	rax, QWORD PTR tv91[rbp]
	mov	QWORD PTR tv242[rbp], rax
	mov	eax, DWORD PTR $T19[rbp]
	or	eax, 1
	mov	DWORD PTR $T19[rbp], eax
	mov	rax, QWORD PTR tv214[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR tv242[rbp]
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@_K@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	mov	rdx, rax
	mov	rcx, QWORD PTR $T17[rbp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	QWORD PTR tv244[rbp], rax
	mov	rdx, QWORD PTR tv244[rbp]
	mov	rcx, QWORD PTR $T15[rbp]
	call	??0node@@QEAA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; node::node
	mov	QWORD PTR tv220[rbp], rax
	jmp	SHORT $LN8@addRight
$LN7@addRight:
	mov	QWORD PTR tv220[rbp], 0
$LN8@addRight:
	mov	rax, QWORD PTR tv220[rbp]
	mov	QWORD PTR $T14[rbp], rax
	mov	rax, QWORD PTR n$[rbp]
	mov	rcx, QWORD PTR $T14[rbp]
	mov	QWORD PTR [rax+136], rcx
	mov	eax, DWORD PTR $T19[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN20@addRight
	and	DWORD PTR $T19[rbp], -2
	lea	rcx, QWORD PTR $T18[rbp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
$LN20@addRight:

; 297  : 			tree.nodes.push_back(n->right);

	mov	rax, QWORD PTR n$[rbp]
	add	rax, 136				; 00000088H
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 8
	mov	rdx, rax
	call	?push_back@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAXAEBQEAVnode@@@Z ; std::vector<node *,std::allocator<node *> >::push_back
	npad	1
$LN3@addRight:

; 298  : 		}
; 299  : 	}

	lea	rcx, QWORD PTR operators$[rbp]
	call	??1?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@XZ ; std::vector<op,std::allocator<op> >::~vector<op,std::allocator<op> >
	lea	rcx, QWORD PTR [rbp-48]
	lea	rdx, OFFSET FLAT:?addRight@tree_builder@@QEAAXPEAVnode@@HH@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+1304]
	pop	rdi
	pop	rbp
	ret	0
?addRight@tree_builder@@QEAAXPEAVnode@@HH@Z ENDP	; tree_builder::addRight
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
operators$ = 8
currentExecNumber$ = 68
nextMaximumRight$ = 100
nextMaximumNode$5 = 136
$T6 = 600
$T7 = 664
$T8 = 728
$T9 = 760
$T10 = 824
$T11 = 856
$T12 = 888
$T13 = 968
$T14 = 1000
$T15 = 1032
$T16 = 1064
$T17 = 1128
$T18 = 1160
$T19 = 1220
tv235 = 1240
tv228 = 1240
tv214 = 1240
tv141 = 1240
tv79 = 1240
tv226 = 1248
tv171 = 1248
tv91 = 1248
tv68 = 1248
tv242 = 1256
tv230 = 1256
tv244 = 1264
tv220 = 1272
__$ArrayPad$ = 1280
this$ = 1328
n$ = 1336
index$ = 1344
parentIndex$ = 1352
?dtor$0@?0??addRight@tree_builder@@QEAAXPEAVnode@@HH@Z@4HA PROC ; `tree_builder::addRight'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	lea	rcx, QWORD PTR operators$[rbp]
	call	??1?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@XZ ; std::vector<op,std::allocator<op> >::~vector<op,std::allocator<op> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??addRight@tree_builder@@QEAAXPEAVnode@@HH@Z@4HA ENDP ; `tree_builder::addRight'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
operators$ = 8
currentExecNumber$ = 68
nextMaximumRight$ = 100
nextMaximumNode$5 = 136
$T6 = 600
$T7 = 664
$T8 = 728
$T9 = 760
$T10 = 824
$T11 = 856
$T12 = 888
$T13 = 968
$T14 = 1000
$T15 = 1032
$T16 = 1064
$T17 = 1128
$T18 = 1160
$T19 = 1220
tv235 = 1240
tv228 = 1240
tv214 = 1240
tv141 = 1240
tv79 = 1240
tv226 = 1248
tv171 = 1248
tv91 = 1248
tv68 = 1248
tv242 = 1256
tv230 = 1256
tv244 = 1264
tv220 = 1272
__$ArrayPad$ = 1280
this$ = 1328
n$ = 1336
index$ = 1344
parentIndex$ = 1352
?dtor$3@?0??addRight@tree_builder@@QEAAXPEAVnode@@HH@Z@4HA PROC ; `tree_builder::addRight'::`1'::dtor$3
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	lea	rcx, QWORD PTR $T9[rbp]
	call	??1?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@XZ ; std::vector<op,std::allocator<op> >::~vector<op,std::allocator<op> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$3@?0??addRight@tree_builder@@QEAAXPEAVnode@@HH@Z@4HA ENDP ; `tree_builder::addRight'::`1'::dtor$3
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
operators$ = 8
currentExecNumber$ = 68
nextMaximumRight$ = 100
nextMaximumNode$5 = 136
$T6 = 600
$T7 = 664
$T8 = 728
$T9 = 760
$T10 = 824
$T11 = 856
$T12 = 888
$T13 = 968
$T14 = 1000
$T15 = 1032
$T16 = 1064
$T17 = 1128
$T18 = 1160
$T19 = 1220
tv235 = 1240
tv228 = 1240
tv214 = 1240
tv141 = 1240
tv79 = 1240
tv226 = 1248
tv171 = 1248
tv91 = 1248
tv68 = 1248
tv242 = 1256
tv230 = 1256
tv244 = 1264
tv220 = 1272
__$ArrayPad$ = 1280
this$ = 1328
n$ = 1336
index$ = 1344
parentIndex$ = 1352
?dtor$4@?0??addRight@tree_builder@@QEAAXPEAVnode@@HH@Z@4HA PROC ; `tree_builder::addRight'::`1'::dtor$4
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	lea	rcx, QWORD PTR nextMaximumNode$5[rbp]
	call	??1op@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$4@?0??addRight@tree_builder@@QEAAXPEAVnode@@HH@Z@4HA ENDP ; `tree_builder::addRight'::`1'::dtor$4
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
operators$ = 8
currentExecNumber$ = 68
nextMaximumRight$ = 100
nextMaximumNode$5 = 136
$T6 = 600
$T7 = 664
$T8 = 728
$T9 = 760
$T10 = 824
$T11 = 856
$T12 = 888
$T13 = 968
$T14 = 1000
$T15 = 1032
$T16 = 1064
$T17 = 1128
$T18 = 1160
$T19 = 1220
tv235 = 1240
tv228 = 1240
tv214 = 1240
tv141 = 1240
tv79 = 1240
tv226 = 1248
tv171 = 1248
tv91 = 1248
tv68 = 1248
tv242 = 1256
tv230 = 1256
tv244 = 1264
tv220 = 1272
__$ArrayPad$ = 1280
this$ = 1328
n$ = 1336
index$ = 1344
parentIndex$ = 1352
?dtor$5@?0??addRight@tree_builder@@QEAAXPEAVnode@@HH@Z@4HA PROC ; `tree_builder::addRight'::`1'::dtor$5
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	mov	edx, 144				; 00000090H
	mov	rcx, QWORD PTR $T11[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$5@?0??addRight@tree_builder@@QEAAXPEAVnode@@HH@Z@4HA ENDP ; `tree_builder::addRight'::`1'::dtor$5
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
operators$ = 8
currentExecNumber$ = 68
nextMaximumRight$ = 100
nextMaximumNode$5 = 136
$T6 = 600
$T7 = 664
$T8 = 728
$T9 = 760
$T10 = 824
$T11 = 856
$T12 = 888
$T13 = 968
$T14 = 1000
$T15 = 1032
$T16 = 1064
$T17 = 1128
$T18 = 1160
$T19 = 1220
tv235 = 1240
tv228 = 1240
tv214 = 1240
tv141 = 1240
tv79 = 1240
tv226 = 1248
tv171 = 1248
tv91 = 1248
tv68 = 1248
tv242 = 1256
tv230 = 1256
tv244 = 1264
tv220 = 1272
__$ArrayPad$ = 1280
this$ = 1328
n$ = 1336
index$ = 1344
parentIndex$ = 1352
?dtor$7@?0??addRight@tree_builder@@QEAAXPEAVnode@@HH@Z@4HA PROC ; `tree_builder::addRight'::`1'::dtor$7
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	mov	edx, 144				; 00000090H
	mov	rcx, QWORD PTR $T15[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$7@?0??addRight@tree_builder@@QEAAXPEAVnode@@HH@Z@4HA ENDP ; `tree_builder::addRight'::`1'::dtor$7
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
operators$ = 8
currentExecNumber$ = 68
nextMaximumRight$ = 100
nextMaximumNode$5 = 136
$T6 = 600
$T7 = 664
$T8 = 728
$T9 = 760
$T10 = 824
$T11 = 856
$T12 = 888
$T13 = 968
$T14 = 1000
$T15 = 1032
$T16 = 1064
$T17 = 1128
$T18 = 1160
$T19 = 1220
tv235 = 1240
tv228 = 1240
tv214 = 1240
tv141 = 1240
tv79 = 1240
tv226 = 1248
tv171 = 1248
tv91 = 1248
tv68 = 1248
tv242 = 1256
tv230 = 1256
tv244 = 1264
tv220 = 1272
__$ArrayPad$ = 1280
this$ = 1328
n$ = 1336
index$ = 1344
parentIndex$ = 1352
?dtor$8@?0??addRight@tree_builder@@QEAAXPEAVnode@@HH@Z@4HA PROC ; `tree_builder::addRight'::`1'::dtor$8
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	mov	eax, DWORD PTR $T19[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN18@dtor$8
	and	DWORD PTR $T19[rbp], -2
	lea	rcx, QWORD PTR $T18[rbp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
$LN18@dtor$8:
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$8@?0??addRight@tree_builder@@QEAAXPEAVnode@@HH@Z@4HA ENDP ; `tree_builder::addRight'::`1'::dtor$8
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
operators$ = 8
currentExecNumber$ = 68
nextMaximumRight$ = 100
nextMaximumNode$5 = 136
$T6 = 600
$T7 = 664
$T8 = 728
$T9 = 760
$T10 = 824
$T11 = 856
$T12 = 888
$T13 = 968
$T14 = 1000
$T15 = 1032
$T16 = 1064
$T17 = 1128
$T18 = 1160
$T19 = 1220
tv235 = 1240
tv228 = 1240
tv214 = 1240
tv141 = 1240
tv79 = 1240
tv226 = 1248
tv171 = 1248
tv91 = 1248
tv68 = 1248
tv242 = 1256
tv230 = 1256
tv244 = 1264
tv220 = 1272
__$ArrayPad$ = 1280
this$ = 1328
n$ = 1336
index$ = 1344
parentIndex$ = 1352
?dtor$0@?0??addRight@tree_builder@@QEAAXPEAVnode@@HH@Z@4HA PROC ; `tree_builder::addRight'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	lea	rcx, QWORD PTR operators$[rbp]
	call	??1?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@XZ ; std::vector<op,std::allocator<op> >::~vector<op,std::allocator<op> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??addRight@tree_builder@@QEAAXPEAVnode@@HH@Z@4HA ENDP ; `tree_builder::addRight'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
operators$ = 8
currentExecNumber$ = 68
nextMaximumRight$ = 100
nextMaximumNode$5 = 136
$T6 = 600
$T7 = 664
$T8 = 728
$T9 = 760
$T10 = 824
$T11 = 856
$T12 = 888
$T13 = 968
$T14 = 1000
$T15 = 1032
$T16 = 1064
$T17 = 1128
$T18 = 1160
$T19 = 1220
tv235 = 1240
tv228 = 1240
tv214 = 1240
tv141 = 1240
tv79 = 1240
tv226 = 1248
tv171 = 1248
tv91 = 1248
tv68 = 1248
tv242 = 1256
tv230 = 1256
tv244 = 1264
tv220 = 1272
__$ArrayPad$ = 1280
this$ = 1328
n$ = 1336
index$ = 1344
parentIndex$ = 1352
?dtor$3@?0??addRight@tree_builder@@QEAAXPEAVnode@@HH@Z@4HA PROC ; `tree_builder::addRight'::`1'::dtor$3
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	lea	rcx, QWORD PTR $T9[rbp]
	call	??1?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@XZ ; std::vector<op,std::allocator<op> >::~vector<op,std::allocator<op> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$3@?0??addRight@tree_builder@@QEAAXPEAVnode@@HH@Z@4HA ENDP ; `tree_builder::addRight'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
operators$ = 8
currentExecNumber$ = 68
nextMaximumRight$ = 100
nextMaximumNode$5 = 136
$T6 = 600
$T7 = 664
$T8 = 728
$T9 = 760
$T10 = 824
$T11 = 856
$T12 = 888
$T13 = 968
$T14 = 1000
$T15 = 1032
$T16 = 1064
$T17 = 1128
$T18 = 1160
$T19 = 1220
tv235 = 1240
tv228 = 1240
tv214 = 1240
tv141 = 1240
tv79 = 1240
tv226 = 1248
tv171 = 1248
tv91 = 1248
tv68 = 1248
tv242 = 1256
tv230 = 1256
tv244 = 1264
tv220 = 1272
__$ArrayPad$ = 1280
this$ = 1328
n$ = 1336
index$ = 1344
parentIndex$ = 1352
?dtor$4@?0??addRight@tree_builder@@QEAAXPEAVnode@@HH@Z@4HA PROC ; `tree_builder::addRight'::`1'::dtor$4
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	lea	rcx, QWORD PTR nextMaximumNode$5[rbp]
	call	??1op@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$4@?0??addRight@tree_builder@@QEAAXPEAVnode@@HH@Z@4HA ENDP ; `tree_builder::addRight'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
operators$ = 8
currentExecNumber$ = 68
nextMaximumRight$ = 100
nextMaximumNode$5 = 136
$T6 = 600
$T7 = 664
$T8 = 728
$T9 = 760
$T10 = 824
$T11 = 856
$T12 = 888
$T13 = 968
$T14 = 1000
$T15 = 1032
$T16 = 1064
$T17 = 1128
$T18 = 1160
$T19 = 1220
tv235 = 1240
tv228 = 1240
tv214 = 1240
tv141 = 1240
tv79 = 1240
tv226 = 1248
tv171 = 1248
tv91 = 1248
tv68 = 1248
tv242 = 1256
tv230 = 1256
tv244 = 1264
tv220 = 1272
__$ArrayPad$ = 1280
this$ = 1328
n$ = 1336
index$ = 1344
parentIndex$ = 1352
?dtor$5@?0??addRight@tree_builder@@QEAAXPEAVnode@@HH@Z@4HA PROC ; `tree_builder::addRight'::`1'::dtor$5
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	mov	edx, 144				; 00000090H
	mov	rcx, QWORD PTR $T11[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$5@?0??addRight@tree_builder@@QEAAXPEAVnode@@HH@Z@4HA ENDP ; `tree_builder::addRight'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
operators$ = 8
currentExecNumber$ = 68
nextMaximumRight$ = 100
nextMaximumNode$5 = 136
$T6 = 600
$T7 = 664
$T8 = 728
$T9 = 760
$T10 = 824
$T11 = 856
$T12 = 888
$T13 = 968
$T14 = 1000
$T15 = 1032
$T16 = 1064
$T17 = 1128
$T18 = 1160
$T19 = 1220
tv235 = 1240
tv228 = 1240
tv214 = 1240
tv141 = 1240
tv79 = 1240
tv226 = 1248
tv171 = 1248
tv91 = 1248
tv68 = 1248
tv242 = 1256
tv230 = 1256
tv244 = 1264
tv220 = 1272
__$ArrayPad$ = 1280
this$ = 1328
n$ = 1336
index$ = 1344
parentIndex$ = 1352
?dtor$7@?0??addRight@tree_builder@@QEAAXPEAVnode@@HH@Z@4HA PROC ; `tree_builder::addRight'::`1'::dtor$7
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	mov	edx, 144				; 00000090H
	mov	rcx, QWORD PTR $T15[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$7@?0??addRight@tree_builder@@QEAAXPEAVnode@@HH@Z@4HA ENDP ; `tree_builder::addRight'::`1'::dtor$7
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
operators$ = 8
currentExecNumber$ = 68
nextMaximumRight$ = 100
nextMaximumNode$5 = 136
$T6 = 600
$T7 = 664
$T8 = 728
$T9 = 760
$T10 = 824
$T11 = 856
$T12 = 888
$T13 = 968
$T14 = 1000
$T15 = 1032
$T16 = 1064
$T17 = 1128
$T18 = 1160
$T19 = 1220
tv235 = 1240
tv228 = 1240
tv214 = 1240
tv141 = 1240
tv79 = 1240
tv226 = 1248
tv171 = 1248
tv91 = 1248
tv68 = 1248
tv242 = 1256
tv230 = 1256
tv244 = 1264
tv220 = 1272
__$ArrayPad$ = 1280
this$ = 1328
n$ = 1336
index$ = 1344
parentIndex$ = 1352
?dtor$8@?0??addRight@tree_builder@@QEAAXPEAVnode@@HH@Z@4HA PROC ; `tree_builder::addRight'::`1'::dtor$8
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	mov	eax, DWORD PTR $T19[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN18@dtor$8
	and	DWORD PTR $T19[rbp], -2
	lea	rcx, QWORD PTR $T18[rbp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
$LN18@dtor$8:
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$8@?0??addRight@tree_builder@@QEAAXPEAVnode@@HH@Z@4HA ENDP ; `tree_builder::addRight'::`1'::dtor$8
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\shtuk\Desktop\Files\EquationStringParser\EquationStringParser\tree_builder.h
;	COMDAT ?addLeft@tree_builder@@QEAAXPEAVnode@@H@Z
_TEXT	SEGMENT
currentExecNumber$4 = 4
nextMaximumLeft$5 = 36
nextMaximumNode$6 = 72
$T7 = 728
$T8 = 760
$T9 = 792
$T10 = 856
$T11 = 888
$T12 = 952
$T13 = 1016
$T14 = 1080
$T15 = 1112
$T16 = 1176
$T17 = 1208
$T18 = 1240
$T19 = 1320
$T20 = 1352
$T21 = 1384
$T22 = 1416
$T23 = 1480
$T24 = 1512
$T25 = 1572
tv277 = 1592
tv270 = 1592
tv246 = 1592
tv174 = 1592
tv144 = 1592
tv95 = 1592
tv290 = 1600
tv289 = 1600
tv268 = 1600
tv204 = 1600
tv156 = 1600
tv284 = 1608
tv272 = 1608
tv262 = 1608
tv286 = 1616
tv264 = 1616
tv252 = 1624
tv133 = 1624
__$ArrayPad$ = 1632
this$ = 1680
n$ = 1688
index$ = 1696
?addLeft@tree_builder@@QEAAXPEAVnode@@H@Z PROC		; tree_builder::addLeft, COMDAT

; 247  : 	{

$LN29:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 1704				; 000006a8H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 270				; 0000010eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+1736]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	mov	DWORD PTR $T25[rbp], 0
	lea	rcx, OFFSET FLAT:__3F6EDB1A_tree_builder@h
	call	__CheckForDebuggerJustMyCode

; 248  : 		if (index == 0)

	cmp	DWORD PTR index$[rbp], 0
	jne	$LN2@addLeft

; 249  : 		{
; 250  : 			n->left = new node(manager->getNumbers()[index]);

	mov	ecx, 144				; 00000090H
	call	??2@YAPEAX_K@Z				; operator new
	mov	QWORD PTR $T8[rbp], rax
	cmp	QWORD PTR $T8[rbp], 0
	je	$LN7@addLeft
	mov	edx, 144				; 00000090H
	mov	rcx, QWORD PTR $T8[rbp]
	call	?__autoclassinit2@node@@QEAAX_K@Z
	lea	rax, QWORD PTR $T9[rbp]
	mov	QWORD PTR $T10[rbp], rax
	movsxd	rax, DWORD PTR index$[rbp]
	mov	QWORD PTR tv95[rbp], rax
	lea	rdx, QWORD PTR $T11[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx]
	call	?getNumbers@expression@@QEAA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ ; expression::getNumbers
	mov	QWORD PTR tv289[rbp], rax
	mov	rax, QWORD PTR tv289[rbp]
	mov	QWORD PTR tv262[rbp], rax
	mov	eax, DWORD PTR $T25[rbp]
	or	eax, 1
	mov	DWORD PTR $T25[rbp], eax
	mov	rax, QWORD PTR tv95[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR tv262[rbp]
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@_K@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	mov	rdx, rax
	mov	rcx, QWORD PTR $T10[rbp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	QWORD PTR tv264[rbp], rax
	mov	rdx, QWORD PTR tv264[rbp]
	mov	rcx, QWORD PTR $T8[rbp]
	call	??0node@@QEAA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; node::node
	mov	QWORD PTR tv133[rbp], rax
	jmp	SHORT $LN8@addLeft
$LN7@addLeft:
	mov	QWORD PTR tv133[rbp], 0
$LN8@addLeft:
	mov	rax, QWORD PTR tv133[rbp]
	mov	QWORD PTR $T7[rbp], rax
	mov	rax, QWORD PTR n$[rbp]
	mov	rcx, QWORD PTR $T7[rbp]
	mov	QWORD PTR [rax+128], rcx
	mov	eax, DWORD PTR $T25[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN17@addLeft
	and	DWORD PTR $T25[rbp], -2
	lea	rcx, QWORD PTR $T11[rbp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
$LN17@addLeft:

; 251  : 			tree.nodes.push_back(n->left);

	mov	rax, QWORD PTR n$[rbp]
	add	rax, 128				; 00000080H
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 8
	mov	rdx, rax
	call	?push_back@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAXAEBQEAVnode@@@Z ; std::vector<node *,std::allocator<node *> >::push_back

; 252  : 		}

	jmp	$LN3@addLeft
$LN2@addLeft:

; 253  : 		else
; 254  : 		{
; 255  : 
; 256  : 			int currentExecNumber = manager->getOperators()[index].executionNumber;

	movsxd	rax, DWORD PTR index$[rbp]
	mov	QWORD PTR tv144[rbp], rax
	lea	rdx, QWORD PTR $T12[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx]
	call	?getOperators@expression@@QEAA?AV?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@XZ ; expression::getOperators
	mov	QWORD PTR tv268[rbp], rax
	mov	rax, QWORD PTR tv144[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR tv268[rbp]
	call	??A?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAAAEAUop@@_K@Z ; std::vector<op,std::allocator<op> >::operator[]
	mov	eax, DWORD PTR [rax+40]
	mov	DWORD PTR currentExecNumber$4[rbp], eax
	lea	rcx, QWORD PTR $T12[rbp]
	call	??1?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@XZ ; std::vector<op,std::allocator<op> >::~vector<op,std::allocator<op> >

; 257  : 
; 258  : 			int nextMaximumLeft = findMaxIndex(manager->getOperators(), 0, index, currentExecNumber);

	lea	rax, QWORD PTR $T13[rbp]
	mov	QWORD PTR $T14[rbp], rax
	mov	rdx, QWORD PTR $T14[rbp]
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	?getOperators@expression@@QEAA?AV?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@XZ ; expression::getOperators
	mov	QWORD PTR tv270[rbp], rax
	mov	eax, DWORD PTR currentExecNumber$4[rbp]
	mov	DWORD PTR [rsp+32], eax
	mov	r9d, DWORD PTR index$[rbp]
	xor	r8d, r8d
	mov	rdx, QWORD PTR tv270[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?findMaxIndex@tree_builder@@QEAAHV?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@HHH@Z ; tree_builder::findMaxIndex
	mov	DWORD PTR nextMaximumLeft$5[rbp], eax

; 259  : 
; 260  : 			if (nextMaximumLeft != -1)

	cmp	DWORD PTR nextMaximumLeft$5[rbp], -1
	je	$LN4@addLeft

; 261  : 			{
; 262  : 				op nextMaximumNode = (manager->getOperators()[nextMaximumLeft]);

	movsxd	rax, DWORD PTR nextMaximumLeft$5[rbp]
	mov	QWORD PTR tv174[rbp], rax
	lea	rdx, QWORD PTR $T15[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx]
	call	?getOperators@expression@@QEAA?AV?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@XZ ; expression::getOperators
	mov	QWORD PTR tv290[rbp], rax
	mov	rax, QWORD PTR tv290[rbp]
	mov	QWORD PTR tv272[rbp], rax
	mov	rax, QWORD PTR tv174[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR tv272[rbp]
	call	??A?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAAAEAUop@@_K@Z ; std::vector<op,std::allocator<op> >::operator[]
	mov	rdx, rax
	lea	rcx, QWORD PTR nextMaximumNode$6[rbp]
	call	??0op@@QEAA@AEBU0@@Z
	npad	1
	lea	rcx, QWORD PTR $T15[rbp]
	call	??1?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@XZ ; std::vector<op,std::allocator<op> >::~vector<op,std::allocator<op> >

; 263  : 				n->left = new node(nextMaximumNode);

	mov	ecx, 144				; 00000090H
	call	??2@YAPEAX_K@Z				; operator new
	mov	QWORD PTR $T17[rbp], rax
	cmp	QWORD PTR $T17[rbp], 0
	je	SHORT $LN9@addLeft
	mov	edx, 144				; 00000090H
	mov	rcx, QWORD PTR $T17[rbp]
	call	?__autoclassinit2@node@@QEAAX_K@Z
	lea	rax, QWORD PTR $T18[rbp]
	mov	QWORD PTR $T19[rbp], rax
	lea	rdx, QWORD PTR nextMaximumNode$6[rbp]
	mov	rcx, QWORD PTR $T19[rbp]
	call	??0op@@QEAA@AEBU0@@Z
	mov	QWORD PTR tv277[rbp], rax
	mov	rdx, QWORD PTR tv277[rbp]
	mov	rcx, QWORD PTR $T17[rbp]
	call	??0node@@QEAA@Uop@@@Z			; node::node
	mov	QWORD PTR tv204[rbp], rax
	jmp	SHORT $LN10@addLeft
$LN9@addLeft:
	mov	QWORD PTR tv204[rbp], 0
$LN10@addLeft:
	mov	rax, QWORD PTR tv204[rbp]
	mov	QWORD PTR $T16[rbp], rax
	mov	rax, QWORD PTR n$[rbp]
	mov	rcx, QWORD PTR $T16[rbp]
	mov	QWORD PTR [rax+128], rcx

; 264  : 				tree.nodes.push_back(n->left);

	mov	rax, QWORD PTR n$[rbp]
	add	rax, 128				; 00000080H
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 8
	mov	rdx, rax
	call	?push_back@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAXAEBQEAVnode@@@Z ; std::vector<node *,std::allocator<node *> >::push_back

; 265  : 
; 266  : 				addLeft(n->left, nextMaximumLeft);

	mov	r8d, DWORD PTR nextMaximumLeft$5[rbp]
	mov	rax, QWORD PTR n$[rbp]
	mov	rdx, QWORD PTR [rax+128]
	mov	rcx, QWORD PTR this$[rbp]
	call	?addLeft@tree_builder@@QEAAXPEAVnode@@H@Z ; tree_builder::addLeft

; 267  : 				addRight(n->left, nextMaximumLeft, index);

	mov	r9d, DWORD PTR index$[rbp]
	mov	r8d, DWORD PTR nextMaximumLeft$5[rbp]
	mov	rax, QWORD PTR n$[rbp]
	mov	rdx, QWORD PTR [rax+128]
	mov	rcx, QWORD PTR this$[rbp]
	call	?addRight@tree_builder@@QEAAXPEAVnode@@HH@Z ; tree_builder::addRight
	npad	1

; 268  : 			}

	lea	rcx, QWORD PTR nextMaximumNode$6[rbp]
	call	??1op@@QEAA@XZ
	jmp	$LN3@addLeft
$LN4@addLeft:

; 269  : 			else
; 270  : 			{
; 271  : 				n->left = new node(manager->getNumbers()[index]);

	mov	ecx, 144				; 00000090H
	call	??2@YAPEAX_K@Z				; operator new
	mov	QWORD PTR $T21[rbp], rax
	cmp	QWORD PTR $T21[rbp], 0
	je	$LN11@addLeft
	mov	edx, 144				; 00000090H
	mov	rcx, QWORD PTR $T21[rbp]
	call	?__autoclassinit2@node@@QEAAX_K@Z
	lea	rax, QWORD PTR $T22[rbp]
	mov	QWORD PTR $T23[rbp], rax
	movsxd	rax, DWORD PTR index$[rbp]
	mov	QWORD PTR tv246[rbp], rax
	lea	rdx, QWORD PTR $T24[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx]
	call	?getNumbers@expression@@QEAA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ ; expression::getNumbers
	mov	QWORD PTR tv156[rbp], rax
	mov	rax, QWORD PTR tv156[rbp]
	mov	QWORD PTR tv284[rbp], rax
	mov	eax, DWORD PTR $T25[rbp]
	or	eax, 2
	mov	DWORD PTR $T25[rbp], eax
	mov	rax, QWORD PTR tv246[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR tv284[rbp]
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@_K@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	mov	rdx, rax
	mov	rcx, QWORD PTR $T23[rbp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	QWORD PTR tv286[rbp], rax
	mov	rdx, QWORD PTR tv286[rbp]
	mov	rcx, QWORD PTR $T21[rbp]
	call	??0node@@QEAA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; node::node
	mov	QWORD PTR tv252[rbp], rax
	jmp	SHORT $LN12@addLeft
$LN11@addLeft:
	mov	QWORD PTR tv252[rbp], 0
$LN12@addLeft:
	mov	rax, QWORD PTR tv252[rbp]
	mov	QWORD PTR $T20[rbp], rax
	mov	rax, QWORD PTR n$[rbp]
	mov	rcx, QWORD PTR $T20[rbp]
	mov	QWORD PTR [rax+128], rcx
	mov	eax, DWORD PTR $T25[rbp]
	and	eax, 2
	test	eax, eax
	je	SHORT $LN28@addLeft
	and	DWORD PTR $T25[rbp], -3
	lea	rcx, QWORD PTR $T24[rbp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
$LN28@addLeft:

; 272  : 				tree.nodes.push_back(n->left);

	mov	rax, QWORD PTR n$[rbp]
	add	rax, 128				; 00000080H
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 8
	mov	rdx, rax
	call	?push_back@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAXAEBQEAVnode@@@Z ; std::vector<node *,std::allocator<node *> >::push_back
$LN3@addLeft:

; 273  : 			}
; 274  : 		}
; 275  : 	}

	lea	rcx, QWORD PTR [rbp-48]
	lea	rdx, OFFSET FLAT:?addLeft@tree_builder@@QEAAXPEAVnode@@H@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+1656]
	pop	rdi
	pop	rbp
	ret	0
?addLeft@tree_builder@@QEAAXPEAVnode@@H@Z ENDP		; tree_builder::addLeft
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
currentExecNumber$4 = 4
nextMaximumLeft$5 = 36
nextMaximumNode$6 = 72
$T7 = 728
$T8 = 760
$T9 = 792
$T10 = 856
$T11 = 888
$T12 = 952
$T13 = 1016
$T14 = 1080
$T15 = 1112
$T16 = 1176
$T17 = 1208
$T18 = 1240
$T19 = 1320
$T20 = 1352
$T21 = 1384
$T22 = 1416
$T23 = 1480
$T24 = 1512
$T25 = 1572
tv277 = 1592
tv270 = 1592
tv246 = 1592
tv174 = 1592
tv144 = 1592
tv95 = 1592
tv290 = 1600
tv289 = 1600
tv268 = 1600
tv204 = 1600
tv156 = 1600
tv284 = 1608
tv272 = 1608
tv262 = 1608
tv286 = 1616
tv264 = 1616
tv252 = 1624
tv133 = 1624
__$ArrayPad$ = 1632
this$ = 1680
n$ = 1688
index$ = 1696
?dtor$0@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA PROC ; `tree_builder::addLeft'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	mov	edx, 144				; 00000090H
	mov	rcx, QWORD PTR $T8[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA ENDP ; `tree_builder::addLeft'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
currentExecNumber$4 = 4
nextMaximumLeft$5 = 36
nextMaximumNode$6 = 72
$T7 = 728
$T8 = 760
$T9 = 792
$T10 = 856
$T11 = 888
$T12 = 952
$T13 = 1016
$T14 = 1080
$T15 = 1112
$T16 = 1176
$T17 = 1208
$T18 = 1240
$T19 = 1320
$T20 = 1352
$T21 = 1384
$T22 = 1416
$T23 = 1480
$T24 = 1512
$T25 = 1572
tv277 = 1592
tv270 = 1592
tv246 = 1592
tv174 = 1592
tv144 = 1592
tv95 = 1592
tv290 = 1600
tv289 = 1600
tv268 = 1600
tv204 = 1600
tv156 = 1600
tv284 = 1608
tv272 = 1608
tv262 = 1608
tv286 = 1616
tv264 = 1616
tv252 = 1624
tv133 = 1624
__$ArrayPad$ = 1632
this$ = 1680
n$ = 1688
index$ = 1696
?dtor$1@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA PROC ; `tree_builder::addLeft'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	mov	eax, DWORD PTR $T25[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN15@dtor$1
	and	DWORD PTR $T25[rbp], -2
	lea	rcx, QWORD PTR $T11[rbp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
$LN15@dtor$1:
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA ENDP ; `tree_builder::addLeft'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
currentExecNumber$4 = 4
nextMaximumLeft$5 = 36
nextMaximumNode$6 = 72
$T7 = 728
$T8 = 760
$T9 = 792
$T10 = 856
$T11 = 888
$T12 = 952
$T13 = 1016
$T14 = 1080
$T15 = 1112
$T16 = 1176
$T17 = 1208
$T18 = 1240
$T19 = 1320
$T20 = 1352
$T21 = 1384
$T22 = 1416
$T23 = 1480
$T24 = 1512
$T25 = 1572
tv277 = 1592
tv270 = 1592
tv246 = 1592
tv174 = 1592
tv144 = 1592
tv95 = 1592
tv290 = 1600
tv289 = 1600
tv268 = 1600
tv204 = 1600
tv156 = 1600
tv284 = 1608
tv272 = 1608
tv262 = 1608
tv286 = 1616
tv264 = 1616
tv252 = 1624
tv133 = 1624
__$ArrayPad$ = 1632
this$ = 1680
n$ = 1688
index$ = 1696
?dtor$5@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA PROC ; `tree_builder::addLeft'::`1'::dtor$5
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	lea	rcx, QWORD PTR $T15[rbp]
	call	??1?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@XZ ; std::vector<op,std::allocator<op> >::~vector<op,std::allocator<op> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$5@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA ENDP ; `tree_builder::addLeft'::`1'::dtor$5
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
currentExecNumber$4 = 4
nextMaximumLeft$5 = 36
nextMaximumNode$6 = 72
$T7 = 728
$T8 = 760
$T9 = 792
$T10 = 856
$T11 = 888
$T12 = 952
$T13 = 1016
$T14 = 1080
$T15 = 1112
$T16 = 1176
$T17 = 1208
$T18 = 1240
$T19 = 1320
$T20 = 1352
$T21 = 1384
$T22 = 1416
$T23 = 1480
$T24 = 1512
$T25 = 1572
tv277 = 1592
tv270 = 1592
tv246 = 1592
tv174 = 1592
tv144 = 1592
tv95 = 1592
tv290 = 1600
tv289 = 1600
tv268 = 1600
tv204 = 1600
tv156 = 1600
tv284 = 1608
tv272 = 1608
tv262 = 1608
tv286 = 1616
tv264 = 1616
tv252 = 1624
tv133 = 1624
__$ArrayPad$ = 1632
this$ = 1680
n$ = 1688
index$ = 1696
?dtor$6@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA PROC ; `tree_builder::addLeft'::`1'::dtor$6
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	lea	rcx, QWORD PTR nextMaximumNode$6[rbp]
	call	??1op@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$6@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA ENDP ; `tree_builder::addLeft'::`1'::dtor$6
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
currentExecNumber$4 = 4
nextMaximumLeft$5 = 36
nextMaximumNode$6 = 72
$T7 = 728
$T8 = 760
$T9 = 792
$T10 = 856
$T11 = 888
$T12 = 952
$T13 = 1016
$T14 = 1080
$T15 = 1112
$T16 = 1176
$T17 = 1208
$T18 = 1240
$T19 = 1320
$T20 = 1352
$T21 = 1384
$T22 = 1416
$T23 = 1480
$T24 = 1512
$T25 = 1572
tv277 = 1592
tv270 = 1592
tv246 = 1592
tv174 = 1592
tv144 = 1592
tv95 = 1592
tv290 = 1600
tv289 = 1600
tv268 = 1600
tv204 = 1600
tv156 = 1600
tv284 = 1608
tv272 = 1608
tv262 = 1608
tv286 = 1616
tv264 = 1616
tv252 = 1624
tv133 = 1624
__$ArrayPad$ = 1632
this$ = 1680
n$ = 1688
index$ = 1696
?dtor$7@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA PROC ; `tree_builder::addLeft'::`1'::dtor$7
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	mov	edx, 144				; 00000090H
	mov	rcx, QWORD PTR $T17[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$7@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA ENDP ; `tree_builder::addLeft'::`1'::dtor$7
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
currentExecNumber$4 = 4
nextMaximumLeft$5 = 36
nextMaximumNode$6 = 72
$T7 = 728
$T8 = 760
$T9 = 792
$T10 = 856
$T11 = 888
$T12 = 952
$T13 = 1016
$T14 = 1080
$T15 = 1112
$T16 = 1176
$T17 = 1208
$T18 = 1240
$T19 = 1320
$T20 = 1352
$T21 = 1384
$T22 = 1416
$T23 = 1480
$T24 = 1512
$T25 = 1572
tv277 = 1592
tv270 = 1592
tv246 = 1592
tv174 = 1592
tv144 = 1592
tv95 = 1592
tv290 = 1600
tv289 = 1600
tv268 = 1600
tv204 = 1600
tv156 = 1600
tv284 = 1608
tv272 = 1608
tv262 = 1608
tv286 = 1616
tv264 = 1616
tv252 = 1624
tv133 = 1624
__$ArrayPad$ = 1632
this$ = 1680
n$ = 1688
index$ = 1696
?dtor$9@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA PROC ; `tree_builder::addLeft'::`1'::dtor$9
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	mov	edx, 144				; 00000090H
	mov	rcx, QWORD PTR $T21[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$9@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA ENDP ; `tree_builder::addLeft'::`1'::dtor$9
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
currentExecNumber$4 = 4
nextMaximumLeft$5 = 36
nextMaximumNode$6 = 72
$T7 = 728
$T8 = 760
$T9 = 792
$T10 = 856
$T11 = 888
$T12 = 952
$T13 = 1016
$T14 = 1080
$T15 = 1112
$T16 = 1176
$T17 = 1208
$T18 = 1240
$T19 = 1320
$T20 = 1352
$T21 = 1384
$T22 = 1416
$T23 = 1480
$T24 = 1512
$T25 = 1572
tv277 = 1592
tv270 = 1592
tv246 = 1592
tv174 = 1592
tv144 = 1592
tv95 = 1592
tv290 = 1600
tv289 = 1600
tv268 = 1600
tv204 = 1600
tv156 = 1600
tv284 = 1608
tv272 = 1608
tv262 = 1608
tv286 = 1616
tv264 = 1616
tv252 = 1624
tv133 = 1624
__$ArrayPad$ = 1632
this$ = 1680
n$ = 1688
index$ = 1696
?dtor$10@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA PROC ; `tree_builder::addLeft'::`1'::dtor$10
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	mov	eax, DWORD PTR $T25[rbp]
	and	eax, 2
	test	eax, eax
	je	SHORT $LN26@dtor$10
	and	DWORD PTR $T25[rbp], -3
	lea	rcx, QWORD PTR $T24[rbp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
$LN26@dtor$10:
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$10@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA ENDP ; `tree_builder::addLeft'::`1'::dtor$10
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
currentExecNumber$4 = 4
nextMaximumLeft$5 = 36
nextMaximumNode$6 = 72
$T7 = 728
$T8 = 760
$T9 = 792
$T10 = 856
$T11 = 888
$T12 = 952
$T13 = 1016
$T14 = 1080
$T15 = 1112
$T16 = 1176
$T17 = 1208
$T18 = 1240
$T19 = 1320
$T20 = 1352
$T21 = 1384
$T22 = 1416
$T23 = 1480
$T24 = 1512
$T25 = 1572
tv277 = 1592
tv270 = 1592
tv246 = 1592
tv174 = 1592
tv144 = 1592
tv95 = 1592
tv290 = 1600
tv289 = 1600
tv268 = 1600
tv204 = 1600
tv156 = 1600
tv284 = 1608
tv272 = 1608
tv262 = 1608
tv286 = 1616
tv264 = 1616
tv252 = 1624
tv133 = 1624
__$ArrayPad$ = 1632
this$ = 1680
n$ = 1688
index$ = 1696
?dtor$0@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA PROC ; `tree_builder::addLeft'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	mov	edx, 144				; 00000090H
	mov	rcx, QWORD PTR $T8[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA ENDP ; `tree_builder::addLeft'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
currentExecNumber$4 = 4
nextMaximumLeft$5 = 36
nextMaximumNode$6 = 72
$T7 = 728
$T8 = 760
$T9 = 792
$T10 = 856
$T11 = 888
$T12 = 952
$T13 = 1016
$T14 = 1080
$T15 = 1112
$T16 = 1176
$T17 = 1208
$T18 = 1240
$T19 = 1320
$T20 = 1352
$T21 = 1384
$T22 = 1416
$T23 = 1480
$T24 = 1512
$T25 = 1572
tv277 = 1592
tv270 = 1592
tv246 = 1592
tv174 = 1592
tv144 = 1592
tv95 = 1592
tv290 = 1600
tv289 = 1600
tv268 = 1600
tv204 = 1600
tv156 = 1600
tv284 = 1608
tv272 = 1608
tv262 = 1608
tv286 = 1616
tv264 = 1616
tv252 = 1624
tv133 = 1624
__$ArrayPad$ = 1632
this$ = 1680
n$ = 1688
index$ = 1696
?dtor$1@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA PROC ; `tree_builder::addLeft'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	mov	eax, DWORD PTR $T25[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN15@dtor$1
	and	DWORD PTR $T25[rbp], -2
	lea	rcx, QWORD PTR $T11[rbp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
$LN15@dtor$1:
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA ENDP ; `tree_builder::addLeft'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
currentExecNumber$4 = 4
nextMaximumLeft$5 = 36
nextMaximumNode$6 = 72
$T7 = 728
$T8 = 760
$T9 = 792
$T10 = 856
$T11 = 888
$T12 = 952
$T13 = 1016
$T14 = 1080
$T15 = 1112
$T16 = 1176
$T17 = 1208
$T18 = 1240
$T19 = 1320
$T20 = 1352
$T21 = 1384
$T22 = 1416
$T23 = 1480
$T24 = 1512
$T25 = 1572
tv277 = 1592
tv270 = 1592
tv246 = 1592
tv174 = 1592
tv144 = 1592
tv95 = 1592
tv290 = 1600
tv289 = 1600
tv268 = 1600
tv204 = 1600
tv156 = 1600
tv284 = 1608
tv272 = 1608
tv262 = 1608
tv286 = 1616
tv264 = 1616
tv252 = 1624
tv133 = 1624
__$ArrayPad$ = 1632
this$ = 1680
n$ = 1688
index$ = 1696
?dtor$5@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA PROC ; `tree_builder::addLeft'::`1'::dtor$5
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	lea	rcx, QWORD PTR $T15[rbp]
	call	??1?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@XZ ; std::vector<op,std::allocator<op> >::~vector<op,std::allocator<op> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$5@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA ENDP ; `tree_builder::addLeft'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
currentExecNumber$4 = 4
nextMaximumLeft$5 = 36
nextMaximumNode$6 = 72
$T7 = 728
$T8 = 760
$T9 = 792
$T10 = 856
$T11 = 888
$T12 = 952
$T13 = 1016
$T14 = 1080
$T15 = 1112
$T16 = 1176
$T17 = 1208
$T18 = 1240
$T19 = 1320
$T20 = 1352
$T21 = 1384
$T22 = 1416
$T23 = 1480
$T24 = 1512
$T25 = 1572
tv277 = 1592
tv270 = 1592
tv246 = 1592
tv174 = 1592
tv144 = 1592
tv95 = 1592
tv290 = 1600
tv289 = 1600
tv268 = 1600
tv204 = 1600
tv156 = 1600
tv284 = 1608
tv272 = 1608
tv262 = 1608
tv286 = 1616
tv264 = 1616
tv252 = 1624
tv133 = 1624
__$ArrayPad$ = 1632
this$ = 1680
n$ = 1688
index$ = 1696
?dtor$6@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA PROC ; `tree_builder::addLeft'::`1'::dtor$6
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	lea	rcx, QWORD PTR nextMaximumNode$6[rbp]
	call	??1op@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$6@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA ENDP ; `tree_builder::addLeft'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
currentExecNumber$4 = 4
nextMaximumLeft$5 = 36
nextMaximumNode$6 = 72
$T7 = 728
$T8 = 760
$T9 = 792
$T10 = 856
$T11 = 888
$T12 = 952
$T13 = 1016
$T14 = 1080
$T15 = 1112
$T16 = 1176
$T17 = 1208
$T18 = 1240
$T19 = 1320
$T20 = 1352
$T21 = 1384
$T22 = 1416
$T23 = 1480
$T24 = 1512
$T25 = 1572
tv277 = 1592
tv270 = 1592
tv246 = 1592
tv174 = 1592
tv144 = 1592
tv95 = 1592
tv290 = 1600
tv289 = 1600
tv268 = 1600
tv204 = 1600
tv156 = 1600
tv284 = 1608
tv272 = 1608
tv262 = 1608
tv286 = 1616
tv264 = 1616
tv252 = 1624
tv133 = 1624
__$ArrayPad$ = 1632
this$ = 1680
n$ = 1688
index$ = 1696
?dtor$7@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA PROC ; `tree_builder::addLeft'::`1'::dtor$7
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	mov	edx, 144				; 00000090H
	mov	rcx, QWORD PTR $T17[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$7@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA ENDP ; `tree_builder::addLeft'::`1'::dtor$7
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
currentExecNumber$4 = 4
nextMaximumLeft$5 = 36
nextMaximumNode$6 = 72
$T7 = 728
$T8 = 760
$T9 = 792
$T10 = 856
$T11 = 888
$T12 = 952
$T13 = 1016
$T14 = 1080
$T15 = 1112
$T16 = 1176
$T17 = 1208
$T18 = 1240
$T19 = 1320
$T20 = 1352
$T21 = 1384
$T22 = 1416
$T23 = 1480
$T24 = 1512
$T25 = 1572
tv277 = 1592
tv270 = 1592
tv246 = 1592
tv174 = 1592
tv144 = 1592
tv95 = 1592
tv290 = 1600
tv289 = 1600
tv268 = 1600
tv204 = 1600
tv156 = 1600
tv284 = 1608
tv272 = 1608
tv262 = 1608
tv286 = 1616
tv264 = 1616
tv252 = 1624
tv133 = 1624
__$ArrayPad$ = 1632
this$ = 1680
n$ = 1688
index$ = 1696
?dtor$9@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA PROC ; `tree_builder::addLeft'::`1'::dtor$9
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	mov	edx, 144				; 00000090H
	mov	rcx, QWORD PTR $T21[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$9@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA ENDP ; `tree_builder::addLeft'::`1'::dtor$9
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
currentExecNumber$4 = 4
nextMaximumLeft$5 = 36
nextMaximumNode$6 = 72
$T7 = 728
$T8 = 760
$T9 = 792
$T10 = 856
$T11 = 888
$T12 = 952
$T13 = 1016
$T14 = 1080
$T15 = 1112
$T16 = 1176
$T17 = 1208
$T18 = 1240
$T19 = 1320
$T20 = 1352
$T21 = 1384
$T22 = 1416
$T23 = 1480
$T24 = 1512
$T25 = 1572
tv277 = 1592
tv270 = 1592
tv246 = 1592
tv174 = 1592
tv144 = 1592
tv95 = 1592
tv290 = 1600
tv289 = 1600
tv268 = 1600
tv204 = 1600
tv156 = 1600
tv284 = 1608
tv272 = 1608
tv262 = 1608
tv286 = 1616
tv264 = 1616
tv252 = 1624
tv133 = 1624
__$ArrayPad$ = 1632
this$ = 1680
n$ = 1688
index$ = 1696
?dtor$10@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA PROC ; `tree_builder::addLeft'::`1'::dtor$10
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	mov	eax, DWORD PTR $T25[rbp]
	and	eax, 2
	test	eax, eax
	je	SHORT $LN26@dtor$10
	and	DWORD PTR $T25[rbp], -3
	lea	rcx, QWORD PTR $T24[rbp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
$LN26@dtor$10:
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$10@?0??addLeft@tree_builder@@QEAAXPEAVnode@@H@Z@4HA ENDP ; `tree_builder::addLeft'::`1'::dtor$10
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\shtuk\Desktop\Files\EquationStringParser\EquationStringParser\tree_builder.h
;	COMDAT ?findMaxIndex@tree_builder@@QEAAHV?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@HHH@Z
_TEXT	SEGMENT
counter$ = 4
selectedIndex$ = 36
maxExecution$ = 68
<range>$L0$4 = 104
<begin>$L0$5 = 136
<end>$L0$6 = 168
oper$7 = 200
matchFound$8 = 276
<range>$L1$9 = 312
<begin>$L1$10 = 344
<end>$L1$11 = 376
n$12 = 408
$T13 = 628
__$ArrayPad$ = 648
this$ = 688
operators$ = 696
minIndex$ = 704
maxIndex$ = 712
currentExecutionNumber$ = 720
?findMaxIndex@tree_builder@@QEAAHV?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@HHH@Z PROC ; tree_builder::findMaxIndex, COMDAT

; 207  : 	{

$LN14:
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 696				; 000002b8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 118				; 00000076H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+728]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__3F6EDB1A_tree_builder@h
	call	__CheckForDebuggerJustMyCode

; 208  : 		int counter = 0;

	mov	DWORD PTR counter$[rbp], 0

; 209  : 		int selectedIndex = -1;

	mov	DWORD PTR selectedIndex$[rbp], -1

; 210  : 		int maxExecution = -1;

	mov	DWORD PTR maxExecution$[rbp], -1

; 211  : 
; 212  : 		for (op oper : operators)

	mov	rax, QWORD PTR operators$[rbp]
	mov	QWORD PTR <range>$L0$4[rbp], rax
	mov	rcx, QWORD PTR <range>$L0$4[rbp]
	call	?_Unchecked_begin@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAAPEAUop@@XZ ; std::vector<op,std::allocator<op> >::_Unchecked_begin
	mov	QWORD PTR <begin>$L0$5[rbp], rax
	mov	rcx, QWORD PTR <range>$L0$4[rbp]
	call	?_Unchecked_end@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAAPEAUop@@XZ ; std::vector<op,std::allocator<op> >::_Unchecked_end
	mov	QWORD PTR <end>$L0$6[rbp], rax
	jmp	SHORT $LN4@findMaxInd
$LN2@findMaxInd:
	mov	rax, QWORD PTR <begin>$L0$5[rbp]
	add	rax, 48					; 00000030H
	mov	QWORD PTR <begin>$L0$5[rbp], rax
$LN4@findMaxInd:
	mov	rax, QWORD PTR <end>$L0$6[rbp]
	cmp	QWORD PTR <begin>$L0$5[rbp], rax
	je	$LN3@findMaxInd
	mov	rdx, QWORD PTR <begin>$L0$5[rbp]
	lea	rcx, QWORD PTR oper$7[rbp]
	call	??0op@@QEAA@AEBU0@@Z
	npad	1

; 213  : 		{
; 214  : 			if (counter >= minIndex &&
; 215  : 				counter < maxIndex &&
; 216  : 				oper.executionNumber > maxExecution && 

	mov	eax, DWORD PTR minIndex$[rbp]
	cmp	DWORD PTR counter$[rbp], eax
	jl	$LN8@findMaxInd
	mov	eax, DWORD PTR maxIndex$[rbp]
	cmp	DWORD PTR counter$[rbp], eax
	jge	$LN8@findMaxInd
	mov	eax, DWORD PTR maxExecution$[rbp]
	cmp	DWORD PTR oper$7[rbp+40], eax
	jle	$LN8@findMaxInd
	mov	eax, DWORD PTR currentExecutionNumber$[rbp]
	cmp	DWORD PTR oper$7[rbp+40], eax
	jge	$LN8@findMaxInd

; 217  : 				oper.executionNumber < currentExecutionNumber)
; 218  : 			{
; 219  : 				bool matchFound = false;

	mov	BYTE PTR matchFound$8[rbp], 0

; 220  : 
; 221  : 				for (node * n : tree.nodes)

	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	QWORD PTR <range>$L1$9[rbp], rax
	mov	rcx, QWORD PTR <range>$L1$9[rbp]
	call	?_Unchecked_begin@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAPEAPEAVnode@@XZ ; std::vector<node *,std::allocator<node *> >::_Unchecked_begin
	mov	QWORD PTR <begin>$L1$10[rbp], rax
	mov	rcx, QWORD PTR <range>$L1$9[rbp]
	call	?_Unchecked_end@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAPEAPEAVnode@@XZ ; std::vector<node *,std::allocator<node *> >::_Unchecked_end
	mov	QWORD PTR <end>$L1$11[rbp], rax
	jmp	SHORT $LN7@findMaxInd
$LN5@findMaxInd:
	mov	rax, QWORD PTR <begin>$L1$10[rbp]
	add	rax, 8
	mov	QWORD PTR <begin>$L1$10[rbp], rax
$LN7@findMaxInd:
	mov	rax, QWORD PTR <end>$L1$11[rbp]
	cmp	QWORD PTR <begin>$L1$10[rbp], rax
	je	SHORT $LN6@findMaxInd
	mov	rax, QWORD PTR <begin>$L1$10[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR n$12[rbp], rax

; 222  : 				{
; 223  : 					if (oper.executionNumber == n->getOperatorNumber())

	mov	rcx, QWORD PTR n$12[rbp]
	call	?getOperatorNumber@node@@QEBAHXZ	; node::getOperatorNumber
	cmp	DWORD PTR oper$7[rbp+40], eax
	jne	SHORT $LN9@findMaxInd

; 224  : 					{
; 225  : 						matchFound = true;

	mov	BYTE PTR matchFound$8[rbp], 1

; 226  : 						break;

	jmp	SHORT $LN6@findMaxInd
$LN9@findMaxInd:

; 227  : 					}
; 228  : 				}

	jmp	SHORT $LN5@findMaxInd
$LN6@findMaxInd:

; 229  : 
; 230  : 				if (matchFound)

	movzx	eax, BYTE PTR matchFound$8[rbp]
	test	eax, eax
	je	SHORT $LN10@findMaxInd

; 231  : 				{
; 232  : 					counter++;

	mov	eax, DWORD PTR counter$[rbp]
	inc	eax
	mov	DWORD PTR counter$[rbp], eax

; 233  : 					continue;

	lea	rcx, QWORD PTR oper$7[rbp]
	call	??1op@@QEAA@XZ
	jmp	$LN2@findMaxInd
$LN10@findMaxInd:

; 234  : 				}
; 235  : 
; 236  : 				maxExecution = oper.executionNumber;

	mov	eax, DWORD PTR oper$7[rbp+40]
	mov	DWORD PTR maxExecution$[rbp], eax

; 237  : 				selectedIndex = counter;

	mov	eax, DWORD PTR counter$[rbp]
	mov	DWORD PTR selectedIndex$[rbp], eax
$LN8@findMaxInd:

; 238  : 			}
; 239  : 
; 240  : 			counter++;

	mov	eax, DWORD PTR counter$[rbp]
	inc	eax
	mov	DWORD PTR counter$[rbp], eax

; 241  : 		}

	lea	rcx, QWORD PTR oper$7[rbp]
	call	??1op@@QEAA@XZ
	jmp	$LN2@findMaxInd
$LN3@findMaxInd:

; 242  : 
; 243  : 		return selectedIndex;

	mov	eax, DWORD PTR selectedIndex$[rbp]
	mov	DWORD PTR $T13[rbp], eax
	mov	rcx, QWORD PTR operators$[rbp]
	call	??1?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@XZ ; std::vector<op,std::allocator<op> >::~vector<op,std::allocator<op> >
	mov	eax, DWORD PTR $T13[rbp]

; 244  : 	}

	mov	edi, eax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?findMaxIndex@tree_builder@@QEAAHV?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@HHH@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+664]
	pop	rdi
	pop	rbp
	ret	0
?findMaxIndex@tree_builder@@QEAAHV?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@HHH@Z ENDP ; tree_builder::findMaxIndex
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
counter$ = 4
selectedIndex$ = 36
maxExecution$ = 68
<range>$L0$4 = 104
<begin>$L0$5 = 136
<end>$L0$6 = 168
oper$7 = 200
matchFound$8 = 276
<range>$L1$9 = 312
<begin>$L1$10 = 344
<end>$L1$11 = 376
n$12 = 408
$T13 = 628
__$ArrayPad$ = 648
this$ = 688
operators$ = 696
minIndex$ = 704
maxIndex$ = 712
currentExecutionNumber$ = 720
?dtor$0@?0??findMaxIndex@tree_builder@@QEAAHV?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@HHH@Z@4HA PROC ; `tree_builder::findMaxIndex'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR operators$[rbp]
	call	??1?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@XZ ; std::vector<op,std::allocator<op> >::~vector<op,std::allocator<op> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??findMaxIndex@tree_builder@@QEAAHV?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@HHH@Z@4HA ENDP ; `tree_builder::findMaxIndex'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
counter$ = 4
selectedIndex$ = 36
maxExecution$ = 68
<range>$L0$4 = 104
<begin>$L0$5 = 136
<end>$L0$6 = 168
oper$7 = 200
matchFound$8 = 276
<range>$L1$9 = 312
<begin>$L1$10 = 344
<end>$L1$11 = 376
n$12 = 408
$T13 = 628
__$ArrayPad$ = 648
this$ = 688
operators$ = 696
minIndex$ = 704
maxIndex$ = 712
currentExecutionNumber$ = 720
?dtor$1@?0??findMaxIndex@tree_builder@@QEAAHV?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@HHH@Z@4HA PROC ; `tree_builder::findMaxIndex'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR oper$7[rbp]
	call	??1op@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0??findMaxIndex@tree_builder@@QEAAHV?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@HHH@Z@4HA ENDP ; `tree_builder::findMaxIndex'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
counter$ = 4
selectedIndex$ = 36
maxExecution$ = 68
<range>$L0$4 = 104
<begin>$L0$5 = 136
<end>$L0$6 = 168
oper$7 = 200
matchFound$8 = 276
<range>$L1$9 = 312
<begin>$L1$10 = 344
<end>$L1$11 = 376
n$12 = 408
$T13 = 628
__$ArrayPad$ = 648
this$ = 688
operators$ = 696
minIndex$ = 704
maxIndex$ = 712
currentExecutionNumber$ = 720
?dtor$0@?0??findMaxIndex@tree_builder@@QEAAHV?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@HHH@Z@4HA PROC ; `tree_builder::findMaxIndex'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR operators$[rbp]
	call	??1?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@XZ ; std::vector<op,std::allocator<op> >::~vector<op,std::allocator<op> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??findMaxIndex@tree_builder@@QEAAHV?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@HHH@Z@4HA ENDP ; `tree_builder::findMaxIndex'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
counter$ = 4
selectedIndex$ = 36
maxExecution$ = 68
<range>$L0$4 = 104
<begin>$L0$5 = 136
<end>$L0$6 = 168
oper$7 = 200
matchFound$8 = 276
<range>$L1$9 = 312
<begin>$L1$10 = 344
<end>$L1$11 = 376
n$12 = 408
$T13 = 628
__$ArrayPad$ = 648
this$ = 688
operators$ = 696
minIndex$ = 704
maxIndex$ = 712
currentExecutionNumber$ = 720
?dtor$1@?0??findMaxIndex@tree_builder@@QEAAHV?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@HHH@Z@4HA PROC ; `tree_builder::findMaxIndex'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR oper$7[rbp]
	call	??1op@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0??findMaxIndex@tree_builder@@QEAAHV?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@HHH@Z@4HA ENDP ; `tree_builder::findMaxIndex'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\shtuk\Desktop\Files\EquationStringParser\EquationStringParser\tree_builder.h
;	COMDAT ?get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
left_str$5 = 8
right_str$6 = 72
$T7 = 520
$T8 = 584
$T9 = 664
$T10 = 728
$T11 = 792
$T12 = 856
$T13 = 920
$T14 = 984
tv167 = 1032
tv79 = 1032
tv171 = 1040
tv135 = 1048
tv76 = 1056
tv173 = 1064
tv184 = 1072
tv175 = 1080
tv185 = 1088
tv177 = 1096
tv186 = 1104
tv179 = 1112
tv187 = 1120
tv181 = 1128
tv183 = 1136
__$ArrayPad$ = 1144
this$ = 1184
n$ = 1192
eq$ = 1200
?get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; tree_builder::get_string, COMDAT

; 190  : 	{

$LN15:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 1192				; 000004a8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 194				; 000000c2H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+1224]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__3F6EDB1A_tree_builder@h
	call	__CheckForDebuggerJustMyCode

; 191  : 		if (n->IsConstant())

	mov	rcx, QWORD PTR n$[rbp]
	call	?IsConstant@node@@QEBA_NXZ		; node::IsConstant
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@get_string

; 192  : 		{
; 193  : 			eq = n->getConstant();

	lea	rdx, QWORD PTR $T7[rbp]
	mov	rcx, QWORD PTR n$[rbp]
	call	?getConstant@node@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; node::getConstant
	mov	QWORD PTR tv167[rbp], rax
	mov	rdx, QWORD PTR tv167[rbp]
	mov	rcx, QWORD PTR eq$[rbp]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	lea	rcx, QWORD PTR $T7[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 194  : 		}

	jmp	$LN3@get_string
$LN2@get_string:

; 195  : 		else
; 196  : 		{
; 197  : 			std::string left_str;

	lea	rcx, QWORD PTR left_str$5[rbp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 198  : 			std::string right_str;

	lea	rcx, QWORD PTR right_str$6[rbp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 199  : 
; 200  : 			get_string(n->left, left_str);

	lea	r8, QWORD PTR left_str$5[rbp]
	mov	rax, QWORD PTR n$[rbp]
	mov	rdx, QWORD PTR [rax+128]
	mov	rcx, QWORD PTR this$[rbp]
	call	?get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; tree_builder::get_string

; 201  : 			get_string(n->right, right_str);

	lea	r8, QWORD PTR right_str$6[rbp]
	mov	rax, QWORD PTR n$[rbp]
	mov	rdx, QWORD PTR [rax+136]
	mov	rcx, QWORD PTR this$[rbp]
	call	?get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; tree_builder::get_string

; 202  : 			eq = "(" + left_str + " " + n->getOperator().name + " " + right_str + ")";

	lea	rdx, QWORD PTR $T8[rbp]
	mov	rcx, QWORD PTR n$[rbp]
	call	?getOperator@node@@QEBA?AUop@@XZ	; node::getOperator
	mov	QWORD PTR tv79[rbp], rax
	mov	rax, QWORD PTR tv79[rbp]
	mov	QWORD PTR tv171[rbp], rax
	mov	rax, QWORD PTR tv171[rbp]
	mov	QWORD PTR tv135[rbp], rax
	lea	r8, QWORD PTR left_str$5[rbp]
	lea	rdx, OFFSET FLAT:??_C@_01ODHLEDKK@?$CI@
	lea	rcx, QWORD PTR $T9[rbp]
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBDAEBV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	mov	QWORD PTR tv76[rbp], rax
	mov	rax, QWORD PTR tv76[rbp]
	mov	QWORD PTR tv173[rbp], rax
	lea	r8, OFFSET FLAT:??_C@_01CLKCMJKC@?5@
	mov	rdx, QWORD PTR tv173[rbp]
	lea	rcx, QWORD PTR $T10[rbp]
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	mov	QWORD PTR tv184[rbp], rax
	mov	rax, QWORD PTR tv184[rbp]
	mov	QWORD PTR tv175[rbp], rax
	mov	rax, QWORD PTR tv135[rbp]
	mov	r8, rax
	mov	rdx, QWORD PTR tv175[rbp]
	lea	rcx, QWORD PTR $T11[rbp]
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	mov	QWORD PTR tv185[rbp], rax
	mov	rax, QWORD PTR tv185[rbp]
	mov	QWORD PTR tv177[rbp], rax
	lea	r8, OFFSET FLAT:??_C@_01CLKCMJKC@?5@
	mov	rdx, QWORD PTR tv177[rbp]
	lea	rcx, QWORD PTR $T12[rbp]
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	mov	QWORD PTR tv186[rbp], rax
	mov	rax, QWORD PTR tv186[rbp]
	mov	QWORD PTR tv179[rbp], rax
	lea	r8, QWORD PTR right_str$6[rbp]
	mov	rdx, QWORD PTR tv179[rbp]
	lea	rcx, QWORD PTR $T13[rbp]
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	mov	QWORD PTR tv187[rbp], rax
	mov	rax, QWORD PTR tv187[rbp]
	mov	QWORD PTR tv181[rbp], rax
	lea	r8, OFFSET FLAT:??_C@_01PKGAHCOL@?$CJ@
	mov	rdx, QWORD PTR tv181[rbp]
	lea	rcx, QWORD PTR $T14[rbp]
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	mov	QWORD PTR tv183[rbp], rax
	mov	rdx, QWORD PTR tv183[rbp]
	mov	rcx, QWORD PTR eq$[rbp]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	lea	rcx, QWORD PTR $T14[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR $T13[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR $T12[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR $T11[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR $T10[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR $T9[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR $T8[rbp]
	call	??1op@@QEAA@XZ
	npad	1

; 203  : 		}

	lea	rcx, QWORD PTR right_str$6[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR left_str$5[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN3@get_string:

; 204  : 	}

	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+1160]
	pop	rdi
	pop	rbp
	ret	0
?get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; tree_builder::get_string
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
left_str$5 = 8
right_str$6 = 72
$T7 = 520
$T8 = 584
$T9 = 664
$T10 = 728
$T11 = 792
$T12 = 856
$T13 = 920
$T14 = 984
tv167 = 1032
tv79 = 1032
tv171 = 1040
tv135 = 1048
tv76 = 1056
tv173 = 1064
tv184 = 1072
tv175 = 1080
tv185 = 1088
tv177 = 1096
tv186 = 1104
tv179 = 1112
tv187 = 1120
tv181 = 1128
tv183 = 1136
__$ArrayPad$ = 1144
this$ = 1184
n$ = 1192
eq$ = 1200
?dtor$1@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `tree_builder::get_string'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR left_str$5[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `tree_builder::get_string'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
left_str$5 = 8
right_str$6 = 72
$T7 = 520
$T8 = 584
$T9 = 664
$T10 = 728
$T11 = 792
$T12 = 856
$T13 = 920
$T14 = 984
tv167 = 1032
tv79 = 1032
tv171 = 1040
tv135 = 1048
tv76 = 1056
tv173 = 1064
tv184 = 1072
tv175 = 1080
tv185 = 1088
tv177 = 1096
tv186 = 1104
tv179 = 1112
tv187 = 1120
tv181 = 1128
tv183 = 1136
__$ArrayPad$ = 1144
this$ = 1184
n$ = 1192
eq$ = 1200
?dtor$2@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `tree_builder::get_string'::`1'::dtor$2
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR right_str$6[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$2@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `tree_builder::get_string'::`1'::dtor$2
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
left_str$5 = 8
right_str$6 = 72
$T7 = 520
$T8 = 584
$T9 = 664
$T10 = 728
$T11 = 792
$T12 = 856
$T13 = 920
$T14 = 984
tv167 = 1032
tv79 = 1032
tv171 = 1040
tv135 = 1048
tv76 = 1056
tv173 = 1064
tv184 = 1072
tv175 = 1080
tv185 = 1088
tv177 = 1096
tv186 = 1104
tv179 = 1112
tv187 = 1120
tv181 = 1128
tv183 = 1136
__$ArrayPad$ = 1144
this$ = 1184
n$ = 1192
eq$ = 1200
?dtor$3@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `tree_builder::get_string'::`1'::dtor$3
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR $T8[rbp]
	call	??1op@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$3@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `tree_builder::get_string'::`1'::dtor$3
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
left_str$5 = 8
right_str$6 = 72
$T7 = 520
$T8 = 584
$T9 = 664
$T10 = 728
$T11 = 792
$T12 = 856
$T13 = 920
$T14 = 984
tv167 = 1032
tv79 = 1032
tv171 = 1040
tv135 = 1048
tv76 = 1056
tv173 = 1064
tv184 = 1072
tv175 = 1080
tv185 = 1088
tv177 = 1096
tv186 = 1104
tv179 = 1112
tv187 = 1120
tv181 = 1128
tv183 = 1136
__$ArrayPad$ = 1144
this$ = 1184
n$ = 1192
eq$ = 1200
?dtor$4@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `tree_builder::get_string'::`1'::dtor$4
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR $T9[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$4@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `tree_builder::get_string'::`1'::dtor$4
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
left_str$5 = 8
right_str$6 = 72
$T7 = 520
$T8 = 584
$T9 = 664
$T10 = 728
$T11 = 792
$T12 = 856
$T13 = 920
$T14 = 984
tv167 = 1032
tv79 = 1032
tv171 = 1040
tv135 = 1048
tv76 = 1056
tv173 = 1064
tv184 = 1072
tv175 = 1080
tv185 = 1088
tv177 = 1096
tv186 = 1104
tv179 = 1112
tv187 = 1120
tv181 = 1128
tv183 = 1136
__$ArrayPad$ = 1144
this$ = 1184
n$ = 1192
eq$ = 1200
?dtor$5@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `tree_builder::get_string'::`1'::dtor$5
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR $T10[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$5@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `tree_builder::get_string'::`1'::dtor$5
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
left_str$5 = 8
right_str$6 = 72
$T7 = 520
$T8 = 584
$T9 = 664
$T10 = 728
$T11 = 792
$T12 = 856
$T13 = 920
$T14 = 984
tv167 = 1032
tv79 = 1032
tv171 = 1040
tv135 = 1048
tv76 = 1056
tv173 = 1064
tv184 = 1072
tv175 = 1080
tv185 = 1088
tv177 = 1096
tv186 = 1104
tv179 = 1112
tv187 = 1120
tv181 = 1128
tv183 = 1136
__$ArrayPad$ = 1144
this$ = 1184
n$ = 1192
eq$ = 1200
?dtor$6@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `tree_builder::get_string'::`1'::dtor$6
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR $T11[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$6@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `tree_builder::get_string'::`1'::dtor$6
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
left_str$5 = 8
right_str$6 = 72
$T7 = 520
$T8 = 584
$T9 = 664
$T10 = 728
$T11 = 792
$T12 = 856
$T13 = 920
$T14 = 984
tv167 = 1032
tv79 = 1032
tv171 = 1040
tv135 = 1048
tv76 = 1056
tv173 = 1064
tv184 = 1072
tv175 = 1080
tv185 = 1088
tv177 = 1096
tv186 = 1104
tv179 = 1112
tv187 = 1120
tv181 = 1128
tv183 = 1136
__$ArrayPad$ = 1144
this$ = 1184
n$ = 1192
eq$ = 1200
?dtor$7@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `tree_builder::get_string'::`1'::dtor$7
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR $T12[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$7@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `tree_builder::get_string'::`1'::dtor$7
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
left_str$5 = 8
right_str$6 = 72
$T7 = 520
$T8 = 584
$T9 = 664
$T10 = 728
$T11 = 792
$T12 = 856
$T13 = 920
$T14 = 984
tv167 = 1032
tv79 = 1032
tv171 = 1040
tv135 = 1048
tv76 = 1056
tv173 = 1064
tv184 = 1072
tv175 = 1080
tv185 = 1088
tv177 = 1096
tv186 = 1104
tv179 = 1112
tv187 = 1120
tv181 = 1128
tv183 = 1136
__$ArrayPad$ = 1144
this$ = 1184
n$ = 1192
eq$ = 1200
?dtor$8@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `tree_builder::get_string'::`1'::dtor$8
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR $T13[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$8@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `tree_builder::get_string'::`1'::dtor$8
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
left_str$5 = 8
right_str$6 = 72
$T7 = 520
$T8 = 584
$T9 = 664
$T10 = 728
$T11 = 792
$T12 = 856
$T13 = 920
$T14 = 984
tv167 = 1032
tv79 = 1032
tv171 = 1040
tv135 = 1048
tv76 = 1056
tv173 = 1064
tv184 = 1072
tv175 = 1080
tv185 = 1088
tv177 = 1096
tv186 = 1104
tv179 = 1112
tv187 = 1120
tv181 = 1128
tv183 = 1136
__$ArrayPad$ = 1144
this$ = 1184
n$ = 1192
eq$ = 1200
?dtor$1@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `tree_builder::get_string'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR left_str$5[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `tree_builder::get_string'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
left_str$5 = 8
right_str$6 = 72
$T7 = 520
$T8 = 584
$T9 = 664
$T10 = 728
$T11 = 792
$T12 = 856
$T13 = 920
$T14 = 984
tv167 = 1032
tv79 = 1032
tv171 = 1040
tv135 = 1048
tv76 = 1056
tv173 = 1064
tv184 = 1072
tv175 = 1080
tv185 = 1088
tv177 = 1096
tv186 = 1104
tv179 = 1112
tv187 = 1120
tv181 = 1128
tv183 = 1136
__$ArrayPad$ = 1144
this$ = 1184
n$ = 1192
eq$ = 1200
?dtor$2@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `tree_builder::get_string'::`1'::dtor$2
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR right_str$6[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$2@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `tree_builder::get_string'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
left_str$5 = 8
right_str$6 = 72
$T7 = 520
$T8 = 584
$T9 = 664
$T10 = 728
$T11 = 792
$T12 = 856
$T13 = 920
$T14 = 984
tv167 = 1032
tv79 = 1032
tv171 = 1040
tv135 = 1048
tv76 = 1056
tv173 = 1064
tv184 = 1072
tv175 = 1080
tv185 = 1088
tv177 = 1096
tv186 = 1104
tv179 = 1112
tv187 = 1120
tv181 = 1128
tv183 = 1136
__$ArrayPad$ = 1144
this$ = 1184
n$ = 1192
eq$ = 1200
?dtor$3@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `tree_builder::get_string'::`1'::dtor$3
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR $T8[rbp]
	call	??1op@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$3@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `tree_builder::get_string'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
left_str$5 = 8
right_str$6 = 72
$T7 = 520
$T8 = 584
$T9 = 664
$T10 = 728
$T11 = 792
$T12 = 856
$T13 = 920
$T14 = 984
tv167 = 1032
tv79 = 1032
tv171 = 1040
tv135 = 1048
tv76 = 1056
tv173 = 1064
tv184 = 1072
tv175 = 1080
tv185 = 1088
tv177 = 1096
tv186 = 1104
tv179 = 1112
tv187 = 1120
tv181 = 1128
tv183 = 1136
__$ArrayPad$ = 1144
this$ = 1184
n$ = 1192
eq$ = 1200
?dtor$4@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `tree_builder::get_string'::`1'::dtor$4
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR $T9[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$4@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `tree_builder::get_string'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
left_str$5 = 8
right_str$6 = 72
$T7 = 520
$T8 = 584
$T9 = 664
$T10 = 728
$T11 = 792
$T12 = 856
$T13 = 920
$T14 = 984
tv167 = 1032
tv79 = 1032
tv171 = 1040
tv135 = 1048
tv76 = 1056
tv173 = 1064
tv184 = 1072
tv175 = 1080
tv185 = 1088
tv177 = 1096
tv186 = 1104
tv179 = 1112
tv187 = 1120
tv181 = 1128
tv183 = 1136
__$ArrayPad$ = 1144
this$ = 1184
n$ = 1192
eq$ = 1200
?dtor$5@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `tree_builder::get_string'::`1'::dtor$5
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR $T10[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$5@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `tree_builder::get_string'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
left_str$5 = 8
right_str$6 = 72
$T7 = 520
$T8 = 584
$T9 = 664
$T10 = 728
$T11 = 792
$T12 = 856
$T13 = 920
$T14 = 984
tv167 = 1032
tv79 = 1032
tv171 = 1040
tv135 = 1048
tv76 = 1056
tv173 = 1064
tv184 = 1072
tv175 = 1080
tv185 = 1088
tv177 = 1096
tv186 = 1104
tv179 = 1112
tv187 = 1120
tv181 = 1128
tv183 = 1136
__$ArrayPad$ = 1144
this$ = 1184
n$ = 1192
eq$ = 1200
?dtor$6@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `tree_builder::get_string'::`1'::dtor$6
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR $T11[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$6@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `tree_builder::get_string'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
left_str$5 = 8
right_str$6 = 72
$T7 = 520
$T8 = 584
$T9 = 664
$T10 = 728
$T11 = 792
$T12 = 856
$T13 = 920
$T14 = 984
tv167 = 1032
tv79 = 1032
tv171 = 1040
tv135 = 1048
tv76 = 1056
tv173 = 1064
tv184 = 1072
tv175 = 1080
tv185 = 1088
tv177 = 1096
tv186 = 1104
tv179 = 1112
tv187 = 1120
tv181 = 1128
tv183 = 1136
__$ArrayPad$ = 1144
this$ = 1184
n$ = 1192
eq$ = 1200
?dtor$7@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `tree_builder::get_string'::`1'::dtor$7
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR $T12[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$7@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `tree_builder::get_string'::`1'::dtor$7
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
left_str$5 = 8
right_str$6 = 72
$T7 = 520
$T8 = 584
$T9 = 664
$T10 = 728
$T11 = 792
$T12 = 856
$T13 = 920
$T14 = 984
tv167 = 1032
tv79 = 1032
tv171 = 1040
tv135 = 1048
tv76 = 1056
tv173 = 1064
tv184 = 1072
tv175 = 1080
tv185 = 1088
tv177 = 1096
tv186 = 1104
tv179 = 1112
tv187 = 1120
tv181 = 1128
tv183 = 1136
__$ArrayPad$ = 1144
this$ = 1184
n$ = 1192
eq$ = 1200
?dtor$8@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `tree_builder::get_string'::`1'::dtor$8
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR $T13[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$8@?0??get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `tree_builder::get_string'::`1'::dtor$8
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\shtuk\Desktop\Files\EquationStringParser\EquationStringParser\tree_builder.h
;	COMDAT ?random_to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
n$ = 8
eq$ = 40
$T4 = 292
__$ArrayPad$ = 312
this$ = 352
__$ReturnUdt$ = 360
?random_to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; tree_builder::random_to_string, COMDAT

; 179  : 	{

$LN6:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 360				; 00000168H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 34					; 00000022H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+392]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	mov	DWORD PTR $T4[rbp], 0
	lea	rcx, OFFSET FLAT:__3F6EDB1A_tree_builder@h
	call	__CheckForDebuggerJustMyCode

; 180  : 		node *n = tree.nodes.front();

	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	rcx, rax
	call	?front@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAAEAPEAVnode@@XZ ; std::vector<node *,std::allocator<node *> >::front
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR n$[rbp], rax

; 181  : 
; 182  : 		std::string eq = "";

	lea	rdx, OFFSET FLAT:??_C@_00CNPNBAHC@@
	lea	rcx, QWORD PTR eq$[rbp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 183  : 
; 184  : 		get_string(n, eq);

	lea	r8, QWORD PTR eq$[rbp]
	mov	rdx, QWORD PTR n$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; tree_builder::get_string

; 185  : 
; 186  : 		return eq;

	lea	rdx, QWORD PTR eq$[rbp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T4[rbp]
	or	eax, 1
	mov	DWORD PTR $T4[rbp], eax
	lea	rcx, QWORD PTR eq$[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]

; 187  : 	}

	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?random_to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
?random_to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; tree_builder::random_to_string
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
n$ = 8
eq$ = 40
$T4 = 292
__$ArrayPad$ = 312
this$ = 352
__$ReturnUdt$ = 360
?dtor$0@?0??random_to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `tree_builder::random_to_string'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR eq$[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??random_to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `tree_builder::random_to_string'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
n$ = 8
eq$ = 40
$T4 = 292
__$ArrayPad$ = 312
this$ = 352
__$ReturnUdt$ = 360
?dtor$0@?0??random_to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `tree_builder::random_to_string'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR eq$[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??random_to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `tree_builder::random_to_string'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\shtuk\Desktop\Files\EquationStringParser\EquationStringParser\tree_builder.h
;	COMDAT ?to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
operators$ = 8
numberOfOperators$ = 68
n$ = 104
eq$ = 136
$T5 = 388
__$ArrayPad$ = 408
this$ = 448
__$ReturnUdt$ = 456
?to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; tree_builder::to_string, COMDAT

; 164  : 	{

$LN7:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 456				; 000001c8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+488]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	mov	DWORD PTR $T5[rbp], 0
	lea	rcx, OFFSET FLAT:__3F6EDB1A_tree_builder@h
	call	__CheckForDebuggerJustMyCode

; 165  : 		std::vector<op> operators = manager->getOperators();

	mov	edx, 32					; 00000020H
	lea	rcx, QWORD PTR operators$[rbp]
	call	?__autoclassinit2@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAAX_K@Z
	lea	rdx, QWORD PTR operators$[rbp]
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	?getOperators@expression@@QEAA?AV?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@XZ ; expression::getOperators
	npad	1

; 166  : 
; 167  : 		int numberOfOperators = (int)operators.size() - 1;

	lea	rcx, QWORD PTR operators$[rbp]
	call	?size@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEBA_KXZ ; std::vector<op,std::allocator<op> >::size
	dec	eax
	mov	DWORD PTR numberOfOperators$[rbp], eax

; 168  : 
; 169  : 		node *n = tree.getNodeByNumber(numberOfOperators);

	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	edx, DWORD PTR numberOfOperators$[rbp]
	mov	rcx, rax
	call	?getNodeByNumber@binary_tree@@QEAAPEAVnode@@H@Z ; binary_tree::getNodeByNumber
	mov	QWORD PTR n$[rbp], rax

; 170  : 
; 171  : 		std::string eq = "";

	lea	rdx, OFFSET FLAT:??_C@_00CNPNBAHC@@
	lea	rcx, QWORD PTR eq$[rbp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 172  : 
; 173  : 		get_string(n, eq);

	lea	r8, QWORD PTR eq$[rbp]
	mov	rdx, QWORD PTR n$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?get_string@tree_builder@@QEAAXPEAVnode@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; tree_builder::get_string

; 174  : 
; 175  : 		return eq;

	lea	rdx, QWORD PTR eq$[rbp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T5[rbp]
	or	eax, 1
	mov	DWORD PTR $T5[rbp], eax
	lea	rcx, QWORD PTR eq$[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR operators$[rbp]
	call	??1?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@XZ ; std::vector<op,std::allocator<op> >::~vector<op,std::allocator<op> >
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]

; 176  : 	}

	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+424]
	pop	rdi
	pop	rbp
	ret	0
?to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; tree_builder::to_string
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
operators$ = 8
numberOfOperators$ = 68
n$ = 104
eq$ = 136
$T5 = 388
__$ArrayPad$ = 408
this$ = 448
__$ReturnUdt$ = 456
?dtor$0@?0??to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `tree_builder::to_string'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR operators$[rbp]
	call	??1?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@XZ ; std::vector<op,std::allocator<op> >::~vector<op,std::allocator<op> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `tree_builder::to_string'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
operators$ = 8
numberOfOperators$ = 68
n$ = 104
eq$ = 136
$T5 = 388
__$ArrayPad$ = 408
this$ = 448
__$ReturnUdt$ = 456
?dtor$1@?0??to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `tree_builder::to_string'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR eq$[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0??to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `tree_builder::to_string'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
operators$ = 8
numberOfOperators$ = 68
n$ = 104
eq$ = 136
$T5 = 388
__$ArrayPad$ = 408
this$ = 448
__$ReturnUdt$ = 456
?dtor$0@?0??to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `tree_builder::to_string'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR operators$[rbp]
	call	??1?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@XZ ; std::vector<op,std::allocator<op> >::~vector<op,std::allocator<op> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `tree_builder::to_string'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
operators$ = 8
numberOfOperators$ = 68
n$ = 104
eq$ = 136
$T5 = 388
__$ArrayPad$ = 408
this$ = 448
__$ReturnUdt$ = 456
?dtor$1@?0??to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `tree_builder::to_string'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR eq$[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0??to_string@tree_builder@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `tree_builder::to_string'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\shtuk\Desktop\Files\EquationStringParser\EquationStringParser\tree_builder.h
;	COMDAT ?print_tree@tree_builder@@QEAAXXZ
_TEXT	SEGMENT
operators$ = 8
numberOfOperators$ = 68
n$ = 104
__$ArrayPad$ = 312
this$ = 352
?print_tree@tree_builder@@QEAAXXZ PROC			; tree_builder::print_tree, COMDAT

; 153  : 	{

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 360				; 00000168H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 34					; 00000022H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+392]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__3F6EDB1A_tree_builder@h
	call	__CheckForDebuggerJustMyCode

; 154  : 		std::vector<op> operators = manager->getOperators();

	mov	edx, 32					; 00000020H
	lea	rcx, QWORD PTR operators$[rbp]
	call	?__autoclassinit2@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAAX_K@Z
	lea	rdx, QWORD PTR operators$[rbp]
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	?getOperators@expression@@QEAA?AV?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@XZ ; expression::getOperators
	npad	1

; 155  : 
; 156  : 		int numberOfOperators = (int)operators.size() - 1;

	lea	rcx, QWORD PTR operators$[rbp]
	call	?size@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEBA_KXZ ; std::vector<op,std::allocator<op> >::size
	dec	eax
	mov	DWORD PTR numberOfOperators$[rbp], eax

; 157  : 
; 158  : 		node *n = tree.getNodeByNumber(numberOfOperators);

	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	edx, DWORD PTR numberOfOperators$[rbp]
	mov	rcx, rax
	call	?getNodeByNumber@binary_tree@@QEAAPEAVnode@@H@Z ; binary_tree::getNodeByNumber
	mov	QWORD PTR n$[rbp], rax

; 159  : 
; 160  : 		print_node(n);

	mov	rdx, QWORD PTR n$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?print_node@tree_builder@@QEAAXPEAVnode@@@Z ; tree_builder::print_node
	npad	1

; 161  : 	}

	lea	rcx, QWORD PTR operators$[rbp]
	call	??1?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@XZ ; std::vector<op,std::allocator<op> >::~vector<op,std::allocator<op> >
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?print_tree@tree_builder@@QEAAXXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
?print_tree@tree_builder@@QEAAXXZ ENDP			; tree_builder::print_tree
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
operators$ = 8
numberOfOperators$ = 68
n$ = 104
__$ArrayPad$ = 312
this$ = 352
?dtor$0@?0??print_tree@tree_builder@@QEAAXXZ@4HA PROC	; `tree_builder::print_tree'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR operators$[rbp]
	call	??1?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@XZ ; std::vector<op,std::allocator<op> >::~vector<op,std::allocator<op> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??print_tree@tree_builder@@QEAAXXZ@4HA ENDP	; `tree_builder::print_tree'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
operators$ = 8
numberOfOperators$ = 68
n$ = 104
__$ArrayPad$ = 312
this$ = 352
?dtor$0@?0??print_tree@tree_builder@@QEAAXXZ@4HA PROC	; `tree_builder::print_tree'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR operators$[rbp]
	call	??1?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@XZ ; std::vector<op,std::allocator<op> >::~vector<op,std::allocator<op> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??print_tree@tree_builder@@QEAAXXZ@4HA ENDP	; `tree_builder::print_tree'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\shtuk\Desktop\Files\EquationStringParser\EquationStringParser\tree_builder.h
;	COMDAT ?print_node@tree_builder@@QEAAXPEAVnode@@@Z
_TEXT	SEGMENT
$T1 = 196
$T2 = 232
$T3 = 312
$T4 = 392
$T5 = 452
tv152 = 472
tv151 = 472
tv144 = 472
tv150 = 480
tv148 = 480
tv76 = 480
this$ = 528
n$ = 536
?print_node@tree_builder@@QEAAXPEAVnode@@@Z PROC	; tree_builder::print_node, COMDAT

; 133  : 	{

$LN13:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 536				; 00000218H
	lea	rbp, QWORD PTR [rsp+32]
	mov	DWORD PTR $T5[rbp], 0
	lea	rcx, OFFSET FLAT:__3F6EDB1A_tree_builder@h
	call	__CheckForDebuggerJustMyCode

; 134  : 		if (!n)

	cmp	QWORD PTR n$[rbp], 0
	jne	SHORT $LN2@print_node

; 135  : 		{
; 136  : 			return;

	jmp	$LN1@print_node
$LN2@print_node:

; 137  : 		}
; 138  : 
; 139  : 		if (n->isOperator() && n->getOperator().executionNumber != 99999)

	mov	rcx, QWORD PTR n$[rbp]
	call	?isOperator@node@@QEBA_NXZ		; node::isOperator
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN6@print_node
	lea	rdx, QWORD PTR $T2[rbp]
	mov	rcx, QWORD PTR n$[rbp]
	call	?getOperator@node@@QEBA?AUop@@XZ	; node::getOperator
	mov	QWORD PTR tv144[rbp], rax
	mov	eax, DWORD PTR $T5[rbp]
	or	eax, 1
	mov	DWORD PTR $T5[rbp], eax
	mov	rax, QWORD PTR tv144[rbp]
	cmp	DWORD PTR [rax+40], 99999		; 0001869fH
	je	SHORT $LN6@print_node
	mov	DWORD PTR tv76[rbp], 1
	jmp	SHORT $LN7@print_node
$LN6@print_node:
	mov	DWORD PTR tv76[rbp], 0
$LN7@print_node:
	movzx	eax, BYTE PTR tv76[rbp]
	mov	BYTE PTR $T1[rbp], al
	mov	eax, DWORD PTR $T5[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN10@print_node
	and	DWORD PTR $T5[rbp], -2
	lea	rcx, QWORD PTR $T2[rbp]
	call	??1op@@QEAA@XZ
$LN10@print_node:
	movzx	eax, BYTE PTR $T1[rbp]
	test	eax, eax
	je	SHORT $LN3@print_node

; 140  : 		{
; 141  : 			std::cout << n->getOperator().name << std::endl;

	lea	rdx, QWORD PTR $T3[rbp]
	mov	rcx, QWORD PTR n$[rbp]
	call	?getOperator@node@@QEBA?AUop@@XZ	; node::getOperator
	mov	QWORD PTR tv151[rbp], rax
	mov	rax, QWORD PTR tv151[rbp]
	mov	QWORD PTR tv148[rbp], rax
	mov	rax, QWORD PTR tv148[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z
	npad	1
	lea	rcx, QWORD PTR $T3[rbp]
	call	??1op@@QEAA@XZ

; 142  : 		}

	jmp	SHORT $LN4@print_node
$LN3@print_node:

; 143  : 		else
; 144  : 		{
; 145  : 			std::cout << n->getConstant() << std::endl;

	lea	rdx, QWORD PTR $T4[rbp]
	mov	rcx, QWORD PTR n$[rbp]
	call	?getConstant@node@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; node::getConstant
	mov	QWORD PTR tv152[rbp], rax
	mov	rax, QWORD PTR tv152[rbp]
	mov	QWORD PTR tv150[rbp], rax
	mov	rdx, QWORD PTR tv150[rbp]
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z
	npad	1
	lea	rcx, QWORD PTR $T4[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN4@print_node:

; 146  : 		}
; 147  : 
; 148  : 		print_node(n->left);

	mov	rax, QWORD PTR n$[rbp]
	mov	rdx, QWORD PTR [rax+128]
	mov	rcx, QWORD PTR this$[rbp]
	call	?print_node@tree_builder@@QEAAXPEAVnode@@@Z ; tree_builder::print_node

; 149  : 		print_node(n->right);

	mov	rax, QWORD PTR n$[rbp]
	mov	rdx, QWORD PTR [rax+136]
	mov	rcx, QWORD PTR this$[rbp]
	call	?print_node@tree_builder@@QEAAXPEAVnode@@@Z ; tree_builder::print_node
$LN1@print_node:

; 150  : 	}

	lea	rsp, QWORD PTR [rbp+504]
	pop	rdi
	pop	rbp
	ret	0
?print_node@tree_builder@@QEAAXPEAVnode@@@Z ENDP	; tree_builder::print_node
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 196
$T2 = 232
$T3 = 312
$T4 = 392
$T5 = 452
tv152 = 472
tv151 = 472
tv144 = 472
tv150 = 480
tv148 = 480
tv76 = 480
this$ = 528
n$ = 536
?dtor$1@?0??print_node@tree_builder@@QEAAXPEAVnode@@@Z@4HA PROC ; `tree_builder::print_node'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR $T3[rbp]
	call	??1op@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0??print_node@tree_builder@@QEAAXPEAVnode@@@Z@4HA ENDP ; `tree_builder::print_node'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 196
$T2 = 232
$T3 = 312
$T4 = 392
$T5 = 452
tv152 = 472
tv151 = 472
tv144 = 472
tv150 = 480
tv148 = 480
tv76 = 480
this$ = 528
n$ = 536
?dtor$2@?0??print_node@tree_builder@@QEAAXPEAVnode@@@Z@4HA PROC ; `tree_builder::print_node'::`1'::dtor$2
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR $T4[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$2@?0??print_node@tree_builder@@QEAAXPEAVnode@@@Z@4HA ENDP ; `tree_builder::print_node'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 196
$T2 = 232
$T3 = 312
$T4 = 392
$T5 = 452
tv152 = 472
tv151 = 472
tv144 = 472
tv150 = 480
tv148 = 480
tv76 = 480
this$ = 528
n$ = 536
?dtor$1@?0??print_node@tree_builder@@QEAAXPEAVnode@@@Z@4HA PROC ; `tree_builder::print_node'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR $T3[rbp]
	call	??1op@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0??print_node@tree_builder@@QEAAXPEAVnode@@@Z@4HA ENDP ; `tree_builder::print_node'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 196
$T2 = 232
$T3 = 312
$T4 = 392
$T5 = 452
tv152 = 472
tv151 = 472
tv144 = 472
tv150 = 480
tv148 = 480
tv76 = 480
this$ = 528
n$ = 536
?dtor$2@?0??print_node@tree_builder@@QEAAXPEAVnode@@@Z@4HA PROC ; `tree_builder::print_node'::`1'::dtor$2
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR $T4[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$2@?0??print_node@tree_builder@@QEAAXPEAVnode@@@Z@4HA ENDP ; `tree_builder::print_node'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\shtuk\Desktop\Files\EquationStringParser\EquationStringParser\tree_builder.h
;	COMDAT ?createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z
_TEXT	SEGMENT
useVar$5 = 4
idx$6 = 36
l$7 = 72
idx$8 = 100
r$9 = 136
idx$10 = 164
operL$11 = 200
operR$12 = 280
$T13 = 1128
$T14 = 1160
$T15 = 1192
$T16 = 1256
$T17 = 1288
$T18 = 1320
$T19 = 1352
$T20 = 1416
$T21 = 1448
$T22 = 1480
$T23 = 1512
$T24 = 1576
$T25 = 1608
$T26 = 1640
$T27 = 1672
$T28 = 1736
$T29 = 1768
$T30 = 1832
$T31 = 1864
$T32 = 1896
$T33 = 1928
$T34 = 2008
$T35 = 2040
$T36 = 2104
$T37 = 2136
$T38 = 2168
$T39 = 2200
$T40 = 2280
$T41 = 2312
$T42 = 2376
$T43 = 2408
$T44 = 2472
$T45 = 2504
$T46 = 2568
$T47 = 2600
$T48 = 2664
tv187 = 2676
tv71 = 2676
tv482 = 2680
tv477 = 2680
tv475 = 2680
tv470 = 2680
tv468 = 2680
tv464 = 2680
tv460 = 2680
tv456 = 2680
tv356 = 2680
tv318 = 2680
tv271 = 2680
tv265 = 2680
tv184 = 2680
tv488 = 2688
tv484 = 2688
tv399 = 2688
tv352 = 2688
tv314 = 2688
tv267 = 2688
tv261 = 2688
tv228 = 2688
tv177 = 2688
tv144 = 2688
tv490 = 2696
tv486 = 2696
__$ArrayPad$ = 2704
this$ = 2752
numberOfLevels$ = 2760
operators$ = 2768
n$ = 2776
supportedVariables$ = 2784
?createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z PROC ; tree_builder::createLeftRightNodes, COMDAT

; 75   : 	{

$LN49:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 2776				; 00000ad8H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 490				; 000001eaH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+2808]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__3F6EDB1A_tree_builder@h
	call	__CheckForDebuggerJustMyCode

; 76   : 		if (numberOfLevels == 0)

	cmp	DWORD PTR numberOfLevels$[rbp], 0
	jne	$LN2@createLeft

; 77   : 		{
; 78   : 			bool useVar = getrand(2) == 0;

	mov	edx, 2
	mov	rcx, QWORD PTR this$[rbp]
	call	?getrand@tree_builder@@QEAAH_K@Z	; tree_builder::getrand
	test	eax, eax
	jne	SHORT $LN9@createLeft
	mov	DWORD PTR tv71[rbp], 1
	jmp	SHORT $LN10@createLeft
$LN9@createLeft:
	mov	DWORD PTR tv71[rbp], 0
$LN10@createLeft:
	movzx	eax, BYTE PTR tv71[rbp]
	mov	BYTE PTR useVar$5[rbp], al

; 79   : 
; 80   : 			if (useVar && supportedVariables.size() > 0)

	movzx	eax, BYTE PTR useVar$5[rbp]
	test	eax, eax
	je	$LN4@createLeft
	mov	rcx, QWORD PTR supportedVariables$[rbp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	test	rax, rax
	jbe	$LN4@createLeft

; 81   : 			{
; 82   : 				int idx = getrand(supportedVariables.size());

	mov	rcx, QWORD PTR supportedVariables$[rbp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rbp]
	call	?getrand@tree_builder@@QEAAH_K@Z	; tree_builder::getrand
	mov	DWORD PTR idx$6[rbp], eax

; 83   : 				n->left = new node(supportedVariables.substr(idx,1));

	mov	ecx, 144				; 00000090H
	call	??2@YAPEAX_K@Z				; operator new
	mov	QWORD PTR $T14[rbp], rax
	cmp	QWORD PTR $T14[rbp], 0
	je	SHORT $LN11@createLeft
	mov	edx, 144				; 00000090H
	mov	rcx, QWORD PTR $T14[rbp]
	call	?__autoclassinit2@node@@QEAAX_K@Z
	lea	rax, QWORD PTR $T15[rbp]
	mov	QWORD PTR $T16[rbp], rax
	movsxd	rax, DWORD PTR idx$6[rbp]
	mov	r9d, 1
	mov	r8, rax
	mov	rdx, QWORD PTR $T16[rbp]
	mov	rcx, QWORD PTR supportedVariables$[rbp]
	call	?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr
	mov	QWORD PTR tv456[rbp], rax
	mov	rdx, QWORD PTR tv456[rbp]
	mov	rcx, QWORD PTR $T14[rbp]
	call	??0node@@QEAA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; node::node
	mov	QWORD PTR tv144[rbp], rax
	jmp	SHORT $LN12@createLeft
$LN11@createLeft:
	mov	QWORD PTR tv144[rbp], 0
$LN12@createLeft:
	mov	rax, QWORD PTR tv144[rbp]
	mov	QWORD PTR $T13[rbp], rax
	mov	rax, QWORD PTR n$[rbp]
	mov	rcx, QWORD PTR $T13[rbp]
	mov	QWORD PTR [rax+128], rcx

; 84   : 				tree.nodes.push_back(n->left);

	mov	rax, QWORD PTR n$[rbp]
	add	rax, 128				; 00000080H
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 8
	mov	rdx, rax
	call	?push_back@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAXAEBQEAVnode@@@Z ; std::vector<node *,std::allocator<node *> >::push_back

; 85   : 
; 86   : 			}

	jmp	$LN5@createLeft
$LN4@createLeft:

; 87   : 			else
; 88   : 			{
; 89   : 				double l = randomDouble(-100.0, 100.0);

	movsd	xmm2, QWORD PTR __real@4059000000000000
	movsd	xmm1, QWORD PTR __real@c059000000000000
	mov	rcx, QWORD PTR this$[rbp]
	call	?randomDouble@tree_builder@@QEAANNN@Z	; tree_builder::randomDouble
	movsd	QWORD PTR l$7[rbp], xmm0

; 90   : 				n->left = new node(std::to_string(l));

	mov	ecx, 144				; 00000090H
	call	??2@YAPEAX_K@Z				; operator new
	mov	QWORD PTR $T18[rbp], rax
	cmp	QWORD PTR $T18[rbp], 0
	je	SHORT $LN13@createLeft
	mov	edx, 144				; 00000090H
	mov	rcx, QWORD PTR $T18[rbp]
	call	?__autoclassinit2@node@@QEAAX_K@Z
	lea	rax, QWORD PTR $T19[rbp]
	mov	QWORD PTR $T20[rbp], rax
	movsd	xmm1, QWORD PTR l$7[rbp]
	mov	rcx, QWORD PTR $T20[rbp]
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@N@Z ; std::to_string
	mov	QWORD PTR tv460[rbp], rax
	mov	rdx, QWORD PTR tv460[rbp]
	mov	rcx, QWORD PTR $T18[rbp]
	call	??0node@@QEAA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; node::node
	mov	QWORD PTR tv177[rbp], rax
	jmp	SHORT $LN14@createLeft
$LN13@createLeft:
	mov	QWORD PTR tv177[rbp], 0
$LN14@createLeft:
	mov	rax, QWORD PTR tv177[rbp]
	mov	QWORD PTR $T17[rbp], rax
	mov	rax, QWORD PTR n$[rbp]
	mov	rcx, QWORD PTR $T17[rbp]
	mov	QWORD PTR [rax+128], rcx

; 91   : 				tree.nodes.push_back(n->left);

	mov	rax, QWORD PTR n$[rbp]
	add	rax, 128				; 00000080H
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 8
	mov	rdx, rax
	call	?push_back@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAXAEBQEAVnode@@@Z ; std::vector<node *,std::allocator<node *> >::push_back
$LN5@createLeft:

; 92   : 			}
; 93   : 
; 94   : 			useVar = useVar ? false : getrand(2) == 0;

	movzx	eax, BYTE PTR useVar$5[rbp]
	test	eax, eax
	je	SHORT $LN17@createLeft
	mov	DWORD PTR tv187[rbp], 0
	jmp	SHORT $LN18@createLeft
$LN17@createLeft:
	mov	edx, 2
	mov	rcx, QWORD PTR this$[rbp]
	call	?getrand@tree_builder@@QEAAH_K@Z	; tree_builder::getrand
	test	eax, eax
	jne	SHORT $LN15@createLeft
	mov	DWORD PTR tv184[rbp], 1
	jmp	SHORT $LN16@createLeft
$LN15@createLeft:
	mov	DWORD PTR tv184[rbp], 0
$LN16@createLeft:
	mov	eax, DWORD PTR tv184[rbp]
	mov	DWORD PTR tv187[rbp], eax
$LN18@createLeft:
	movzx	eax, BYTE PTR tv187[rbp]
	mov	BYTE PTR useVar$5[rbp], al

; 95   : 
; 96   : 			if (useVar && supportedVariables.size() > 0)

	movzx	eax, BYTE PTR useVar$5[rbp]
	test	eax, eax
	je	$LN6@createLeft
	mov	rcx, QWORD PTR supportedVariables$[rbp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	test	rax, rax
	jbe	$LN6@createLeft

; 97   : 			{
; 98   : 				int idx = getrand(supportedVariables.size());

	mov	rcx, QWORD PTR supportedVariables$[rbp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rbp]
	call	?getrand@tree_builder@@QEAAH_K@Z	; tree_builder::getrand
	mov	DWORD PTR idx$8[rbp], eax

; 99   : 				n->right = new node(supportedVariables.substr(idx, 1));

	mov	ecx, 144				; 00000090H
	call	??2@YAPEAX_K@Z				; operator new
	mov	QWORD PTR $T22[rbp], rax
	cmp	QWORD PTR $T22[rbp], 0
	je	SHORT $LN19@createLeft
	mov	edx, 144				; 00000090H
	mov	rcx, QWORD PTR $T22[rbp]
	call	?__autoclassinit2@node@@QEAAX_K@Z
	lea	rax, QWORD PTR $T23[rbp]
	mov	QWORD PTR $T24[rbp], rax
	movsxd	rax, DWORD PTR idx$8[rbp]
	mov	r9d, 1
	mov	r8, rax
	mov	rdx, QWORD PTR $T24[rbp]
	mov	rcx, QWORD PTR supportedVariables$[rbp]
	call	?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr
	mov	QWORD PTR tv464[rbp], rax
	mov	rdx, QWORD PTR tv464[rbp]
	mov	rcx, QWORD PTR $T22[rbp]
	call	??0node@@QEAA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; node::node
	mov	QWORD PTR tv228[rbp], rax
	jmp	SHORT $LN20@createLeft
$LN19@createLeft:
	mov	QWORD PTR tv228[rbp], 0
$LN20@createLeft:
	mov	rax, QWORD PTR tv228[rbp]
	mov	QWORD PTR $T21[rbp], rax
	mov	rax, QWORD PTR n$[rbp]
	mov	rcx, QWORD PTR $T21[rbp]
	mov	QWORD PTR [rax+136], rcx

; 100  : 				tree.nodes.push_back(n->right);

	mov	rax, QWORD PTR n$[rbp]
	add	rax, 136				; 00000088H
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 8
	mov	rdx, rax
	call	?push_back@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAXAEBQEAVnode@@@Z ; std::vector<node *,std::allocator<node *> >::push_back

; 101  : 
; 102  : 			}

	jmp	$LN7@createLeft
$LN6@createLeft:

; 103  : 			else
; 104  : 			{
; 105  : 				double r = randomDouble(-100.0, 100.0);

	movsd	xmm2, QWORD PTR __real@4059000000000000
	movsd	xmm1, QWORD PTR __real@c059000000000000
	mov	rcx, QWORD PTR this$[rbp]
	call	?randomDouble@tree_builder@@QEAANNN@Z	; tree_builder::randomDouble
	movsd	QWORD PTR r$9[rbp], xmm0

; 106  : 				n->right = new node(std::to_string(r));

	mov	ecx, 144				; 00000090H
	call	??2@YAPEAX_K@Z				; operator new
	mov	QWORD PTR $T26[rbp], rax
	cmp	QWORD PTR $T26[rbp], 0
	je	SHORT $LN21@createLeft
	mov	edx, 144				; 00000090H
	mov	rcx, QWORD PTR $T26[rbp]
	call	?__autoclassinit2@node@@QEAAX_K@Z
	lea	rax, QWORD PTR $T27[rbp]
	mov	QWORD PTR $T28[rbp], rax
	movsd	xmm1, QWORD PTR r$9[rbp]
	mov	rcx, QWORD PTR $T28[rbp]
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@N@Z ; std::to_string
	mov	QWORD PTR tv468[rbp], rax
	mov	rdx, QWORD PTR tv468[rbp]
	mov	rcx, QWORD PTR $T26[rbp]
	call	??0node@@QEAA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; node::node
	mov	QWORD PTR tv261[rbp], rax
	jmp	SHORT $LN22@createLeft
$LN21@createLeft:
	mov	QWORD PTR tv261[rbp], 0
$LN22@createLeft:
	mov	rax, QWORD PTR tv261[rbp]
	mov	QWORD PTR $T25[rbp], rax
	mov	rax, QWORD PTR n$[rbp]
	mov	rcx, QWORD PTR $T25[rbp]
	mov	QWORD PTR [rax+136], rcx

; 107  : 				tree.nodes.push_back(n->right);

	mov	rax, QWORD PTR n$[rbp]
	add	rax, 136				; 00000088H
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 8
	mov	rdx, rax
	call	?push_back@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAXAEBQEAVnode@@@Z ; std::vector<node *,std::allocator<node *> >::push_back
$LN7@createLeft:

; 108  : 			}
; 109  : 
; 110  : 			
; 111  : 			
; 112  : 		}

	jmp	$LN3@createLeft
$LN2@createLeft:

; 113  : 		else
; 114  : 		{
; 115  : 			int idx = rand() % operators.length();

	call	QWORD PTR __imp_rand
	cdqe
	mov	QWORD PTR tv265[rbp], rax
	mov	rcx, QWORD PTR operators$[rbp]
	call	?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
	mov	QWORD PTR tv267[rbp], rax
	xor	edx, edx
	mov	rcx, QWORD PTR tv265[rbp]
	mov	rax, rcx
	mov	rcx, QWORD PTR tv267[rbp]
	div	rcx
	mov	rax, rdx
	mov	DWORD PTR idx$10[rbp], eax

; 116  : 
; 117  : 			op operL(std::string(1, operators.at(idx)));

	lea	rax, QWORD PTR $T29[rbp]
	mov	QWORD PTR $T30[rbp], rax
	movsxd	rax, DWORD PTR idx$10[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR operators$[rbp]
	call	?at@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::at
	movzx	r8d, BYTE PTR [rax]
	mov	edx, 1
	mov	rcx, QWORD PTR $T30[rbp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	QWORD PTR tv470[rbp], rax
	mov	rdx, QWORD PTR tv470[rbp]
	lea	rcx, QWORD PTR operL$11[rbp]
	call	??0op@@QEAA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; op::op
	npad	1

; 118  : 			n->left = new node(operL);

	mov	ecx, 144				; 00000090H
	call	??2@YAPEAX_K@Z				; operator new
	mov	QWORD PTR $T32[rbp], rax
	cmp	QWORD PTR $T32[rbp], 0
	je	SHORT $LN23@createLeft
	mov	edx, 144				; 00000090H
	mov	rcx, QWORD PTR $T32[rbp]
	call	?__autoclassinit2@node@@QEAAX_K@Z
	lea	rax, QWORD PTR $T33[rbp]
	mov	QWORD PTR $T34[rbp], rax
	lea	rdx, QWORD PTR operL$11[rbp]
	mov	rcx, QWORD PTR $T34[rbp]
	call	??0op@@QEAA@AEBU0@@Z
	mov	QWORD PTR tv475[rbp], rax
	mov	rdx, QWORD PTR tv475[rbp]
	mov	rcx, QWORD PTR $T32[rbp]
	call	??0node@@QEAA@Uop@@@Z			; node::node
	mov	QWORD PTR tv314[rbp], rax
	jmp	SHORT $LN24@createLeft
$LN23@createLeft:
	mov	QWORD PTR tv314[rbp], 0
$LN24@createLeft:
	mov	rax, QWORD PTR tv314[rbp]
	mov	QWORD PTR $T31[rbp], rax
	mov	rax, QWORD PTR n$[rbp]
	mov	rcx, QWORD PTR $T31[rbp]
	mov	QWORD PTR [rax+128], rcx

; 119  : 			tree.nodes.push_back(n->left);

	mov	rax, QWORD PTR n$[rbp]
	add	rax, 128				; 00000080H
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 8
	mov	rdx, rax
	call	?push_back@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAXAEBQEAVnode@@@Z ; std::vector<node *,std::allocator<node *> >::push_back

; 120  : 
; 121  : 			idx = rand() % operators.length();

	call	QWORD PTR __imp_rand
	cdqe
	mov	QWORD PTR tv318[rbp], rax
	mov	rcx, QWORD PTR operators$[rbp]
	call	?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
	mov	QWORD PTR tv352[rbp], rax
	xor	edx, edx
	mov	rcx, QWORD PTR tv318[rbp]
	mov	rax, rcx
	mov	rcx, QWORD PTR tv352[rbp]
	div	rcx
	mov	rax, rdx
	mov	DWORD PTR idx$10[rbp], eax

; 122  : 
; 123  : 			op operR(std::string(1, operators.at(idx)));

	lea	rax, QWORD PTR $T35[rbp]
	mov	QWORD PTR $T36[rbp], rax
	movsxd	rax, DWORD PTR idx$10[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR operators$[rbp]
	call	?at@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::at
	movzx	r8d, BYTE PTR [rax]
	mov	edx, 1
	mov	rcx, QWORD PTR $T36[rbp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	QWORD PTR tv477[rbp], rax
	mov	rdx, QWORD PTR tv477[rbp]
	lea	rcx, QWORD PTR operR$12[rbp]
	call	??0op@@QEAA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; op::op
	npad	1

; 124  : 			n->right = new node(operR);

	mov	ecx, 144				; 00000090H
	call	??2@YAPEAX_K@Z				; operator new
	mov	QWORD PTR $T38[rbp], rax
	cmp	QWORD PTR $T38[rbp], 0
	je	SHORT $LN25@createLeft
	mov	edx, 144				; 00000090H
	mov	rcx, QWORD PTR $T38[rbp]
	call	?__autoclassinit2@node@@QEAAX_K@Z
	lea	rax, QWORD PTR $T39[rbp]
	mov	QWORD PTR $T40[rbp], rax
	lea	rdx, QWORD PTR operR$12[rbp]
	mov	rcx, QWORD PTR $T40[rbp]
	call	??0op@@QEAA@AEBU0@@Z
	mov	QWORD PTR tv482[rbp], rax
	mov	rdx, QWORD PTR tv482[rbp]
	mov	rcx, QWORD PTR $T38[rbp]
	call	??0node@@QEAA@Uop@@@Z			; node::node
	mov	QWORD PTR tv399[rbp], rax
	jmp	SHORT $LN26@createLeft
$LN25@createLeft:
	mov	QWORD PTR tv399[rbp], 0
$LN26@createLeft:
	mov	rax, QWORD PTR tv399[rbp]
	mov	QWORD PTR $T37[rbp], rax
	mov	rax, QWORD PTR n$[rbp]
	mov	rcx, QWORD PTR $T37[rbp]
	mov	QWORD PTR [rax+136], rcx

; 125  : 			tree.nodes.push_back(n->right);

	mov	rax, QWORD PTR n$[rbp]
	add	rax, 136				; 00000088H
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 8
	mov	rdx, rax
	call	?push_back@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAXAEBQEAVnode@@@Z ; std::vector<node *,std::allocator<node *> >::push_back

; 126  : 
; 127  : 			createLeftRightNodes(numberOfLevels - 1, operators, n->left, supportedVariables);

	lea	rax, QWORD PTR $T41[rbp]
	mov	QWORD PTR $T42[rbp], rax
	lea	rax, QWORD PTR $T43[rbp]
	mov	QWORD PTR $T44[rbp], rax
	mov	rdx, QWORD PTR supportedVariables$[rbp]
	mov	rcx, QWORD PTR $T42[rbp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	QWORD PTR tv356[rbp], rax
	mov	rax, QWORD PTR tv356[rbp]
	mov	QWORD PTR tv484[rbp], rax
	mov	rdx, QWORD PTR operators$[rbp]
	mov	rcx, QWORD PTR $T44[rbp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	QWORD PTR tv486[rbp], rax
	mov	eax, DWORD PTR numberOfLevels$[rbp]
	dec	eax
	mov	rcx, QWORD PTR tv484[rbp]
	mov	QWORD PTR [rsp+32], rcx
	mov	rcx, QWORD PTR n$[rbp]
	mov	r9, QWORD PTR [rcx+128]
	mov	r8, QWORD PTR tv486[rbp]
	mov	edx, eax
	mov	rcx, QWORD PTR this$[rbp]
	call	?createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z ; tree_builder::createLeftRightNodes

; 128  : 			createLeftRightNodes(numberOfLevels - 1, operators, n->right, supportedVariables);

	lea	rax, QWORD PTR $T45[rbp]
	mov	QWORD PTR $T46[rbp], rax
	lea	rax, QWORD PTR $T47[rbp]
	mov	QWORD PTR $T48[rbp], rax
	mov	rdx, QWORD PTR supportedVariables$[rbp]
	mov	rcx, QWORD PTR $T46[rbp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	QWORD PTR tv271[rbp], rax
	mov	rax, QWORD PTR tv271[rbp]
	mov	QWORD PTR tv488[rbp], rax
	mov	rdx, QWORD PTR operators$[rbp]
	mov	rcx, QWORD PTR $T48[rbp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	QWORD PTR tv490[rbp], rax
	mov	eax, DWORD PTR numberOfLevels$[rbp]
	dec	eax
	mov	rcx, QWORD PTR tv488[rbp]
	mov	QWORD PTR [rsp+32], rcx
	mov	rcx, QWORD PTR n$[rbp]
	mov	r9, QWORD PTR [rcx+136]
	mov	r8, QWORD PTR tv490[rbp]
	mov	edx, eax
	mov	rcx, QWORD PTR this$[rbp]
	call	?createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z ; tree_builder::createLeftRightNodes
	npad	1

; 129  : 		}

	lea	rcx, QWORD PTR operR$12[rbp]
	call	??1op@@QEAA@XZ
	npad	1
	lea	rcx, QWORD PTR operL$11[rbp]
	call	??1op@@QEAA@XZ
	npad	1
$LN3@createLeft:

; 130  : 	}

	mov	rcx, QWORD PTR operators$[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	mov	rcx, QWORD PTR supportedVariables$[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	lea	rcx, QWORD PTR [rbp-48]
	lea	rdx, OFFSET FLAT:?createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+2728]
	pop	rdi
	pop	rbp
	ret	0
?createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z ENDP ; tree_builder::createLeftRightNodes
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
useVar$5 = 4
idx$6 = 36
l$7 = 72
idx$8 = 100
r$9 = 136
idx$10 = 164
operL$11 = 200
operR$12 = 280
$T13 = 1128
$T14 = 1160
$T15 = 1192
$T16 = 1256
$T17 = 1288
$T18 = 1320
$T19 = 1352
$T20 = 1416
$T21 = 1448
$T22 = 1480
$T23 = 1512
$T24 = 1576
$T25 = 1608
$T26 = 1640
$T27 = 1672
$T28 = 1736
$T29 = 1768
$T30 = 1832
$T31 = 1864
$T32 = 1896
$T33 = 1928
$T34 = 2008
$T35 = 2040
$T36 = 2104
$T37 = 2136
$T38 = 2168
$T39 = 2200
$T40 = 2280
$T41 = 2312
$T42 = 2376
$T43 = 2408
$T44 = 2472
$T45 = 2504
$T46 = 2568
$T47 = 2600
$T48 = 2664
tv187 = 2676
tv71 = 2676
tv482 = 2680
tv477 = 2680
tv475 = 2680
tv470 = 2680
tv468 = 2680
tv464 = 2680
tv460 = 2680
tv456 = 2680
tv356 = 2680
tv318 = 2680
tv271 = 2680
tv265 = 2680
tv184 = 2680
tv488 = 2688
tv484 = 2688
tv399 = 2688
tv352 = 2688
tv314 = 2688
tv267 = 2688
tv261 = 2688
tv228 = 2688
tv177 = 2688
tv144 = 2688
tv490 = 2696
tv486 = 2696
__$ArrayPad$ = 2704
this$ = 2752
numberOfLevels$ = 2760
operators$ = 2768
n$ = 2776
supportedVariables$ = 2784
?dtor$0@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA PROC ; `tree_builder::createLeftRightNodes'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	mov	rcx, QWORD PTR supportedVariables$[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA ENDP ; `tree_builder::createLeftRightNodes'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
useVar$5 = 4
idx$6 = 36
l$7 = 72
idx$8 = 100
r$9 = 136
idx$10 = 164
operL$11 = 200
operR$12 = 280
$T13 = 1128
$T14 = 1160
$T15 = 1192
$T16 = 1256
$T17 = 1288
$T18 = 1320
$T19 = 1352
$T20 = 1416
$T21 = 1448
$T22 = 1480
$T23 = 1512
$T24 = 1576
$T25 = 1608
$T26 = 1640
$T27 = 1672
$T28 = 1736
$T29 = 1768
$T30 = 1832
$T31 = 1864
$T32 = 1896
$T33 = 1928
$T34 = 2008
$T35 = 2040
$T36 = 2104
$T37 = 2136
$T38 = 2168
$T39 = 2200
$T40 = 2280
$T41 = 2312
$T42 = 2376
$T43 = 2408
$T44 = 2472
$T45 = 2504
$T46 = 2568
$T47 = 2600
$T48 = 2664
tv187 = 2676
tv71 = 2676
tv482 = 2680
tv477 = 2680
tv475 = 2680
tv470 = 2680
tv468 = 2680
tv464 = 2680
tv460 = 2680
tv456 = 2680
tv356 = 2680
tv318 = 2680
tv271 = 2680
tv265 = 2680
tv184 = 2680
tv488 = 2688
tv484 = 2688
tv399 = 2688
tv352 = 2688
tv314 = 2688
tv267 = 2688
tv261 = 2688
tv228 = 2688
tv177 = 2688
tv144 = 2688
tv490 = 2696
tv486 = 2696
__$ArrayPad$ = 2704
this$ = 2752
numberOfLevels$ = 2760
operators$ = 2768
n$ = 2776
supportedVariables$ = 2784
?dtor$1@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA PROC ; `tree_builder::createLeftRightNodes'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	mov	rcx, QWORD PTR operators$[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA ENDP ; `tree_builder::createLeftRightNodes'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
useVar$5 = 4
idx$6 = 36
l$7 = 72
idx$8 = 100
r$9 = 136
idx$10 = 164
operL$11 = 200
operR$12 = 280
$T13 = 1128
$T14 = 1160
$T15 = 1192
$T16 = 1256
$T17 = 1288
$T18 = 1320
$T19 = 1352
$T20 = 1416
$T21 = 1448
$T22 = 1480
$T23 = 1512
$T24 = 1576
$T25 = 1608
$T26 = 1640
$T27 = 1672
$T28 = 1736
$T29 = 1768
$T30 = 1832
$T31 = 1864
$T32 = 1896
$T33 = 1928
$T34 = 2008
$T35 = 2040
$T36 = 2104
$T37 = 2136
$T38 = 2168
$T39 = 2200
$T40 = 2280
$T41 = 2312
$T42 = 2376
$T43 = 2408
$T44 = 2472
$T45 = 2504
$T46 = 2568
$T47 = 2600
$T48 = 2664
tv187 = 2676
tv71 = 2676
tv482 = 2680
tv477 = 2680
tv475 = 2680
tv470 = 2680
tv468 = 2680
tv464 = 2680
tv460 = 2680
tv456 = 2680
tv356 = 2680
tv318 = 2680
tv271 = 2680
tv265 = 2680
tv184 = 2680
tv488 = 2688
tv484 = 2688
tv399 = 2688
tv352 = 2688
tv314 = 2688
tv267 = 2688
tv261 = 2688
tv228 = 2688
tv177 = 2688
tv144 = 2688
tv490 = 2696
tv486 = 2696
__$ArrayPad$ = 2704
this$ = 2752
numberOfLevels$ = 2760
operators$ = 2768
n$ = 2776
supportedVariables$ = 2784
?dtor$2@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA PROC ; `tree_builder::createLeftRightNodes'::`1'::dtor$2
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	mov	edx, 144				; 00000090H
	mov	rcx, QWORD PTR $T14[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$2@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA ENDP ; `tree_builder::createLeftRightNodes'::`1'::dtor$2
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
useVar$5 = 4
idx$6 = 36
l$7 = 72
idx$8 = 100
r$9 = 136
idx$10 = 164
operL$11 = 200
operR$12 = 280
$T13 = 1128
$T14 = 1160
$T15 = 1192
$T16 = 1256
$T17 = 1288
$T18 = 1320
$T19 = 1352
$T20 = 1416
$T21 = 1448
$T22 = 1480
$T23 = 1512
$T24 = 1576
$T25 = 1608
$T26 = 1640
$T27 = 1672
$T28 = 1736
$T29 = 1768
$T30 = 1832
$T31 = 1864
$T32 = 1896
$T33 = 1928
$T34 = 2008
$T35 = 2040
$T36 = 2104
$T37 = 2136
$T38 = 2168
$T39 = 2200
$T40 = 2280
$T41 = 2312
$T42 = 2376
$T43 = 2408
$T44 = 2472
$T45 = 2504
$T46 = 2568
$T47 = 2600
$T48 = 2664
tv187 = 2676
tv71 = 2676
tv482 = 2680
tv477 = 2680
tv475 = 2680
tv470 = 2680
tv468 = 2680
tv464 = 2680
tv460 = 2680
tv456 = 2680
tv356 = 2680
tv318 = 2680
tv271 = 2680
tv265 = 2680
tv184 = 2680
tv488 = 2688
tv484 = 2688
tv399 = 2688
tv352 = 2688
tv314 = 2688
tv267 = 2688
tv261 = 2688
tv228 = 2688
tv177 = 2688
tv144 = 2688
tv490 = 2696
tv486 = 2696
__$ArrayPad$ = 2704
this$ = 2752
numberOfLevels$ = 2760
operators$ = 2768
n$ = 2776
supportedVariables$ = 2784
?dtor$4@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA PROC ; `tree_builder::createLeftRightNodes'::`1'::dtor$4
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	mov	edx, 144				; 00000090H
	mov	rcx, QWORD PTR $T18[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$4@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA ENDP ; `tree_builder::createLeftRightNodes'::`1'::dtor$4
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
useVar$5 = 4
idx$6 = 36
l$7 = 72
idx$8 = 100
r$9 = 136
idx$10 = 164
operL$11 = 200
operR$12 = 280
$T13 = 1128
$T14 = 1160
$T15 = 1192
$T16 = 1256
$T17 = 1288
$T18 = 1320
$T19 = 1352
$T20 = 1416
$T21 = 1448
$T22 = 1480
$T23 = 1512
$T24 = 1576
$T25 = 1608
$T26 = 1640
$T27 = 1672
$T28 = 1736
$T29 = 1768
$T30 = 1832
$T31 = 1864
$T32 = 1896
$T33 = 1928
$T34 = 2008
$T35 = 2040
$T36 = 2104
$T37 = 2136
$T38 = 2168
$T39 = 2200
$T40 = 2280
$T41 = 2312
$T42 = 2376
$T43 = 2408
$T44 = 2472
$T45 = 2504
$T46 = 2568
$T47 = 2600
$T48 = 2664
tv187 = 2676
tv71 = 2676
tv482 = 2680
tv477 = 2680
tv475 = 2680
tv470 = 2680
tv468 = 2680
tv464 = 2680
tv460 = 2680
tv456 = 2680
tv356 = 2680
tv318 = 2680
tv271 = 2680
tv265 = 2680
tv184 = 2680
tv488 = 2688
tv484 = 2688
tv399 = 2688
tv352 = 2688
tv314 = 2688
tv267 = 2688
tv261 = 2688
tv228 = 2688
tv177 = 2688
tv144 = 2688
tv490 = 2696
tv486 = 2696
__$ArrayPad$ = 2704
this$ = 2752
numberOfLevels$ = 2760
operators$ = 2768
n$ = 2776
supportedVariables$ = 2784
?dtor$6@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA PROC ; `tree_builder::createLeftRightNodes'::`1'::dtor$6
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	mov	edx, 144				; 00000090H
	mov	rcx, QWORD PTR $T22[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$6@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA ENDP ; `tree_builder::createLeftRightNodes'::`1'::dtor$6
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
useVar$5 = 4
idx$6 = 36
l$7 = 72
idx$8 = 100
r$9 = 136
idx$10 = 164
operL$11 = 200
operR$12 = 280
$T13 = 1128
$T14 = 1160
$T15 = 1192
$T16 = 1256
$T17 = 1288
$T18 = 1320
$T19 = 1352
$T20 = 1416
$T21 = 1448
$T22 = 1480
$T23 = 1512
$T24 = 1576
$T25 = 1608
$T26 = 1640
$T27 = 1672
$T28 = 1736
$T29 = 1768
$T30 = 1832
$T31 = 1864
$T32 = 1896
$T33 = 1928
$T34 = 2008
$T35 = 2040
$T36 = 2104
$T37 = 2136
$T38 = 2168
$T39 = 2200
$T40 = 2280
$T41 = 2312
$T42 = 2376
$T43 = 2408
$T44 = 2472
$T45 = 2504
$T46 = 2568
$T47 = 2600
$T48 = 2664
tv187 = 2676
tv71 = 2676
tv482 = 2680
tv477 = 2680
tv475 = 2680
tv470 = 2680
tv468 = 2680
tv464 = 2680
tv460 = 2680
tv456 = 2680
tv356 = 2680
tv318 = 2680
tv271 = 2680
tv265 = 2680
tv184 = 2680
tv488 = 2688
tv484 = 2688
tv399 = 2688
tv352 = 2688
tv314 = 2688
tv267 = 2688
tv261 = 2688
tv228 = 2688
tv177 = 2688
tv144 = 2688
tv490 = 2696
tv486 = 2696
__$ArrayPad$ = 2704
this$ = 2752
numberOfLevels$ = 2760
operators$ = 2768
n$ = 2776
supportedVariables$ = 2784
?dtor$8@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA PROC ; `tree_builder::createLeftRightNodes'::`1'::dtor$8
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	mov	edx, 144				; 00000090H
	mov	rcx, QWORD PTR $T26[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$8@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA ENDP ; `tree_builder::createLeftRightNodes'::`1'::dtor$8
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
useVar$5 = 4
idx$6 = 36
l$7 = 72
idx$8 = 100
r$9 = 136
idx$10 = 164
operL$11 = 200
operR$12 = 280
$T13 = 1128
$T14 = 1160
$T15 = 1192
$T16 = 1256
$T17 = 1288
$T18 = 1320
$T19 = 1352
$T20 = 1416
$T21 = 1448
$T22 = 1480
$T23 = 1512
$T24 = 1576
$T25 = 1608
$T26 = 1640
$T27 = 1672
$T28 = 1736
$T29 = 1768
$T30 = 1832
$T31 = 1864
$T32 = 1896
$T33 = 1928
$T34 = 2008
$T35 = 2040
$T36 = 2104
$T37 = 2136
$T38 = 2168
$T39 = 2200
$T40 = 2280
$T41 = 2312
$T42 = 2376
$T43 = 2408
$T44 = 2472
$T45 = 2504
$T46 = 2568
$T47 = 2600
$T48 = 2664
tv187 = 2676
tv71 = 2676
tv482 = 2680
tv477 = 2680
tv475 = 2680
tv470 = 2680
tv468 = 2680
tv464 = 2680
tv460 = 2680
tv456 = 2680
tv356 = 2680
tv318 = 2680
tv271 = 2680
tv265 = 2680
tv184 = 2680
tv488 = 2688
tv484 = 2688
tv399 = 2688
tv352 = 2688
tv314 = 2688
tv267 = 2688
tv261 = 2688
tv228 = 2688
tv177 = 2688
tv144 = 2688
tv490 = 2696
tv486 = 2696
__$ArrayPad$ = 2704
this$ = 2752
numberOfLevels$ = 2760
operators$ = 2768
n$ = 2776
supportedVariables$ = 2784
?dtor$11@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA PROC ; `tree_builder::createLeftRightNodes'::`1'::dtor$11
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	lea	rcx, QWORD PTR operL$11[rbp]
	call	??1op@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$11@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA ENDP ; `tree_builder::createLeftRightNodes'::`1'::dtor$11
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
useVar$5 = 4
idx$6 = 36
l$7 = 72
idx$8 = 100
r$9 = 136
idx$10 = 164
operL$11 = 200
operR$12 = 280
$T13 = 1128
$T14 = 1160
$T15 = 1192
$T16 = 1256
$T17 = 1288
$T18 = 1320
$T19 = 1352
$T20 = 1416
$T21 = 1448
$T22 = 1480
$T23 = 1512
$T24 = 1576
$T25 = 1608
$T26 = 1640
$T27 = 1672
$T28 = 1736
$T29 = 1768
$T30 = 1832
$T31 = 1864
$T32 = 1896
$T33 = 1928
$T34 = 2008
$T35 = 2040
$T36 = 2104
$T37 = 2136
$T38 = 2168
$T39 = 2200
$T40 = 2280
$T41 = 2312
$T42 = 2376
$T43 = 2408
$T44 = 2472
$T45 = 2504
$T46 = 2568
$T47 = 2600
$T48 = 2664
tv187 = 2676
tv71 = 2676
tv482 = 2680
tv477 = 2680
tv475 = 2680
tv470 = 2680
tv468 = 2680
tv464 = 2680
tv460 = 2680
tv456 = 2680
tv356 = 2680
tv318 = 2680
tv271 = 2680
tv265 = 2680
tv184 = 2680
tv488 = 2688
tv484 = 2688
tv399 = 2688
tv352 = 2688
tv314 = 2688
tv267 = 2688
tv261 = 2688
tv228 = 2688
tv177 = 2688
tv144 = 2688
tv490 = 2696
tv486 = 2696
__$ArrayPad$ = 2704
this$ = 2752
numberOfLevels$ = 2760
operators$ = 2768
n$ = 2776
supportedVariables$ = 2784
?dtor$12@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA PROC ; `tree_builder::createLeftRightNodes'::`1'::dtor$12
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	mov	edx, 144				; 00000090H
	mov	rcx, QWORD PTR $T32[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$12@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA ENDP ; `tree_builder::createLeftRightNodes'::`1'::dtor$12
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
useVar$5 = 4
idx$6 = 36
l$7 = 72
idx$8 = 100
r$9 = 136
idx$10 = 164
operL$11 = 200
operR$12 = 280
$T13 = 1128
$T14 = 1160
$T15 = 1192
$T16 = 1256
$T17 = 1288
$T18 = 1320
$T19 = 1352
$T20 = 1416
$T21 = 1448
$T22 = 1480
$T23 = 1512
$T24 = 1576
$T25 = 1608
$T26 = 1640
$T27 = 1672
$T28 = 1736
$T29 = 1768
$T30 = 1832
$T31 = 1864
$T32 = 1896
$T33 = 1928
$T34 = 2008
$T35 = 2040
$T36 = 2104
$T37 = 2136
$T38 = 2168
$T39 = 2200
$T40 = 2280
$T41 = 2312
$T42 = 2376
$T43 = 2408
$T44 = 2472
$T45 = 2504
$T46 = 2568
$T47 = 2600
$T48 = 2664
tv187 = 2676
tv71 = 2676
tv482 = 2680
tv477 = 2680
tv475 = 2680
tv470 = 2680
tv468 = 2680
tv464 = 2680
tv460 = 2680
tv456 = 2680
tv356 = 2680
tv318 = 2680
tv271 = 2680
tv265 = 2680
tv184 = 2680
tv488 = 2688
tv484 = 2688
tv399 = 2688
tv352 = 2688
tv314 = 2688
tv267 = 2688
tv261 = 2688
tv228 = 2688
tv177 = 2688
tv144 = 2688
tv490 = 2696
tv486 = 2696
__$ArrayPad$ = 2704
this$ = 2752
numberOfLevels$ = 2760
operators$ = 2768
n$ = 2776
supportedVariables$ = 2784
?dtor$15@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA PROC ; `tree_builder::createLeftRightNodes'::`1'::dtor$15
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	lea	rcx, QWORD PTR operR$12[rbp]
	call	??1op@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$15@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA ENDP ; `tree_builder::createLeftRightNodes'::`1'::dtor$15
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
useVar$5 = 4
idx$6 = 36
l$7 = 72
idx$8 = 100
r$9 = 136
idx$10 = 164
operL$11 = 200
operR$12 = 280
$T13 = 1128
$T14 = 1160
$T15 = 1192
$T16 = 1256
$T17 = 1288
$T18 = 1320
$T19 = 1352
$T20 = 1416
$T21 = 1448
$T22 = 1480
$T23 = 1512
$T24 = 1576
$T25 = 1608
$T26 = 1640
$T27 = 1672
$T28 = 1736
$T29 = 1768
$T30 = 1832
$T31 = 1864
$T32 = 1896
$T33 = 1928
$T34 = 2008
$T35 = 2040
$T36 = 2104
$T37 = 2136
$T38 = 2168
$T39 = 2200
$T40 = 2280
$T41 = 2312
$T42 = 2376
$T43 = 2408
$T44 = 2472
$T45 = 2504
$T46 = 2568
$T47 = 2600
$T48 = 2664
tv187 = 2676
tv71 = 2676
tv482 = 2680
tv477 = 2680
tv475 = 2680
tv470 = 2680
tv468 = 2680
tv464 = 2680
tv460 = 2680
tv456 = 2680
tv356 = 2680
tv318 = 2680
tv271 = 2680
tv265 = 2680
tv184 = 2680
tv488 = 2688
tv484 = 2688
tv399 = 2688
tv352 = 2688
tv314 = 2688
tv267 = 2688
tv261 = 2688
tv228 = 2688
tv177 = 2688
tv144 = 2688
tv490 = 2696
tv486 = 2696
__$ArrayPad$ = 2704
this$ = 2752
numberOfLevels$ = 2760
operators$ = 2768
n$ = 2776
supportedVariables$ = 2784
?dtor$16@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA PROC ; `tree_builder::createLeftRightNodes'::`1'::dtor$16
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	mov	edx, 144				; 00000090H
	mov	rcx, QWORD PTR $T38[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$16@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA ENDP ; `tree_builder::createLeftRightNodes'::`1'::dtor$16
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
useVar$5 = 4
idx$6 = 36
l$7 = 72
idx$8 = 100
r$9 = 136
idx$10 = 164
operL$11 = 200
operR$12 = 280
$T13 = 1128
$T14 = 1160
$T15 = 1192
$T16 = 1256
$T17 = 1288
$T18 = 1320
$T19 = 1352
$T20 = 1416
$T21 = 1448
$T22 = 1480
$T23 = 1512
$T24 = 1576
$T25 = 1608
$T26 = 1640
$T27 = 1672
$T28 = 1736
$T29 = 1768
$T30 = 1832
$T31 = 1864
$T32 = 1896
$T33 = 1928
$T34 = 2008
$T35 = 2040
$T36 = 2104
$T37 = 2136
$T38 = 2168
$T39 = 2200
$T40 = 2280
$T41 = 2312
$T42 = 2376
$T43 = 2408
$T44 = 2472
$T45 = 2504
$T46 = 2568
$T47 = 2600
$T48 = 2664
tv187 = 2676
tv71 = 2676
tv482 = 2680
tv477 = 2680
tv475 = 2680
tv470 = 2680
tv468 = 2680
tv464 = 2680
tv460 = 2680
tv456 = 2680
tv356 = 2680
tv318 = 2680
tv271 = 2680
tv265 = 2680
tv184 = 2680
tv488 = 2688
tv484 = 2688
tv399 = 2688
tv352 = 2688
tv314 = 2688
tv267 = 2688
tv261 = 2688
tv228 = 2688
tv177 = 2688
tv144 = 2688
tv490 = 2696
tv486 = 2696
__$ArrayPad$ = 2704
this$ = 2752
numberOfLevels$ = 2760
operators$ = 2768
n$ = 2776
supportedVariables$ = 2784
?dtor$18@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA PROC ; `tree_builder::createLeftRightNodes'::`1'::dtor$18
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	mov	rcx, QWORD PTR $T42[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$18@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA ENDP ; `tree_builder::createLeftRightNodes'::`1'::dtor$18
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
useVar$5 = 4
idx$6 = 36
l$7 = 72
idx$8 = 100
r$9 = 136
idx$10 = 164
operL$11 = 200
operR$12 = 280
$T13 = 1128
$T14 = 1160
$T15 = 1192
$T16 = 1256
$T17 = 1288
$T18 = 1320
$T19 = 1352
$T20 = 1416
$T21 = 1448
$T22 = 1480
$T23 = 1512
$T24 = 1576
$T25 = 1608
$T26 = 1640
$T27 = 1672
$T28 = 1736
$T29 = 1768
$T30 = 1832
$T31 = 1864
$T32 = 1896
$T33 = 1928
$T34 = 2008
$T35 = 2040
$T36 = 2104
$T37 = 2136
$T38 = 2168
$T39 = 2200
$T40 = 2280
$T41 = 2312
$T42 = 2376
$T43 = 2408
$T44 = 2472
$T45 = 2504
$T46 = 2568
$T47 = 2600
$T48 = 2664
tv187 = 2676
tv71 = 2676
tv482 = 2680
tv477 = 2680
tv475 = 2680
tv470 = 2680
tv468 = 2680
tv464 = 2680
tv460 = 2680
tv456 = 2680
tv356 = 2680
tv318 = 2680
tv271 = 2680
tv265 = 2680
tv184 = 2680
tv488 = 2688
tv484 = 2688
tv399 = 2688
tv352 = 2688
tv314 = 2688
tv267 = 2688
tv261 = 2688
tv228 = 2688
tv177 = 2688
tv144 = 2688
tv490 = 2696
tv486 = 2696
__$ArrayPad$ = 2704
this$ = 2752
numberOfLevels$ = 2760
operators$ = 2768
n$ = 2776
supportedVariables$ = 2784
?dtor$20@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA PROC ; `tree_builder::createLeftRightNodes'::`1'::dtor$20
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	mov	rcx, QWORD PTR $T46[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$20@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA ENDP ; `tree_builder::createLeftRightNodes'::`1'::dtor$20
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
useVar$5 = 4
idx$6 = 36
l$7 = 72
idx$8 = 100
r$9 = 136
idx$10 = 164
operL$11 = 200
operR$12 = 280
$T13 = 1128
$T14 = 1160
$T15 = 1192
$T16 = 1256
$T17 = 1288
$T18 = 1320
$T19 = 1352
$T20 = 1416
$T21 = 1448
$T22 = 1480
$T23 = 1512
$T24 = 1576
$T25 = 1608
$T26 = 1640
$T27 = 1672
$T28 = 1736
$T29 = 1768
$T30 = 1832
$T31 = 1864
$T32 = 1896
$T33 = 1928
$T34 = 2008
$T35 = 2040
$T36 = 2104
$T37 = 2136
$T38 = 2168
$T39 = 2200
$T40 = 2280
$T41 = 2312
$T42 = 2376
$T43 = 2408
$T44 = 2472
$T45 = 2504
$T46 = 2568
$T47 = 2600
$T48 = 2664
tv187 = 2676
tv71 = 2676
tv482 = 2680
tv477 = 2680
tv475 = 2680
tv470 = 2680
tv468 = 2680
tv464 = 2680
tv460 = 2680
tv456 = 2680
tv356 = 2680
tv318 = 2680
tv271 = 2680
tv265 = 2680
tv184 = 2680
tv488 = 2688
tv484 = 2688
tv399 = 2688
tv352 = 2688
tv314 = 2688
tv267 = 2688
tv261 = 2688
tv228 = 2688
tv177 = 2688
tv144 = 2688
tv490 = 2696
tv486 = 2696
__$ArrayPad$ = 2704
this$ = 2752
numberOfLevels$ = 2760
operators$ = 2768
n$ = 2776
supportedVariables$ = 2784
?dtor$0@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA PROC ; `tree_builder::createLeftRightNodes'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	mov	rcx, QWORD PTR supportedVariables$[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA ENDP ; `tree_builder::createLeftRightNodes'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
useVar$5 = 4
idx$6 = 36
l$7 = 72
idx$8 = 100
r$9 = 136
idx$10 = 164
operL$11 = 200
operR$12 = 280
$T13 = 1128
$T14 = 1160
$T15 = 1192
$T16 = 1256
$T17 = 1288
$T18 = 1320
$T19 = 1352
$T20 = 1416
$T21 = 1448
$T22 = 1480
$T23 = 1512
$T24 = 1576
$T25 = 1608
$T26 = 1640
$T27 = 1672
$T28 = 1736
$T29 = 1768
$T30 = 1832
$T31 = 1864
$T32 = 1896
$T33 = 1928
$T34 = 2008
$T35 = 2040
$T36 = 2104
$T37 = 2136
$T38 = 2168
$T39 = 2200
$T40 = 2280
$T41 = 2312
$T42 = 2376
$T43 = 2408
$T44 = 2472
$T45 = 2504
$T46 = 2568
$T47 = 2600
$T48 = 2664
tv187 = 2676
tv71 = 2676
tv482 = 2680
tv477 = 2680
tv475 = 2680
tv470 = 2680
tv468 = 2680
tv464 = 2680
tv460 = 2680
tv456 = 2680
tv356 = 2680
tv318 = 2680
tv271 = 2680
tv265 = 2680
tv184 = 2680
tv488 = 2688
tv484 = 2688
tv399 = 2688
tv352 = 2688
tv314 = 2688
tv267 = 2688
tv261 = 2688
tv228 = 2688
tv177 = 2688
tv144 = 2688
tv490 = 2696
tv486 = 2696
__$ArrayPad$ = 2704
this$ = 2752
numberOfLevels$ = 2760
operators$ = 2768
n$ = 2776
supportedVariables$ = 2784
?dtor$1@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA PROC ; `tree_builder::createLeftRightNodes'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	mov	rcx, QWORD PTR operators$[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA ENDP ; `tree_builder::createLeftRightNodes'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
useVar$5 = 4
idx$6 = 36
l$7 = 72
idx$8 = 100
r$9 = 136
idx$10 = 164
operL$11 = 200
operR$12 = 280
$T13 = 1128
$T14 = 1160
$T15 = 1192
$T16 = 1256
$T17 = 1288
$T18 = 1320
$T19 = 1352
$T20 = 1416
$T21 = 1448
$T22 = 1480
$T23 = 1512
$T24 = 1576
$T25 = 1608
$T26 = 1640
$T27 = 1672
$T28 = 1736
$T29 = 1768
$T30 = 1832
$T31 = 1864
$T32 = 1896
$T33 = 1928
$T34 = 2008
$T35 = 2040
$T36 = 2104
$T37 = 2136
$T38 = 2168
$T39 = 2200
$T40 = 2280
$T41 = 2312
$T42 = 2376
$T43 = 2408
$T44 = 2472
$T45 = 2504
$T46 = 2568
$T47 = 2600
$T48 = 2664
tv187 = 2676
tv71 = 2676
tv482 = 2680
tv477 = 2680
tv475 = 2680
tv470 = 2680
tv468 = 2680
tv464 = 2680
tv460 = 2680
tv456 = 2680
tv356 = 2680
tv318 = 2680
tv271 = 2680
tv265 = 2680
tv184 = 2680
tv488 = 2688
tv484 = 2688
tv399 = 2688
tv352 = 2688
tv314 = 2688
tv267 = 2688
tv261 = 2688
tv228 = 2688
tv177 = 2688
tv144 = 2688
tv490 = 2696
tv486 = 2696
__$ArrayPad$ = 2704
this$ = 2752
numberOfLevels$ = 2760
operators$ = 2768
n$ = 2776
supportedVariables$ = 2784
?dtor$2@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA PROC ; `tree_builder::createLeftRightNodes'::`1'::dtor$2
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	mov	edx, 144				; 00000090H
	mov	rcx, QWORD PTR $T14[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$2@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA ENDP ; `tree_builder::createLeftRightNodes'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
useVar$5 = 4
idx$6 = 36
l$7 = 72
idx$8 = 100
r$9 = 136
idx$10 = 164
operL$11 = 200
operR$12 = 280
$T13 = 1128
$T14 = 1160
$T15 = 1192
$T16 = 1256
$T17 = 1288
$T18 = 1320
$T19 = 1352
$T20 = 1416
$T21 = 1448
$T22 = 1480
$T23 = 1512
$T24 = 1576
$T25 = 1608
$T26 = 1640
$T27 = 1672
$T28 = 1736
$T29 = 1768
$T30 = 1832
$T31 = 1864
$T32 = 1896
$T33 = 1928
$T34 = 2008
$T35 = 2040
$T36 = 2104
$T37 = 2136
$T38 = 2168
$T39 = 2200
$T40 = 2280
$T41 = 2312
$T42 = 2376
$T43 = 2408
$T44 = 2472
$T45 = 2504
$T46 = 2568
$T47 = 2600
$T48 = 2664
tv187 = 2676
tv71 = 2676
tv482 = 2680
tv477 = 2680
tv475 = 2680
tv470 = 2680
tv468 = 2680
tv464 = 2680
tv460 = 2680
tv456 = 2680
tv356 = 2680
tv318 = 2680
tv271 = 2680
tv265 = 2680
tv184 = 2680
tv488 = 2688
tv484 = 2688
tv399 = 2688
tv352 = 2688
tv314 = 2688
tv267 = 2688
tv261 = 2688
tv228 = 2688
tv177 = 2688
tv144 = 2688
tv490 = 2696
tv486 = 2696
__$ArrayPad$ = 2704
this$ = 2752
numberOfLevels$ = 2760
operators$ = 2768
n$ = 2776
supportedVariables$ = 2784
?dtor$4@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA PROC ; `tree_builder::createLeftRightNodes'::`1'::dtor$4
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	mov	edx, 144				; 00000090H
	mov	rcx, QWORD PTR $T18[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$4@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA ENDP ; `tree_builder::createLeftRightNodes'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
useVar$5 = 4
idx$6 = 36
l$7 = 72
idx$8 = 100
r$9 = 136
idx$10 = 164
operL$11 = 200
operR$12 = 280
$T13 = 1128
$T14 = 1160
$T15 = 1192
$T16 = 1256
$T17 = 1288
$T18 = 1320
$T19 = 1352
$T20 = 1416
$T21 = 1448
$T22 = 1480
$T23 = 1512
$T24 = 1576
$T25 = 1608
$T26 = 1640
$T27 = 1672
$T28 = 1736
$T29 = 1768
$T30 = 1832
$T31 = 1864
$T32 = 1896
$T33 = 1928
$T34 = 2008
$T35 = 2040
$T36 = 2104
$T37 = 2136
$T38 = 2168
$T39 = 2200
$T40 = 2280
$T41 = 2312
$T42 = 2376
$T43 = 2408
$T44 = 2472
$T45 = 2504
$T46 = 2568
$T47 = 2600
$T48 = 2664
tv187 = 2676
tv71 = 2676
tv482 = 2680
tv477 = 2680
tv475 = 2680
tv470 = 2680
tv468 = 2680
tv464 = 2680
tv460 = 2680
tv456 = 2680
tv356 = 2680
tv318 = 2680
tv271 = 2680
tv265 = 2680
tv184 = 2680
tv488 = 2688
tv484 = 2688
tv399 = 2688
tv352 = 2688
tv314 = 2688
tv267 = 2688
tv261 = 2688
tv228 = 2688
tv177 = 2688
tv144 = 2688
tv490 = 2696
tv486 = 2696
__$ArrayPad$ = 2704
this$ = 2752
numberOfLevels$ = 2760
operators$ = 2768
n$ = 2776
supportedVariables$ = 2784
?dtor$6@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA PROC ; `tree_builder::createLeftRightNodes'::`1'::dtor$6
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	mov	edx, 144				; 00000090H
	mov	rcx, QWORD PTR $T22[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$6@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA ENDP ; `tree_builder::createLeftRightNodes'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
useVar$5 = 4
idx$6 = 36
l$7 = 72
idx$8 = 100
r$9 = 136
idx$10 = 164
operL$11 = 200
operR$12 = 280
$T13 = 1128
$T14 = 1160
$T15 = 1192
$T16 = 1256
$T17 = 1288
$T18 = 1320
$T19 = 1352
$T20 = 1416
$T21 = 1448
$T22 = 1480
$T23 = 1512
$T24 = 1576
$T25 = 1608
$T26 = 1640
$T27 = 1672
$T28 = 1736
$T29 = 1768
$T30 = 1832
$T31 = 1864
$T32 = 1896
$T33 = 1928
$T34 = 2008
$T35 = 2040
$T36 = 2104
$T37 = 2136
$T38 = 2168
$T39 = 2200
$T40 = 2280
$T41 = 2312
$T42 = 2376
$T43 = 2408
$T44 = 2472
$T45 = 2504
$T46 = 2568
$T47 = 2600
$T48 = 2664
tv187 = 2676
tv71 = 2676
tv482 = 2680
tv477 = 2680
tv475 = 2680
tv470 = 2680
tv468 = 2680
tv464 = 2680
tv460 = 2680
tv456 = 2680
tv356 = 2680
tv318 = 2680
tv271 = 2680
tv265 = 2680
tv184 = 2680
tv488 = 2688
tv484 = 2688
tv399 = 2688
tv352 = 2688
tv314 = 2688
tv267 = 2688
tv261 = 2688
tv228 = 2688
tv177 = 2688
tv144 = 2688
tv490 = 2696
tv486 = 2696
__$ArrayPad$ = 2704
this$ = 2752
numberOfLevels$ = 2760
operators$ = 2768
n$ = 2776
supportedVariables$ = 2784
?dtor$8@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA PROC ; `tree_builder::createLeftRightNodes'::`1'::dtor$8
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	mov	edx, 144				; 00000090H
	mov	rcx, QWORD PTR $T26[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$8@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA ENDP ; `tree_builder::createLeftRightNodes'::`1'::dtor$8
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
useVar$5 = 4
idx$6 = 36
l$7 = 72
idx$8 = 100
r$9 = 136
idx$10 = 164
operL$11 = 200
operR$12 = 280
$T13 = 1128
$T14 = 1160
$T15 = 1192
$T16 = 1256
$T17 = 1288
$T18 = 1320
$T19 = 1352
$T20 = 1416
$T21 = 1448
$T22 = 1480
$T23 = 1512
$T24 = 1576
$T25 = 1608
$T26 = 1640
$T27 = 1672
$T28 = 1736
$T29 = 1768
$T30 = 1832
$T31 = 1864
$T32 = 1896
$T33 = 1928
$T34 = 2008
$T35 = 2040
$T36 = 2104
$T37 = 2136
$T38 = 2168
$T39 = 2200
$T40 = 2280
$T41 = 2312
$T42 = 2376
$T43 = 2408
$T44 = 2472
$T45 = 2504
$T46 = 2568
$T47 = 2600
$T48 = 2664
tv187 = 2676
tv71 = 2676
tv482 = 2680
tv477 = 2680
tv475 = 2680
tv470 = 2680
tv468 = 2680
tv464 = 2680
tv460 = 2680
tv456 = 2680
tv356 = 2680
tv318 = 2680
tv271 = 2680
tv265 = 2680
tv184 = 2680
tv488 = 2688
tv484 = 2688
tv399 = 2688
tv352 = 2688
tv314 = 2688
tv267 = 2688
tv261 = 2688
tv228 = 2688
tv177 = 2688
tv144 = 2688
tv490 = 2696
tv486 = 2696
__$ArrayPad$ = 2704
this$ = 2752
numberOfLevels$ = 2760
operators$ = 2768
n$ = 2776
supportedVariables$ = 2784
?dtor$11@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA PROC ; `tree_builder::createLeftRightNodes'::`1'::dtor$11
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	lea	rcx, QWORD PTR operL$11[rbp]
	call	??1op@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$11@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA ENDP ; `tree_builder::createLeftRightNodes'::`1'::dtor$11
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
useVar$5 = 4
idx$6 = 36
l$7 = 72
idx$8 = 100
r$9 = 136
idx$10 = 164
operL$11 = 200
operR$12 = 280
$T13 = 1128
$T14 = 1160
$T15 = 1192
$T16 = 1256
$T17 = 1288
$T18 = 1320
$T19 = 1352
$T20 = 1416
$T21 = 1448
$T22 = 1480
$T23 = 1512
$T24 = 1576
$T25 = 1608
$T26 = 1640
$T27 = 1672
$T28 = 1736
$T29 = 1768
$T30 = 1832
$T31 = 1864
$T32 = 1896
$T33 = 1928
$T34 = 2008
$T35 = 2040
$T36 = 2104
$T37 = 2136
$T38 = 2168
$T39 = 2200
$T40 = 2280
$T41 = 2312
$T42 = 2376
$T43 = 2408
$T44 = 2472
$T45 = 2504
$T46 = 2568
$T47 = 2600
$T48 = 2664
tv187 = 2676
tv71 = 2676
tv482 = 2680
tv477 = 2680
tv475 = 2680
tv470 = 2680
tv468 = 2680
tv464 = 2680
tv460 = 2680
tv456 = 2680
tv356 = 2680
tv318 = 2680
tv271 = 2680
tv265 = 2680
tv184 = 2680
tv488 = 2688
tv484 = 2688
tv399 = 2688
tv352 = 2688
tv314 = 2688
tv267 = 2688
tv261 = 2688
tv228 = 2688
tv177 = 2688
tv144 = 2688
tv490 = 2696
tv486 = 2696
__$ArrayPad$ = 2704
this$ = 2752
numberOfLevels$ = 2760
operators$ = 2768
n$ = 2776
supportedVariables$ = 2784
?dtor$12@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA PROC ; `tree_builder::createLeftRightNodes'::`1'::dtor$12
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	mov	edx, 144				; 00000090H
	mov	rcx, QWORD PTR $T32[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$12@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA ENDP ; `tree_builder::createLeftRightNodes'::`1'::dtor$12
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
useVar$5 = 4
idx$6 = 36
l$7 = 72
idx$8 = 100
r$9 = 136
idx$10 = 164
operL$11 = 200
operR$12 = 280
$T13 = 1128
$T14 = 1160
$T15 = 1192
$T16 = 1256
$T17 = 1288
$T18 = 1320
$T19 = 1352
$T20 = 1416
$T21 = 1448
$T22 = 1480
$T23 = 1512
$T24 = 1576
$T25 = 1608
$T26 = 1640
$T27 = 1672
$T28 = 1736
$T29 = 1768
$T30 = 1832
$T31 = 1864
$T32 = 1896
$T33 = 1928
$T34 = 2008
$T35 = 2040
$T36 = 2104
$T37 = 2136
$T38 = 2168
$T39 = 2200
$T40 = 2280
$T41 = 2312
$T42 = 2376
$T43 = 2408
$T44 = 2472
$T45 = 2504
$T46 = 2568
$T47 = 2600
$T48 = 2664
tv187 = 2676
tv71 = 2676
tv482 = 2680
tv477 = 2680
tv475 = 2680
tv470 = 2680
tv468 = 2680
tv464 = 2680
tv460 = 2680
tv456 = 2680
tv356 = 2680
tv318 = 2680
tv271 = 2680
tv265 = 2680
tv184 = 2680
tv488 = 2688
tv484 = 2688
tv399 = 2688
tv352 = 2688
tv314 = 2688
tv267 = 2688
tv261 = 2688
tv228 = 2688
tv177 = 2688
tv144 = 2688
tv490 = 2696
tv486 = 2696
__$ArrayPad$ = 2704
this$ = 2752
numberOfLevels$ = 2760
operators$ = 2768
n$ = 2776
supportedVariables$ = 2784
?dtor$15@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA PROC ; `tree_builder::createLeftRightNodes'::`1'::dtor$15
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	lea	rcx, QWORD PTR operR$12[rbp]
	call	??1op@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$15@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA ENDP ; `tree_builder::createLeftRightNodes'::`1'::dtor$15
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
useVar$5 = 4
idx$6 = 36
l$7 = 72
idx$8 = 100
r$9 = 136
idx$10 = 164
operL$11 = 200
operR$12 = 280
$T13 = 1128
$T14 = 1160
$T15 = 1192
$T16 = 1256
$T17 = 1288
$T18 = 1320
$T19 = 1352
$T20 = 1416
$T21 = 1448
$T22 = 1480
$T23 = 1512
$T24 = 1576
$T25 = 1608
$T26 = 1640
$T27 = 1672
$T28 = 1736
$T29 = 1768
$T30 = 1832
$T31 = 1864
$T32 = 1896
$T33 = 1928
$T34 = 2008
$T35 = 2040
$T36 = 2104
$T37 = 2136
$T38 = 2168
$T39 = 2200
$T40 = 2280
$T41 = 2312
$T42 = 2376
$T43 = 2408
$T44 = 2472
$T45 = 2504
$T46 = 2568
$T47 = 2600
$T48 = 2664
tv187 = 2676
tv71 = 2676
tv482 = 2680
tv477 = 2680
tv475 = 2680
tv470 = 2680
tv468 = 2680
tv464 = 2680
tv460 = 2680
tv456 = 2680
tv356 = 2680
tv318 = 2680
tv271 = 2680
tv265 = 2680
tv184 = 2680
tv488 = 2688
tv484 = 2688
tv399 = 2688
tv352 = 2688
tv314 = 2688
tv267 = 2688
tv261 = 2688
tv228 = 2688
tv177 = 2688
tv144 = 2688
tv490 = 2696
tv486 = 2696
__$ArrayPad$ = 2704
this$ = 2752
numberOfLevels$ = 2760
operators$ = 2768
n$ = 2776
supportedVariables$ = 2784
?dtor$16@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA PROC ; `tree_builder::createLeftRightNodes'::`1'::dtor$16
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	mov	edx, 144				; 00000090H
	mov	rcx, QWORD PTR $T38[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$16@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA ENDP ; `tree_builder::createLeftRightNodes'::`1'::dtor$16
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
useVar$5 = 4
idx$6 = 36
l$7 = 72
idx$8 = 100
r$9 = 136
idx$10 = 164
operL$11 = 200
operR$12 = 280
$T13 = 1128
$T14 = 1160
$T15 = 1192
$T16 = 1256
$T17 = 1288
$T18 = 1320
$T19 = 1352
$T20 = 1416
$T21 = 1448
$T22 = 1480
$T23 = 1512
$T24 = 1576
$T25 = 1608
$T26 = 1640
$T27 = 1672
$T28 = 1736
$T29 = 1768
$T30 = 1832
$T31 = 1864
$T32 = 1896
$T33 = 1928
$T34 = 2008
$T35 = 2040
$T36 = 2104
$T37 = 2136
$T38 = 2168
$T39 = 2200
$T40 = 2280
$T41 = 2312
$T42 = 2376
$T43 = 2408
$T44 = 2472
$T45 = 2504
$T46 = 2568
$T47 = 2600
$T48 = 2664
tv187 = 2676
tv71 = 2676
tv482 = 2680
tv477 = 2680
tv475 = 2680
tv470 = 2680
tv468 = 2680
tv464 = 2680
tv460 = 2680
tv456 = 2680
tv356 = 2680
tv318 = 2680
tv271 = 2680
tv265 = 2680
tv184 = 2680
tv488 = 2688
tv484 = 2688
tv399 = 2688
tv352 = 2688
tv314 = 2688
tv267 = 2688
tv261 = 2688
tv228 = 2688
tv177 = 2688
tv144 = 2688
tv490 = 2696
tv486 = 2696
__$ArrayPad$ = 2704
this$ = 2752
numberOfLevels$ = 2760
operators$ = 2768
n$ = 2776
supportedVariables$ = 2784
?dtor$18@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA PROC ; `tree_builder::createLeftRightNodes'::`1'::dtor$18
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	mov	rcx, QWORD PTR $T42[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$18@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA ENDP ; `tree_builder::createLeftRightNodes'::`1'::dtor$18
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
useVar$5 = 4
idx$6 = 36
l$7 = 72
idx$8 = 100
r$9 = 136
idx$10 = 164
operL$11 = 200
operR$12 = 280
$T13 = 1128
$T14 = 1160
$T15 = 1192
$T16 = 1256
$T17 = 1288
$T18 = 1320
$T19 = 1352
$T20 = 1416
$T21 = 1448
$T22 = 1480
$T23 = 1512
$T24 = 1576
$T25 = 1608
$T26 = 1640
$T27 = 1672
$T28 = 1736
$T29 = 1768
$T30 = 1832
$T31 = 1864
$T32 = 1896
$T33 = 1928
$T34 = 2008
$T35 = 2040
$T36 = 2104
$T37 = 2136
$T38 = 2168
$T39 = 2200
$T40 = 2280
$T41 = 2312
$T42 = 2376
$T43 = 2408
$T44 = 2472
$T45 = 2504
$T46 = 2568
$T47 = 2600
$T48 = 2664
tv187 = 2676
tv71 = 2676
tv482 = 2680
tv477 = 2680
tv475 = 2680
tv470 = 2680
tv468 = 2680
tv464 = 2680
tv460 = 2680
tv456 = 2680
tv356 = 2680
tv318 = 2680
tv271 = 2680
tv265 = 2680
tv184 = 2680
tv488 = 2688
tv484 = 2688
tv399 = 2688
tv352 = 2688
tv314 = 2688
tv267 = 2688
tv261 = 2688
tv228 = 2688
tv177 = 2688
tv144 = 2688
tv490 = 2696
tv486 = 2696
__$ArrayPad$ = 2704
this$ = 2752
numberOfLevels$ = 2760
operators$ = 2768
n$ = 2776
supportedVariables$ = 2784
?dtor$20@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA PROC ; `tree_builder::createLeftRightNodes'::`1'::dtor$20
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	mov	rcx, QWORD PTR $T46[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$20@?0??createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z@4HA ENDP ; `tree_builder::createLeftRightNodes'::`1'::dtor$20
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\shtuk\Desktop\Files\EquationStringParser\EquationStringParser\tree_builder.h
;	COMDAT ?getrand@tree_builder@@QEAAH_K@Z
_TEXT	SEGMENT
this$ = 224
max$ = 232
?getrand@tree_builder@@QEAAH_K@Z PROC			; tree_builder::getrand, COMDAT

; 69   : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__3F6EDB1A_tree_builder@h
	call	__CheckForDebuggerJustMyCode

; 70   : 		return rand() % max;

	call	QWORD PTR __imp_rand
	cdqe
	xor	edx, edx
	div	QWORD PTR max$[rbp]
	mov	rax, rdx

; 71   : 
; 72   : 	}

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?getrand@tree_builder@@QEAAH_K@Z ENDP			; tree_builder::getrand
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\shtuk\Desktop\Files\EquationStringParser\EquationStringParser\tree_builder.h
;	COMDAT ?randomDouble@tree_builder@@QEAANNN@Z
_TEXT	SEGMENT
f$ = 8
this$ = 256
fMin$ = 264
fMax$ = 272
?randomDouble@tree_builder@@QEAANNN@Z PROC		; tree_builder::randomDouble, COMDAT

; 63   : 	{

$LN3:
	movsd	QWORD PTR [rsp+24], xmm2
	movsd	QWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 280				; 00000118H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__3F6EDB1A_tree_builder@h
	call	__CheckForDebuggerJustMyCode

; 64   : 		double f = (double)rand() / RAND_MAX;

	call	QWORD PTR __imp_rand
	cvtsi2sd xmm0, eax
	divsd	xmm0, QWORD PTR __real@40dfffc000000000
	movsd	QWORD PTR f$[rbp], xmm0

; 65   : 		return fMin + f * (fMax - fMin);

	movsd	xmm0, QWORD PTR fMax$[rbp]
	subsd	xmm0, QWORD PTR fMin$[rbp]
	movsd	xmm1, QWORD PTR f$[rbp]
	mulsd	xmm1, xmm0
	movaps	xmm0, xmm1
	movsd	xmm1, QWORD PTR fMin$[rbp]
	addsd	xmm1, xmm0
	movaps	xmm0, xmm1

; 66   : 	}

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?randomDouble@tree_builder@@QEAANNN@Z ENDP		; tree_builder::randomDouble
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\shtuk\Desktop\Files\EquationStringParser\EquationStringParser\tree_builder.h
;	COMDAT ?generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
_TEXT	SEGMENT
idx$ = 4
oper$ = 40
n$ = 120
$T5 = 536
$T6 = 600
$T7 = 632
$T8 = 664
$T9 = 696
$T10 = 776
$T11 = 808
$T12 = 872
$T13 = 904
$T14 = 968
tv181 = 984
tv176 = 984
tv73 = 984
tv67 = 984
tv183 = 992
tv147 = 992
tv69 = 992
tv185 = 1000
__$ArrayPad$ = 1008
this$ = 1056
numberOfLevels$ = 1064
mathOperators$ = 1072
supportedVariables$ = 1080
?generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z PROC ; tree_builder::generate_random_tree, COMDAT

; 50   : 	{

$LN13:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 1080				; 00000438H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 162				; 000000a2H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+1112]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__3F6EDB1A_tree_builder@h
	call	__CheckForDebuggerJustMyCode

; 51   : 		//select operator random from mathOperators
; 52   : 		int idx = rand() % mathOperators.length();

	call	QWORD PTR __imp_rand
	cdqe
	mov	QWORD PTR tv67[rbp], rax
	mov	rcx, QWORD PTR mathOperators$[rbp]
	call	?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
	mov	QWORD PTR tv69[rbp], rax
	xor	edx, edx
	mov	rcx, QWORD PTR tv67[rbp]
	mov	rax, rcx
	mov	rcx, QWORD PTR tv69[rbp]
	div	rcx
	mov	rax, rdx
	mov	DWORD PTR idx$[rbp], eax

; 53   : 
; 54   : 		op oper(std::string(1, mathOperators.at(idx)));

	lea	rax, QWORD PTR $T5[rbp]
	mov	QWORD PTR $T6[rbp], rax
	movsxd	rax, DWORD PTR idx$[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR mathOperators$[rbp]
	call	?at@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::at
	movzx	r8d, BYTE PTR [rax]
	mov	edx, 1
	mov	rcx, QWORD PTR $T6[rbp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	QWORD PTR tv176[rbp], rax
	mov	rdx, QWORD PTR tv176[rbp]
	lea	rcx, QWORD PTR oper$[rbp]
	call	??0op@@QEAA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; op::op
	npad	1

; 55   : 		node *n = new node(oper);

	mov	ecx, 144				; 00000090H
	call	??2@YAPEAX_K@Z				; operator new
	mov	QWORD PTR $T8[rbp], rax
	cmp	QWORD PTR $T8[rbp], 0
	je	SHORT $LN3@generate_r
	mov	edx, 144				; 00000090H
	mov	rcx, QWORD PTR $T8[rbp]
	call	?__autoclassinit2@node@@QEAAX_K@Z
	lea	rax, QWORD PTR $T9[rbp]
	mov	QWORD PTR $T10[rbp], rax
	lea	rdx, QWORD PTR oper$[rbp]
	mov	rcx, QWORD PTR $T10[rbp]
	call	??0op@@QEAA@AEBU0@@Z
	mov	QWORD PTR tv181[rbp], rax
	mov	rdx, QWORD PTR tv181[rbp]
	mov	rcx, QWORD PTR $T8[rbp]
	call	??0node@@QEAA@Uop@@@Z			; node::node
	mov	QWORD PTR tv147[rbp], rax
	jmp	SHORT $LN4@generate_r
$LN3@generate_r:
	mov	QWORD PTR tv147[rbp], 0
$LN4@generate_r:
	mov	rax, QWORD PTR tv147[rbp]
	mov	QWORD PTR $T7[rbp], rax
	mov	rax, QWORD PTR $T7[rbp]
	mov	QWORD PTR n$[rbp], rax

; 56   : 
; 57   : 		tree.nodes.push_back(n);

	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	lea	rdx, QWORD PTR n$[rbp]
	mov	rcx, rax
	call	?push_back@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAXAEBQEAVnode@@@Z ; std::vector<node *,std::allocator<node *> >::push_back

; 58   : 
; 59   : 		createLeftRightNodes(numberOfLevels - 1, mathOperators, n, supportedVariables);

	lea	rax, QWORD PTR $T11[rbp]
	mov	QWORD PTR $T12[rbp], rax
	lea	rax, QWORD PTR $T13[rbp]
	mov	QWORD PTR $T14[rbp], rax
	mov	rdx, QWORD PTR supportedVariables$[rbp]
	mov	rcx, QWORD PTR $T12[rbp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	QWORD PTR tv73[rbp], rax
	mov	rax, QWORD PTR tv73[rbp]
	mov	QWORD PTR tv183[rbp], rax
	mov	rdx, QWORD PTR mathOperators$[rbp]
	mov	rcx, QWORD PTR $T14[rbp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	QWORD PTR tv185[rbp], rax
	mov	eax, DWORD PTR numberOfLevels$[rbp]
	dec	eax
	mov	rcx, QWORD PTR tv183[rbp]
	mov	QWORD PTR [rsp+32], rcx
	mov	r9, QWORD PTR n$[rbp]
	mov	r8, QWORD PTR tv185[rbp]
	mov	edx, eax
	mov	rcx, QWORD PTR this$[rbp]
	call	?createLeftRightNodes@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVnode@@0@Z ; tree_builder::createLeftRightNodes
	npad	1

; 60   : 	}

	lea	rcx, QWORD PTR oper$[rbp]
	call	??1op@@QEAA@XZ
	npad	1
	mov	rcx, QWORD PTR mathOperators$[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	mov	rcx, QWORD PTR supportedVariables$[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	lea	rcx, QWORD PTR [rbp-48]
	lea	rdx, OFFSET FLAT:?generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+1032]
	pop	rdi
	pop	rbp
	ret	0
?generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ENDP ; tree_builder::generate_random_tree
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
idx$ = 4
oper$ = 40
n$ = 120
$T5 = 536
$T6 = 600
$T7 = 632
$T8 = 664
$T9 = 696
$T10 = 776
$T11 = 808
$T12 = 872
$T13 = 904
$T14 = 968
tv181 = 984
tv176 = 984
tv73 = 984
tv67 = 984
tv183 = 992
tv147 = 992
tv69 = 992
tv185 = 1000
__$ArrayPad$ = 1008
this$ = 1056
numberOfLevels$ = 1064
mathOperators$ = 1072
supportedVariables$ = 1080
?dtor$0@?0??generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA PROC ; `tree_builder::generate_random_tree'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	mov	rcx, QWORD PTR supportedVariables$[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA ENDP ; `tree_builder::generate_random_tree'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
idx$ = 4
oper$ = 40
n$ = 120
$T5 = 536
$T6 = 600
$T7 = 632
$T8 = 664
$T9 = 696
$T10 = 776
$T11 = 808
$T12 = 872
$T13 = 904
$T14 = 968
tv181 = 984
tv176 = 984
tv73 = 984
tv67 = 984
tv183 = 992
tv147 = 992
tv69 = 992
tv185 = 1000
__$ArrayPad$ = 1008
this$ = 1056
numberOfLevels$ = 1064
mathOperators$ = 1072
supportedVariables$ = 1080
?dtor$1@?0??generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA PROC ; `tree_builder::generate_random_tree'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	mov	rcx, QWORD PTR mathOperators$[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0??generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA ENDP ; `tree_builder::generate_random_tree'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
idx$ = 4
oper$ = 40
n$ = 120
$T5 = 536
$T6 = 600
$T7 = 632
$T8 = 664
$T9 = 696
$T10 = 776
$T11 = 808
$T12 = 872
$T13 = 904
$T14 = 968
tv181 = 984
tv176 = 984
tv73 = 984
tv67 = 984
tv183 = 992
tv147 = 992
tv69 = 992
tv185 = 1000
__$ArrayPad$ = 1008
this$ = 1056
numberOfLevels$ = 1064
mathOperators$ = 1072
supportedVariables$ = 1080
?dtor$3@?0??generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA PROC ; `tree_builder::generate_random_tree'::`1'::dtor$3
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	lea	rcx, QWORD PTR oper$[rbp]
	call	??1op@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$3@?0??generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA ENDP ; `tree_builder::generate_random_tree'::`1'::dtor$3
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
idx$ = 4
oper$ = 40
n$ = 120
$T5 = 536
$T6 = 600
$T7 = 632
$T8 = 664
$T9 = 696
$T10 = 776
$T11 = 808
$T12 = 872
$T13 = 904
$T14 = 968
tv181 = 984
tv176 = 984
tv73 = 984
tv67 = 984
tv183 = 992
tv147 = 992
tv69 = 992
tv185 = 1000
__$ArrayPad$ = 1008
this$ = 1056
numberOfLevels$ = 1064
mathOperators$ = 1072
supportedVariables$ = 1080
?dtor$4@?0??generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA PROC ; `tree_builder::generate_random_tree'::`1'::dtor$4
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	mov	edx, 144				; 00000090H
	mov	rcx, QWORD PTR $T8[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$4@?0??generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA ENDP ; `tree_builder::generate_random_tree'::`1'::dtor$4
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
idx$ = 4
oper$ = 40
n$ = 120
$T5 = 536
$T6 = 600
$T7 = 632
$T8 = 664
$T9 = 696
$T10 = 776
$T11 = 808
$T12 = 872
$T13 = 904
$T14 = 968
tv181 = 984
tv176 = 984
tv73 = 984
tv67 = 984
tv183 = 992
tv147 = 992
tv69 = 992
tv185 = 1000
__$ArrayPad$ = 1008
this$ = 1056
numberOfLevels$ = 1064
mathOperators$ = 1072
supportedVariables$ = 1080
?dtor$6@?0??generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA PROC ; `tree_builder::generate_random_tree'::`1'::dtor$6
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	mov	rcx, QWORD PTR $T12[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$6@?0??generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA ENDP ; `tree_builder::generate_random_tree'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
idx$ = 4
oper$ = 40
n$ = 120
$T5 = 536
$T6 = 600
$T7 = 632
$T8 = 664
$T9 = 696
$T10 = 776
$T11 = 808
$T12 = 872
$T13 = 904
$T14 = 968
tv181 = 984
tv176 = 984
tv73 = 984
tv67 = 984
tv183 = 992
tv147 = 992
tv69 = 992
tv185 = 1000
__$ArrayPad$ = 1008
this$ = 1056
numberOfLevels$ = 1064
mathOperators$ = 1072
supportedVariables$ = 1080
?dtor$0@?0??generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA PROC ; `tree_builder::generate_random_tree'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	mov	rcx, QWORD PTR supportedVariables$[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA ENDP ; `tree_builder::generate_random_tree'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
idx$ = 4
oper$ = 40
n$ = 120
$T5 = 536
$T6 = 600
$T7 = 632
$T8 = 664
$T9 = 696
$T10 = 776
$T11 = 808
$T12 = 872
$T13 = 904
$T14 = 968
tv181 = 984
tv176 = 984
tv73 = 984
tv67 = 984
tv183 = 992
tv147 = 992
tv69 = 992
tv185 = 1000
__$ArrayPad$ = 1008
this$ = 1056
numberOfLevels$ = 1064
mathOperators$ = 1072
supportedVariables$ = 1080
?dtor$1@?0??generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA PROC ; `tree_builder::generate_random_tree'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	mov	rcx, QWORD PTR mathOperators$[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0??generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA ENDP ; `tree_builder::generate_random_tree'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
idx$ = 4
oper$ = 40
n$ = 120
$T5 = 536
$T6 = 600
$T7 = 632
$T8 = 664
$T9 = 696
$T10 = 776
$T11 = 808
$T12 = 872
$T13 = 904
$T14 = 968
tv181 = 984
tv176 = 984
tv73 = 984
tv67 = 984
tv183 = 992
tv147 = 992
tv69 = 992
tv185 = 1000
__$ArrayPad$ = 1008
this$ = 1056
numberOfLevels$ = 1064
mathOperators$ = 1072
supportedVariables$ = 1080
?dtor$3@?0??generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA PROC ; `tree_builder::generate_random_tree'::`1'::dtor$3
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	lea	rcx, QWORD PTR oper$[rbp]
	call	??1op@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$3@?0??generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA ENDP ; `tree_builder::generate_random_tree'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
idx$ = 4
oper$ = 40
n$ = 120
$T5 = 536
$T6 = 600
$T7 = 632
$T8 = 664
$T9 = 696
$T10 = 776
$T11 = 808
$T12 = 872
$T13 = 904
$T14 = 968
tv181 = 984
tv176 = 984
tv73 = 984
tv67 = 984
tv183 = 992
tv147 = 992
tv69 = 992
tv185 = 1000
__$ArrayPad$ = 1008
this$ = 1056
numberOfLevels$ = 1064
mathOperators$ = 1072
supportedVariables$ = 1080
?dtor$4@?0??generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA PROC ; `tree_builder::generate_random_tree'::`1'::dtor$4
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	mov	edx, 144				; 00000090H
	mov	rcx, QWORD PTR $T8[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$4@?0??generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA ENDP ; `tree_builder::generate_random_tree'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
idx$ = 4
oper$ = 40
n$ = 120
$T5 = 536
$T6 = 600
$T7 = 632
$T8 = 664
$T9 = 696
$T10 = 776
$T11 = 808
$T12 = 872
$T13 = 904
$T14 = 968
tv181 = 984
tv176 = 984
tv73 = 984
tv67 = 984
tv183 = 992
tv147 = 992
tv69 = 992
tv185 = 1000
__$ArrayPad$ = 1008
this$ = 1056
numberOfLevels$ = 1064
mathOperators$ = 1072
supportedVariables$ = 1080
?dtor$6@?0??generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA PROC ; `tree_builder::generate_random_tree'::`1'::dtor$6
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	mov	rcx, QWORD PTR $T12[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$6@?0??generate_random_tree@tree_builder@@QEAAXHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA ENDP ; `tree_builder::generate_random_tree'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\shtuk\Desktop\Files\EquationStringParser\EquationStringParser\tree_builder.h
;	COMDAT ??0tree_builder@@QEAA@PEAVexpression@@@Z
_TEXT	SEGMENT
this$ = 224
table$ = 232
??0tree_builder@@QEAA@PEAVexpression@@@Z PROC		; tree_builder::tree_builder, COMDAT

; 45   : 	{

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__3F6EDB1A_tree_builder@h
	call	__CheckForDebuggerJustMyCode

; 44   : 	tree_builder(expression *table = nullptr) : manager(table)

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR table$[rbp]
	mov	QWORD PTR [rax], rcx

; 45   : 	{

	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	rcx, rax
	call	??0binary_tree@@QEAA@XZ

; 46   : 		srand((unsigned)time(0));

	xor	ecx, ecx
	call	time
	mov	ecx, eax
	call	QWORD PTR __imp_srand

; 47   : 	}

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0tree_builder@@QEAA@PEAVexpression@@@Z ENDP		; tree_builder::tree_builder
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0binary_tree@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0binary_tree@@QEAA@XZ PROC				; binary_tree::binary_tree, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	??0?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAA@XZ ; std::vector<node *,std::allocator<node *> >::vector<node *,std::allocator<node *> >
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0binary_tree@@QEAA@XZ ENDP				; binary_tree::binary_tree
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\shtuk\Desktop\Files\EquationStringParser\EquationStringParser\tree_builder.h
;	COMDAT ??1binary_tree@@QEAA@XZ
_TEXT	SEGMENT
<range>$L0$1 = 8
<begin>$L0$2 = 40
<end>$L0$3 = 72
n$4 = 104
$T5 = 328
tv77 = 344
this$ = 384
??1binary_tree@@QEAA@XZ PROC				; binary_tree::~binary_tree, COMDAT

; 25   : 	{

$LN8:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 392				; 00000188H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__3F6EDB1A_tree_builder@h
	call	__CheckForDebuggerJustMyCode

; 26   : 		for (auto n : nodes)

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR <range>$L0$1[rbp], rax
	mov	rcx, QWORD PTR <range>$L0$1[rbp]
	call	?_Unchecked_begin@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAPEAPEAVnode@@XZ ; std::vector<node *,std::allocator<node *> >::_Unchecked_begin
	mov	QWORD PTR <begin>$L0$2[rbp], rax
	mov	rcx, QWORD PTR <range>$L0$1[rbp]
	call	?_Unchecked_end@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAPEAPEAVnode@@XZ ; std::vector<node *,std::allocator<node *> >::_Unchecked_end
	mov	QWORD PTR <end>$L0$3[rbp], rax
	jmp	SHORT $LN4@binary_tre
$LN2@binary_tre:
	mov	rax, QWORD PTR <begin>$L0$2[rbp]
	add	rax, 8
	mov	QWORD PTR <begin>$L0$2[rbp], rax
$LN4@binary_tre:
	mov	rax, QWORD PTR <end>$L0$3[rbp]
	cmp	QWORD PTR <begin>$L0$2[rbp], rax
	je	SHORT $LN3@binary_tre
	mov	rax, QWORD PTR <begin>$L0$2[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR n$4[rbp], rax

; 27   : 		{
; 28   : 			delete n;

	mov	rax, QWORD PTR n$4[rbp]
	mov	QWORD PTR $T5[rbp], rax
	cmp	QWORD PTR $T5[rbp], 0
	je	SHORT $LN6@binary_tre
	mov	edx, 1
	mov	rcx, QWORD PTR $T5[rbp]
	call	??_Gnode@@QEAAPEAXI@Z
	mov	QWORD PTR tv77[rbp], rax
	jmp	SHORT $LN7@binary_tre
$LN6@binary_tre:
	mov	QWORD PTR tv77[rbp], 0
$LN7@binary_tre:

; 29   : 		}

	jmp	SHORT $LN2@binary_tre
$LN3@binary_tre:

; 30   : 
; 31   : 		nodes.clear();

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	?clear@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAXXZ ; std::vector<node *,std::allocator<node *> >::clear

; 32   : 	}

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	??1?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAA@XZ ; std::vector<node *,std::allocator<node *> >::~vector<node *,std::allocator<node *> >
	lea	rsp, QWORD PTR [rbp+360]
	pop	rdi
	pop	rbp
	ret	0
??1binary_tree@@QEAA@XZ ENDP				; binary_tree::~binary_tree
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\shtuk\Desktop\Files\EquationStringParser\EquationStringParser\tree_builder.h
;	COMDAT ?getNodeByNumber@binary_tree@@QEAAPEAVnode@@H@Z
_TEXT	SEGMENT
<range>$L0$1 = 8
<begin>$L0$2 = 40
<end>$L0$3 = 72
n$4 = 104
this$ = 352
nodeNumber$ = 360
?getNodeByNumber@binary_tree@@QEAAPEAVnode@@H@Z PROC	; binary_tree::getNodeByNumber, COMDAT

; 14   : 	{

$LN7:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 360				; 00000168H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__3F6EDB1A_tree_builder@h
	call	__CheckForDebuggerJustMyCode

; 15   : 		for (node* n : nodes)

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR <range>$L0$1[rbp], rax
	mov	rcx, QWORD PTR <range>$L0$1[rbp]
	call	?_Unchecked_begin@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAPEAPEAVnode@@XZ ; std::vector<node *,std::allocator<node *> >::_Unchecked_begin
	mov	QWORD PTR <begin>$L0$2[rbp], rax
	mov	rcx, QWORD PTR <range>$L0$1[rbp]
	call	?_Unchecked_end@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAPEAPEAVnode@@XZ ; std::vector<node *,std::allocator<node *> >::_Unchecked_end
	mov	QWORD PTR <end>$L0$3[rbp], rax
	jmp	SHORT $LN4@getNodeByN
$LN2@getNodeByN:
	mov	rax, QWORD PTR <begin>$L0$2[rbp]
	add	rax, 8
	mov	QWORD PTR <begin>$L0$2[rbp], rax
$LN4@getNodeByN:
	mov	rax, QWORD PTR <end>$L0$3[rbp]
	cmp	QWORD PTR <begin>$L0$2[rbp], rax
	je	SHORT $LN3@getNodeByN
	mov	rax, QWORD PTR <begin>$L0$2[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR n$4[rbp], rax

; 16   : 		{
; 17   : 			if (n->getOperatorNumber() == nodeNumber)

	mov	rcx, QWORD PTR n$4[rbp]
	call	?getOperatorNumber@node@@QEBAHXZ	; node::getOperatorNumber
	cmp	eax, DWORD PTR nodeNumber$[rbp]
	jne	SHORT $LN5@getNodeByN

; 18   : 				return n;

	mov	rax, QWORD PTR n$4[rbp]
	jmp	SHORT $LN1@getNodeByN
$LN5@getNodeByN:

; 19   : 		}

	jmp	SHORT $LN2@getNodeByN
$LN3@getNodeByN:

; 20   : 
; 21   : 		return NULL;

	xor	eax, eax
$LN1@getNodeByN:

; 22   : 	}

	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
?getNodeByNumber@binary_tree@@QEAAPEAVnode@@H@Z ENDP	; binary_tree::getNodeByNumber
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@PEAVnode@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVnode@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAVnode@@@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Get_first@?$_Compressed_pair@V?$allocator@PEAVnode@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVnode@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAVnode@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<node *>,std::_Vector_val<std::_Simple_types<node *> >,1>::_Get_first, COMDAT

; 1401 :     constexpr const _Ty1& _Get_first() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode

; 1402 :         return *this;

	mov	rax, QWORD PTR this$[rbp]

; 1403 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@PEAVnode@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVnode@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAVnode@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<node *>,std::_Vector_val<std::_Simple_types<node *> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@PEAVnode@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVnode@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAVnode@@@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Get_first@?$_Compressed_pair@V?$allocator@PEAVnode@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVnode@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAVnode@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<node *>,std::_Vector_val<std::_Simple_types<node *> >,1>::_Get_first, COMDAT

; 1397 :     constexpr _Ty1& _Get_first() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode

; 1398 :         return *this;

	mov	rax, QWORD PTR this$[rbp]

; 1399 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@PEAVnode@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVnode@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAVnode@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<node *>,std::_Vector_val<std::_Simple_types<node *> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@PEAVnode@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$_Vector_val@U?$_Simple_types@PEAVnode@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<node *> >::_Vector_val<std::_Simple_types<node *> >, COMDAT

; 401  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__324884E2_vector
	call	__CheckForDebuggerJustMyCode
	mov	rcx, QWORD PTR this$[rbp]
	call	??0_Container_base12@std@@QEAA@XZ	; std::_Container_base12::_Container_base12
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+16], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+24], 0
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$_Vector_val@U?$_Simple_types@PEAVnode@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<node *> >::_Vector_val<std::_Simple_types<node *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Getal@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEBAAEBV?$allocator@PEAVnode@@@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Getal@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEBAAEBV?$allocator@PEAVnode@@@2@XZ PROC ; std::vector<node *,std::allocator<node *> >::_Getal, COMDAT

; 1821 :     _NODISCARD _CONSTEXPR20_CONTAINER const _Alty& _Getal() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__324884E2_vector
	call	__CheckForDebuggerJustMyCode

; 1822 :         return _Mypair._Get_first();

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@V?$allocator@PEAVnode@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVnode@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAVnode@@@2@XZ ; std::_Compressed_pair<std::allocator<node *>,std::_Vector_val<std::_Simple_types<node *> >,1>::_Get_first

; 1823 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Getal@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEBAAEBV?$allocator@PEAVnode@@@2@XZ ENDP ; std::vector<node *,std::allocator<node *> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Getal@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAAEAV?$allocator@PEAVnode@@@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Getal@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAAEAV?$allocator@PEAVnode@@@2@XZ PROC ; std::vector<node *,std::allocator<node *> >::_Getal, COMDAT

; 1817 :     _NODISCARD _CONSTEXPR20_CONTAINER _Alty& _Getal() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__324884E2_vector
	call	__CheckForDebuggerJustMyCode

; 1818 :         return _Mypair._Get_first();

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@V?$allocator@PEAVnode@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVnode@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAVnode@@@2@XZ ; std::_Compressed_pair<std::allocator<node *>,std::_Vector_val<std::_Simple_types<node *> >,1>::_Get_first

; 1819 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Getal@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAAEAV?$allocator@PEAVnode@@@2@XZ ENDP ; std::vector<node *,std::allocator<node *> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Orphan_range@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEBAXPEAPEAVnode@@0@Z
_TEXT	SEGMENT
this$ = 224
_First$ = 232
_Last$ = 240
?_Orphan_range@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEBAXPEAPEAVnode@@0@Z PROC ; std::vector<node *,std::allocator<node *> >::_Orphan_range, COMDAT

; 1802 :     _CONSTEXPR20_CONTAINER void _Orphan_range(pointer _First, pointer _Last) const {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__324884E2_vector
	call	__CheckForDebuggerJustMyCode

; 1803 :         // orphan iterators within specified (inclusive) range
; 1804 : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 1805 :         if (_STD is_constant_evaluated()) {
; 1806 :             _Orphan_range_unlocked(_First, _Last);
; 1807 :         } else
; 1808 : #endif // __cpp_lib_constexpr_dynamic_alloc
; 1809 :         {
; 1810 :             _Orphan_range_locked(_First, _Last);

	mov	r8, QWORD PTR _Last$[rbp]
	mov	rdx, QWORD PTR _First$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Orphan_range_locked@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEBAXPEAPEAVnode@@0@Z ; std::vector<node *,std::allocator<node *> >::_Orphan_range_locked

; 1811 :         }
; 1812 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Orphan_range@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEBAXPEAPEAVnode@@0@Z ENDP ; std::vector<node *,std::allocator<node *> >::_Orphan_range
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Orphan_range_locked@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEBAXPEAPEAVnode@@0@Z
_TEXT	SEGMENT
_Lock$ = 4
__$ArrayPad$ = 216
this$ = 256
_First$ = 264
_Last$ = 272
?_Orphan_range_locked@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEBAXPEAPEAVnode@@0@Z PROC ; std::vector<node *,std::allocator<node *> >::_Orphan_range_locked, COMDAT

; 1797 :     void _Orphan_range_locked(pointer _First, pointer _Last) const {

$LN4:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 10
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__324884E2_vector
	call	__CheckForDebuggerJustMyCode

; 1798 :         _Lockit _Lock(_LOCK_DEBUG);

	mov	edx, 3
	lea	rcx, QWORD PTR _Lock$[rbp]
	call	QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
	npad	1

; 1799 :         _Orphan_range_unlocked(_First, _Last);

	mov	r8, QWORD PTR _Last$[rbp]
	mov	rdx, QWORD PTR _First$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Orphan_range_unlocked@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEBAXPEAPEAVnode@@0@Z ; std::vector<node *,std::allocator<node *> >::_Orphan_range_unlocked
	npad	1

; 1800 :     }

	lea	rcx, QWORD PTR _Lock$[rbp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?_Orphan_range_locked@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEBAXPEAPEAVnode@@0@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?_Orphan_range_locked@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEBAXPEAPEAVnode@@0@Z ENDP ; std::vector<node *,std::allocator<node *> >::_Orphan_range_locked
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 4
__$ArrayPad$ = 216
this$ = 256
_First$ = 264
_Last$ = 272
?dtor$0@?0??_Orphan_range_locked@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEBAXPEAPEAVnode@@0@Z@4HA PROC ; `std::vector<node *,std::allocator<node *> >::_Orphan_range_locked'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR _Lock$[rbp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??_Orphan_range_locked@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEBAXPEAPEAVnode@@0@Z@4HA ENDP ; `std::vector<node *,std::allocator<node *> >::_Orphan_range_locked'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 4
__$ArrayPad$ = 216
this$ = 256
_First$ = 264
_Last$ = 272
?dtor$0@?0??_Orphan_range_locked@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEBAXPEAPEAVnode@@0@Z@4HA PROC ; `std::vector<node *,std::allocator<node *> >::_Orphan_range_locked'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR _Lock$[rbp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??_Orphan_range_locked@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEBAXPEAPEAVnode@@0@Z@4HA ENDP ; `std::vector<node *,std::allocator<node *> >::_Orphan_range_locked'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Orphan_range_unlocked@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEBAXPEAPEAVnode@@0@Z
_TEXT	SEGMENT
_Pnext$ = 8
_Pnextptr$1 = 40
_Temp$2 = 72
_Temp$3 = 104
this$ = 352
_First$ = 360
_Last$ = 368
?_Orphan_range_unlocked@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEBAXPEAPEAVnode@@0@Z PROC ; std::vector<node *,std::allocator<node *> >::_Orphan_range_unlocked, COMDAT

; 1782 :     _CONSTEXPR20_CONTAINER void _Orphan_range_unlocked(pointer _First, pointer _Last) const {

$LN8:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 360				; 00000168H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__324884E2_vector
	call	__CheckForDebuggerJustMyCode

; 1783 :         _Iterator_base12** _Pnext = &_Mypair._Myval2._Myproxy->_Myfirstiter;

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, 8
	mov	QWORD PTR _Pnext$[rbp], rax
$LN2@Orphan_ran:

; 1784 :         while (*_Pnext) {

	mov	rax, QWORD PTR _Pnext$[rbp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN3@Orphan_ran

; 1785 :             const auto _Pnextptr = static_cast<const_iterator&>(**_Pnext)._Ptr;

	mov	rax, QWORD PTR _Pnext$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rax, QWORD PTR [rax+16]
	mov	QWORD PTR _Pnextptr$1[rbp], rax

; 1786 :             if (_Pnextptr < _First || _Last < _Pnextptr) { // skip the iterator

	mov	rax, QWORD PTR _First$[rbp]
	cmp	QWORD PTR _Pnextptr$1[rbp], rax
	jb	SHORT $LN6@Orphan_ran
	mov	rax, QWORD PTR _Pnextptr$1[rbp]
	cmp	QWORD PTR _Last$[rbp], rax
	jae	SHORT $LN4@Orphan_ran
$LN6@Orphan_ran:

; 1787 :                 const auto _Temp = *_Pnext; // TRANSITION, VSO-1269037

	mov	rax, QWORD PTR _Pnext$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Temp$2[rbp], rax

; 1788 :                 _Pnext           = &_Temp->_Mynextiter;

	mov	rax, QWORD PTR _Temp$2[rbp]
	add	rax, 8
	mov	QWORD PTR _Pnext$[rbp], rax

; 1789 :             } else { // orphan the iterator

	jmp	SHORT $LN5@Orphan_ran
$LN4@Orphan_ran:

; 1790 :                 const auto _Temp = *_Pnext; // TRANSITION, VSO-1269037

	mov	rax, QWORD PTR _Pnext$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Temp$3[rbp], rax

; 1791 :                 _Temp->_Myproxy  = nullptr;

	mov	rax, QWORD PTR _Temp$3[rbp]
	mov	QWORD PTR [rax], 0

; 1792 :                 *_Pnext          = _Temp->_Mynextiter;

	mov	rax, QWORD PTR _Pnext$[rbp]
	mov	rcx, QWORD PTR _Temp$3[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	QWORD PTR [rax], rcx
$LN5@Orphan_ran:

; 1793 :             }
; 1794 :         }

	jmp	SHORT $LN2@Orphan_ran
$LN3@Orphan_ran:

; 1795 :     }

	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
?_Orphan_range_unlocked@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEBAXPEAPEAVnode@@0@Z ENDP ; std::vector<node *,std::allocator<node *> >::_Orphan_range_unlocked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Xlength@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@CAXXZ PROC ; std::vector<node *,std::allocator<node *> >::_Xlength, COMDAT

; 1773 :     [[noreturn]] static void _Xlength() {

$LN3:
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__324884E2_vector
	call	__CheckForDebuggerJustMyCode

; 1774 :         _Xlength_error("vector too long");

	lea	rcx, OFFSET FLAT:??_C@_0BA@FOIKENOD@vector?5too?5long@
	call	?_Xlength_error@std@@YAXPEBD@Z		; std::_Xlength_error
$LN2@Xlength:

; 1775 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Xlength@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@CAXXZ ENDP ; std::vector<node *,std::allocator<node *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Tidy@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
_My_data$ = 8
_Myfirst$ = 40
_Mylast$ = 72
_Myend$ = 104
tv82 = 312
this$ = 352
?_Tidy@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAXXZ PROC ; std::vector<node *,std::allocator<node *> >::_Tidy, COMDAT

; 1755 :     _CONSTEXPR20_CONTAINER void _Tidy() noexcept { // free all storage

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 360				; 00000168H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__324884E2_vector
	call	__CheckForDebuggerJustMyCode

; 1756 :         auto& _My_data    = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR _My_data$[rbp], rax

; 1757 :         pointer& _Myfirst = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rbp], rax

; 1758 :         pointer& _Mylast  = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rbp], rax

; 1759 :         pointer& _Myend   = _My_data._Myend;

	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 24
	mov	QWORD PTR _Myend$[rbp], rax

; 1760 : 
; 1761 :         _My_data._Orphan_all();

	mov	rcx, QWORD PTR _My_data$[rbp]
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 1762 : 
; 1763 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rax, QWORD PTR _Myfirst$[rbp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Tidy

; 1764 :             _Destroy(_Myfirst, _Mylast);

	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	r8, QWORD PTR [rax]
	mov	rax, QWORD PTR _Myfirst$[rbp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Destroy@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAXPEAPEAVnode@@0@Z ; std::vector<node *,std::allocator<node *> >::_Destroy

; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rax, QWORD PTR _Myend$[rbp]
	mov	rcx, QWORD PTR _Myfirst$[rbp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	sar	rax, 3
	mov	QWORD PTR tv82[rbp], rax
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAAEAV?$allocator@PEAVnode@@@2@XZ ; std::vector<node *,std::allocator<node *> >::_Getal
	mov	rcx, QWORD PTR tv82[rbp]
	mov	r8, rcx
	mov	rcx, QWORD PTR _Myfirst$[rbp]
	mov	rdx, QWORD PTR [rcx]
	mov	rcx, rax
	call	?deallocate@?$allocator@PEAVnode@@@std@@QEAAXQEAPEAVnode@@_K@Z ; std::allocator<node *>::deallocate

; 1766 : 
; 1767 :             _Myfirst = nullptr;

	mov	rax, QWORD PTR _Myfirst$[rbp]
	mov	QWORD PTR [rax], 0

; 1768 :             _Mylast  = nullptr;

	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	QWORD PTR [rax], 0

; 1769 :             _Myend   = nullptr;

	mov	rax, QWORD PTR _Myend$[rbp]
	mov	QWORD PTR [rax], 0
$LN2@Tidy:

; 1770 :         }
; 1771 :     }

	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
?_Tidy@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAXXZ ENDP ; std::vector<node *,std::allocator<node *> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Change_array@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAXQEAPEAVnode@@_K1@Z
_TEXT	SEGMENT
_My_data$ = 8
_Myfirst$ = 40
_Mylast$ = 72
_Myend$ = 104
tv82 = 312
this$ = 352
_Newvec$ = 360
_Newsize$ = 368
_Newcapacity$ = 376
?_Change_array@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAXQEAPEAVnode@@_K1@Z PROC ; std::vector<node *,std::allocator<node *> >::_Change_array, COMDAT

; 1736 :         const pointer _Newvec, const size_type _Newsize, const size_type _Newcapacity) {

$LN4:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 360				; 00000168H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__324884E2_vector
	call	__CheckForDebuggerJustMyCode

; 1737 :         // orphan all iterators, discard old array, acquire new array
; 1738 :         auto& _My_data    = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR _My_data$[rbp], rax

; 1739 :         pointer& _Myfirst = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rbp], rax

; 1740 :         pointer& _Mylast  = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rbp], rax

; 1741 :         pointer& _Myend   = _My_data._Myend;

	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 24
	mov	QWORD PTR _Myend$[rbp], rax

; 1742 : 
; 1743 :         _My_data._Orphan_all();

	mov	rcx, QWORD PTR _My_data$[rbp]
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 1744 : 
; 1745 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rax, QWORD PTR _Myfirst$[rbp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Change_arr

; 1746 :             _Destroy(_Myfirst, _Mylast);

	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	r8, QWORD PTR [rax]
	mov	rax, QWORD PTR _Myfirst$[rbp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Destroy@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAXPEAPEAVnode@@0@Z ; std::vector<node *,std::allocator<node *> >::_Destroy

; 1747 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rax, QWORD PTR _Myend$[rbp]
	mov	rcx, QWORD PTR _Myfirst$[rbp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	sar	rax, 3
	mov	QWORD PTR tv82[rbp], rax
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAAEAV?$allocator@PEAVnode@@@2@XZ ; std::vector<node *,std::allocator<node *> >::_Getal
	mov	rcx, QWORD PTR tv82[rbp]
	mov	r8, rcx
	mov	rcx, QWORD PTR _Myfirst$[rbp]
	mov	rdx, QWORD PTR [rcx]
	mov	rcx, rax
	call	?deallocate@?$allocator@PEAVnode@@@std@@QEAAXQEAPEAVnode@@_K@Z ; std::allocator<node *>::deallocate
$LN2@Change_arr:

; 1748 :         }
; 1749 : 
; 1750 :         _Myfirst = _Newvec;

	mov	rax, QWORD PTR _Myfirst$[rbp]
	mov	rcx, QWORD PTR _Newvec$[rbp]
	mov	QWORD PTR [rax], rcx

; 1751 :         _Mylast  = _Newvec + _Newsize;

	mov	rax, QWORD PTR _Newvec$[rbp]
	mov	rcx, QWORD PTR _Newsize$[rbp]
	lea	rax, QWORD PTR [rax+rcx*8]
	mov	rcx, QWORD PTR _Mylast$[rbp]
	mov	QWORD PTR [rcx], rax

; 1752 :         _Myend   = _Newvec + _Newcapacity;

	mov	rax, QWORD PTR _Newvec$[rbp]
	mov	rcx, QWORD PTR _Newcapacity$[rbp]
	lea	rax, QWORD PTR [rax+rcx*8]
	mov	rcx, QWORD PTR _Myend$[rbp]
	mov	QWORD PTR [rcx], rax

; 1753 :     }

	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
?_Change_array@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAXQEAPEAVnode@@_K1@Z ENDP ; std::vector<node *,std::allocator<node *> >::_Change_array
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Calculate_growth@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
_Oldcapacity$ = 8
_Max$ = 40
_Geometric$ = 72
this$ = 320
_Newsize$ = 328
?_Calculate_growth@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEBA_K_K@Z PROC ; std::vector<node *,std::allocator<node *> >::_Calculate_growth, COMDAT

; 1683 :     _CONSTEXPR20_CONTAINER size_type _Calculate_growth(const size_type _Newsize) const {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__324884E2_vector
	call	__CheckForDebuggerJustMyCode

; 1684 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1685 :         const size_type _Oldcapacity = capacity();

	mov	rcx, QWORD PTR this$[rbp]
	call	?capacity@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEBA_KXZ ; std::vector<node *,std::allocator<node *> >::capacity
	mov	QWORD PTR _Oldcapacity$[rbp], rax

; 1686 :         const auto _Max              = max_size();

	mov	rcx, QWORD PTR this$[rbp]
	call	?max_size@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEBA_KXZ ; std::vector<node *,std::allocator<node *> >::max_size
	mov	QWORD PTR _Max$[rbp], rax

; 1687 : 
; 1688 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	xor	edx, edx
	mov	rax, QWORD PTR _Oldcapacity$[rbp]
	mov	ecx, 2
	div	rcx
	mov	rcx, QWORD PTR _Max$[rbp]
	sub	rcx, rax
	mov	rax, rcx
	cmp	QWORD PTR _Oldcapacity$[rbp], rax
	jbe	SHORT $LN2@Calculate_

; 1689 :             return _Max; // geometric growth would overflow

	mov	rax, QWORD PTR _Max$[rbp]
	jmp	SHORT $LN1@Calculate_
$LN2@Calculate_:

; 1690 :         }
; 1691 : 
; 1692 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

	xor	edx, edx
	mov	rax, QWORD PTR _Oldcapacity$[rbp]
	mov	ecx, 2
	div	rcx
	mov	rcx, QWORD PTR _Oldcapacity$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Geometric$[rbp], rax

; 1693 : 
; 1694 :         if (_Geometric < _Newsize) {

	mov	rax, QWORD PTR _Newsize$[rbp]
	cmp	QWORD PTR _Geometric$[rbp], rax
	jae	SHORT $LN3@Calculate_

; 1695 :             return _Newsize; // geometric growth would be insufficient

	mov	rax, QWORD PTR _Newsize$[rbp]
	jmp	SHORT $LN1@Calculate_
$LN3@Calculate_:

; 1696 :         }
; 1697 : 
; 1698 :         return _Geometric; // geometric growth is sufficient

	mov	rax, QWORD PTR _Geometric$[rbp]
$LN1@Calculate_:

; 1699 :     }

	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?_Calculate_growth@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEBA_K_K@Z ENDP ; std::vector<node *,std::allocator<node *> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Destroy@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAXPEAPEAVnode@@0@Z
_TEXT	SEGMENT
this$ = 224
_First$ = 232
_Last$ = 240
?_Destroy@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAXPEAPEAVnode@@0@Z PROC ; std::vector<node *,std::allocator<node *> >::_Destroy, COMDAT

; 1678 :     _CONSTEXPR20_CONTAINER void _Destroy(pointer _First, pointer _Last) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__324884E2_vector
	call	__CheckForDebuggerJustMyCode

; 1679 :         // destroy [_First, _Last) using allocator
; 1680 :         _Destroy_range(_First, _Last, _Getal());

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAAEAV?$allocator@PEAVnode@@@2@XZ ; std::vector<node *,std::allocator<node *> >::_Getal
	mov	r8, rax
	mov	rdx, QWORD PTR _Last$[rbp]
	mov	rcx, QWORD PTR _First$[rbp]
	call	??$_Destroy_range@V?$allocator@PEAVnode@@@std@@@std@@YAXPEAPEAVnode@@QEAPEAV1@AEAV?$allocator@PEAVnode@@@0@@Z ; std::_Destroy_range<std::allocator<node *> >

; 1681 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Destroy@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAXPEAPEAVnode@@0@Z ENDP ; std::vector<node *,std::allocator<node *> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Umove_if_noexcept@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAXPEAPEAVnode@@00@Z
_TEXT	SEGMENT
$T1 = 196
this$ = 256
_First$ = 264
_Last$ = 272
_Dest$ = 280
?_Umove_if_noexcept@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAXPEAPEAVnode@@00@Z PROC ; std::vector<node *,std::allocator<node *> >::_Umove_if_noexcept, COMDAT

; 1672 :     _CONSTEXPR20_CONTAINER void _Umove_if_noexcept(pointer _First, pointer _Last, pointer _Dest) {

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 280				; 00000118H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__324884E2_vector
	call	__CheckForDebuggerJustMyCode

; 1673 :         // move_if_noexcept [_First, _Last) to raw _Dest, using allocator
; 1674 :         _Umove_if_noexcept1(_First, _Last, _Dest,

	lea	rax, QWORD PTR $T1[rbp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 1
	rep stosb
	movzx	eax, BYTE PTR $T1[rbp]
	mov	BYTE PTR [rsp+32], al
	mov	r9, QWORD PTR _Dest$[rbp]
	mov	r8, QWORD PTR _Last$[rbp]
	mov	rdx, QWORD PTR _First$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Umove_if_noexcept1@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAXPEAPEAVnode@@00U?$integral_constant@_N$00@2@@Z ; std::vector<node *,std::allocator<node *> >::_Umove_if_noexcept1

; 1675 :             bool_constant<disjunction_v<is_nothrow_move_constructible<_Ty>, negation<is_copy_constructible<_Ty>>>>{});
; 1676 :     }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?_Umove_if_noexcept@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAXPEAPEAVnode@@00@Z ENDP ; std::vector<node *,std::allocator<node *> >::_Umove_if_noexcept
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Umove_if_noexcept1@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAXPEAPEAVnode@@00U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
this$ = 224
_First$ = 232
_Last$ = 240
_Dest$ = 248
__formal$ = 256
?_Umove_if_noexcept1@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAXPEAPEAVnode@@00U?$integral_constant@_N$00@2@@Z PROC ; std::vector<node *,std::allocator<node *> >::_Umove_if_noexcept1, COMDAT

; 1662 :     _CONSTEXPR20_CONTAINER void _Umove_if_noexcept1(pointer _First, pointer _Last, pointer _Dest, true_type) {

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__324884E2_vector
	call	__CheckForDebuggerJustMyCode

; 1663 :         // move [_First, _Last) to raw _Dest, using allocator
; 1664 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAAEAV?$allocator@PEAVnode@@@2@XZ ; std::vector<node *,std::allocator<node *> >::_Getal
	mov	r9, rax
	mov	r8, QWORD PTR _Dest$[rbp]
	mov	rdx, QWORD PTR _Last$[rbp]
	mov	rcx, QWORD PTR _First$[rbp]
	call	??$_Uninitialized_move@PEAPEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@YAPEAPEAVnode@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVnode@@@0@@Z ; std::_Uninitialized_move<node * *,std::allocator<node *> >

; 1665 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Umove_if_noexcept1@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAXPEAPEAVnode@@00U?$integral_constant@_N$00@2@@Z ENDP ; std::vector<node *,std::allocator<node *> >::_Umove_if_noexcept1
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Umove@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAPEAPEAVnode@@PEAPEAV3@00@Z
_TEXT	SEGMENT
this$ = 224
_First$ = 232
_Last$ = 240
_Dest$ = 248
?_Umove@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAPEAPEAVnode@@PEAPEAV3@00@Z PROC ; std::vector<node *,std::allocator<node *> >::_Umove, COMDAT

; 1657 :     _CONSTEXPR20_CONTAINER pointer _Umove(pointer _First, pointer _Last, pointer _Dest) {

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__324884E2_vector
	call	__CheckForDebuggerJustMyCode

; 1658 :         // move [_First, _Last) to raw _Dest, using allocator
; 1659 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAAEAV?$allocator@PEAVnode@@@2@XZ ; std::vector<node *,std::allocator<node *> >::_Getal
	mov	r9, rax
	mov	r8, QWORD PTR _Dest$[rbp]
	mov	rdx, QWORD PTR _Last$[rbp]
	mov	rcx, QWORD PTR _First$[rbp]
	call	??$_Uninitialized_move@PEAPEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@YAPEAPEAVnode@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVnode@@@0@@Z ; std::_Uninitialized_move<node * *,std::allocator<node *> >

; 1660 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Umove@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAPEAPEAVnode@@PEAPEAV3@00@Z ENDP ; std::vector<node *,std::allocator<node *> >::_Umove
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?front@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAAEAPEAVnode@@XZ
_TEXT	SEGMENT
_My_data$ = 8
this$ = 256
?front@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAAEAPEAVnode@@XZ PROC ; std::vector<node *,std::allocator<node *> >::front, COMDAT

; 1600 :     _NODISCARD _CONSTEXPR20_CONTAINER _Ty& front() noexcept /* strengthened */ {

$LN12:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 280				; 00000118H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__324884E2_vector
	call	__CheckForDebuggerJustMyCode

; 1601 :         auto& _My_data = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR _My_data$[rbp], rax
$LN4@front:

; 1602 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1603 :         _STL_VERIFY(_My_data._Myfirst != _My_data._Mylast, "front() called on empty vector");

	mov	rax, QWORD PTR _My_data$[rbp]
	mov	rcx, QWORD PTR _My_data$[rbp]
	mov	rcx, QWORD PTR [rcx+16]
	cmp	QWORD PTR [rax+8], rcx
	je	SHORT $LN7@front
	jmp	SHORT $LN9@front
$LN7@front:
	lea	rax, OFFSET FLAT:??_C@_0BP@KGLJJIBC@front?$CI?$CJ?5called?5on?5empty?5vector@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 1603				; 00000643H
	lea	rdx, OFFSET FLAT:??_C@_0GH@KMHDIFOI@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN11@front
	int	3
	xor	eax, eax
$LN11@front:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 1603				; 00000643H
	lea	r8, OFFSET FLAT:??_C@_1MO@NOHEJINP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_1IK@COOKACPM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa@
	lea	rcx, OFFSET FLAT:??_C@_1EC@GDGFILAB@?$AA?$CC?$AAf?$AAr?$AAo?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAc?$AAa?$AAl?$AAl?$AAe?$AAd@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@front
$LN9@front:
	xor	eax, eax
	test	eax, eax
	jne	$LN4@front

; 1604 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1605 : 
; 1606 :         return *_My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rbp]
	mov	rax, QWORD PTR [rax+8]

; 1607 :     }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?front@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAAEAPEAVnode@@XZ ENDP ; std::vector<node *,std::allocator<node *> >::front
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?capacity@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
_My_data$ = 8
this$ = 256
?capacity@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEBA_KXZ PROC ; std::vector<node *,std::allocator<node *> >::capacity, COMDAT

; 1557 :     _NODISCARD _CONSTEXPR20_CONTAINER size_type capacity() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__324884E2_vector
	call	__CheckForDebuggerJustMyCode

; 1558 :         auto& _My_data = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR _My_data$[rbp], rax

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	mov	rax, QWORD PTR _My_data$[rbp]
	mov	rcx, QWORD PTR _My_data$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	rax, QWORD PTR [rax+24]
	sub	rax, rcx
	sar	rax, 3

; 1560 :     }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?capacity@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<node *,std::allocator<node *> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?max_size@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
$T1 = 200
$T2 = 232
this$ = 288
?max_size@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEBA_KXZ PROC ; std::vector<node *,std::allocator<node *> >::max_size, COMDAT

; 1552 :     _NODISCARD _CONSTEXPR20_CONTAINER size_type max_size() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__324884E2_vector
	call	__CheckForDebuggerJustMyCode

; 1553 :         return (_STD min)(

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEBAAEBV?$allocator@PEAVnode@@@2@XZ ; std::vector<node *,std::allocator<node *> >::_Getal
	mov	rcx, rax
	call	?max_size@?$_Default_allocator_traits@V?$allocator@PEAVnode@@@std@@@std@@SA_KAEBV?$allocator@PEAVnode@@@2@@Z ; std::_Default_allocator_traits<std::allocator<node *> >::max_size
	mov	QWORD PTR $T1[rbp], rax
	call	?max@?$numeric_limits@_J@std@@SA_JXZ	; std::numeric_limits<__int64>::max
	mov	QWORD PTR $T2[rbp], rax
	lea	rdx, QWORD PTR $T1[rbp]
	lea	rcx, QWORD PTR $T2[rbp]
	call	??$min@_K@std@@YAAEB_KAEB_K0@Z		; std::min<unsigned __int64>
	mov	rax, QWORD PTR [rax]

; 1554 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1555 :     }

	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?max_size@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<node *,std::allocator<node *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Unchecked_end@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAPEAPEAVnode@@XZ
_TEXT	SEGMENT
this$ = 224
?_Unchecked_end@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAPEAPEAVnode@@XZ PROC ; std::vector<node *,std::allocator<node *> >::_Unchecked_end, COMDAT

; 1534 :     _NODISCARD _CONSTEXPR20_CONTAINER pointer _Unchecked_end() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__324884E2_vector
	call	__CheckForDebuggerJustMyCode

; 1535 :         return _Mypair._Myval2._Mylast;

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+16]

; 1536 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Unchecked_end@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAPEAPEAVnode@@XZ ENDP ; std::vector<node *,std::allocator<node *> >::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Unchecked_begin@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAPEAPEAVnode@@XZ
_TEXT	SEGMENT
this$ = 224
?_Unchecked_begin@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAPEAPEAVnode@@XZ PROC ; std::vector<node *,std::allocator<node *> >::_Unchecked_begin, COMDAT

; 1526 :     _NODISCARD _CONSTEXPR20_CONTAINER pointer _Unchecked_begin() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__324884E2_vector
	call	__CheckForDebuggerJustMyCode

; 1527 :         return _Mypair._Myval2._Myfirst;

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+8]

; 1528 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Unchecked_begin@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAPEAPEAVnode@@XZ ENDP ; std::vector<node *,std::allocator<node *> >::_Unchecked_begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?clear@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
_My_data$ = 8
_Myfirst$ = 40
_Mylast$ = 72
this$ = 320
?clear@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAXXZ PROC ; std::vector<node *,std::allocator<node *> >::clear, COMDAT

; 1449 :     _CONSTEXPR20_CONTAINER void clear() noexcept { // erase all

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__324884E2_vector
	call	__CheckForDebuggerJustMyCode

; 1450 :         auto& _My_data    = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR _My_data$[rbp], rax

; 1451 :         pointer& _Myfirst = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rbp], rax

; 1452 :         pointer& _Mylast  = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rbp], rax

; 1453 : 
; 1454 :         _My_data._Orphan_all();

	mov	rcx, QWORD PTR _My_data$[rbp]
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 1455 :         _Destroy(_Myfirst, _Mylast);

	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	r8, QWORD PTR [rax]
	mov	rax, QWORD PTR _Myfirst$[rbp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Destroy@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAXPEAPEAVnode@@0@Z ; std::vector<node *,std::allocator<node *> >::_Destroy

; 1456 :         _Mylast = _Myfirst;

	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	rcx, QWORD PTR _Myfirst$[rbp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR [rax], rcx

; 1457 :     }

	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?clear@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAXXZ ENDP ; std::vector<node *,std::allocator<node *> >::clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?push_back@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAXAEBQEAVnode@@@Z
_TEXT	SEGMENT
this$ = 224
_Val$ = 232
?push_back@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAXAEBQEAVnode@@@Z PROC ; std::vector<node *,std::allocator<node *> >::push_back, COMDAT

; 755  :     _CONSTEXPR20_CONTAINER void push_back(const _Ty& _Val) { // insert element at end, provide strong guarantee

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__324884E2_vector
	call	__CheckForDebuggerJustMyCode

; 756  :         emplace_back(_Val);

	mov	rdx, QWORD PTR _Val$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	??$emplace_back@AEBQEAVnode@@@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAA?A_TAEBQEAVnode@@@Z ; std::vector<node *,std::allocator<node *> >::emplace_back<node * const &>

; 757  :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?push_back@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAAXAEBQEAVnode@@@Z ENDP ; std::vector<node *,std::allocator<node *> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??1?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 8
$S1$ = 36
$T4 = 260
__$ArrayPad$ = 280
this$ = 320
??1?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAA@XZ PROC ; std::vector<node *,std::allocator<node *> >::~vector<node *,std::allocator<node *> >, COMDAT

; 711  :     _CONSTEXPR20_CONTAINER ~vector() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 26
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+360]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__324884E2_vector
	call	__CheckForDebuggerJustMyCode

; 712  :         _Tidy();

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Tidy@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAXXZ ; std::vector<node *,std::allocator<node *> >::_Tidy

; 713  : #if _ITERATOR_DEBUG_LEVEL != 0
; 714  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAAEAV?$allocator@PEAVnode@@@2@XZ ; std::vector<node *,std::allocator<node *> >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $S1$[rbp]
	call	??$?0PEAVnode@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAVnode@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><node *>
	lea	rax, QWORD PTR $S1$[rbp]
	mov	QWORD PTR _Alproxy$[rbp], rax

; 715  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

	mov	QWORD PTR $T4[rbp], 0
	mov	rax, QWORD PTR this$[rbp]
	lea	rdx, QWORD PTR $T4[rbp]
	mov	rcx, rax
	call	??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
	mov	rdx, rax
	mov	rcx, QWORD PTR _Alproxy$[rbp]
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >

; 716  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 717  :     }

	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:??1?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAA@XZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
??1?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAA@XZ ENDP ; std::vector<node *,std::allocator<node *> >::~vector<node *,std::allocator<node *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??0?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 196
$T2 = 228
this$ = 288
??0?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAA@XZ PROC ; std::vector<node *,std::allocator<node *> >::vector<node *,std::allocator<node *> >, COMDAT

; 476  :         : _Mypair(_Zero_then_variadic_args_t{}) {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__324884E2_vector
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	movzx	edx, BYTE PTR $T1[rbp]
	mov	rcx, rax
	call	??$?0$$V@?$_Compressed_pair@V?$allocator@PEAVnode@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVnode@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<node *>,std::_Vector_val<std::_Simple_types<node *> >,1>::_Compressed_pair<std::allocator<node *>,std::_Vector_val<std::_Simple_types<node *> >,1><>

; 477  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@AEAAAEAV?$allocator@PEAVnode@@@2@XZ ; std::vector<node *,std::allocator<node *> >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $T2[rbp]
	call	??$?0PEAVnode@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAVnode@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><node *>
	mov	rcx, QWORD PTR this$[rbp]
	mov	rdx, rax
	call	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >

; 478  :     }

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
??0?$vector@PEAVnode@@V?$allocator@PEAVnode@@@std@@@std@@QEAA@XZ ENDP ; std::vector<node *,std::allocator<node *> >::vector<node *,std::allocator<node *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@PEAVnode@@@std@@@std@@SA_KAEBV?$allocator@PEAVnode@@@2@@Z
_TEXT	SEGMENT
__formal$ = 224
?max_size@?$_Default_allocator_traits@V?$allocator@PEAVnode@@@std@@@std@@SA_KAEBV?$allocator@PEAVnode@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<node *> >::max_size, COMDAT

; 727  :     _NODISCARD static _CONSTEXPR20_DYNALLOC size_type max_size(const _Alloc&) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode

; 728  :         return static_cast<size_t>(-1) / sizeof(value_type);

	mov	rax, 2305843009213693951		; 1fffffffffffffffH

; 729  :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@PEAVnode@@@std@@@std@@SA_KAEBV?$allocator@PEAVnode@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<node *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?allocate@?$allocator@PEAVnode@@@std@@QEAAPEAPEAVnode@@_K@Z
_TEXT	SEGMENT
this$ = 224
_Count$ = 232
?allocate@?$allocator@PEAVnode@@@std@@QEAAPEAPEAVnode@@_K@Z PROC ; std::allocator<node *>::allocate, COMDAT

; 838  :     _NODISCARD _CONSTEXPR20_DYNALLOC __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode

; 839  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

	mov	rcx, QWORD PTR _Count$[rbp]
	call	??$_Get_size_of_n@$07@std@@YA_K_K@Z	; std::_Get_size_of_n<8>
	mov	rcx, rax
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 840  :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?allocate@?$allocator@PEAVnode@@@std@@QEAAPEAPEAVnode@@_K@Z ENDP ; std::allocator<node *>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?deallocate@?$allocator@PEAVnode@@@std@@QEAAXQEAPEAVnode@@_K@Z
_TEXT	SEGMENT
this$ = 224
_Ptr$ = 232
_Count$ = 240
?deallocate@?$allocator@PEAVnode@@@std@@QEAAXQEAPEAVnode@@_K@Z PROC ; std::allocator<node *>::deallocate, COMDAT

; 833  :     _CONSTEXPR20_DYNALLOC void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode

; 834  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rax, QWORD PTR _Count$[rbp]
	shl	rax, 3
	mov	rdx, rax
	mov	rcx, QWORD PTR _Ptr$[rbp]
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 836  :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?deallocate@?$allocator@PEAVnode@@@std@@QEAAXQEAPEAVnode@@_K@Z ENDP ; std::allocator<node *>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??0?$allocator@PEAVnode@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$allocator@PEAVnode@@@std@@QEAA@XZ PROC		; std::allocator<node *>::allocator<node *>, COMDAT

; 825  :     constexpr allocator() noexcept {}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$allocator@PEAVnode@@@std@@QEAA@XZ ENDP		; std::allocator<node *>::allocator<node *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gnode@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_Gnode@@QEAAPEAXI@Z PROC				; node::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1node@@QEAA@XZ			; node::~node
	mov	eax, DWORD PTR __flags$[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	edx, 144				; 00000090H
	mov	rcx, QWORD PTR this$[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN2@scalar:
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??_Gnode@@QEAAPEAXI@Z ENDP				; node::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@node@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 224
classSize$ = 232
?__autoclassinit2@node@@QEAAX_K@Z PROC			; node::__autoclassinit2, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 200				; 000000c8H
	mov	rbp, rsp
	mov	rdi, QWORD PTR this$[rbp]
	xor	eax, eax
	mov	rcx, QWORD PTR classSize$[rbp]
	rep stosb
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?__autoclassinit2@node@@QEAAX_K@Z ENDP			; node::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@token@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 224
classSize$ = 232
?__autoclassinit2@token@@QEAAX_K@Z PROC			; token::__autoclassinit2, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 200				; 000000c8H
	mov	rbp, rsp
	mov	rdi, QWORD PTR this$[rbp]
	xor	eax, eax
	mov	rcx, QWORD PTR classSize$[rbp]
	rep stosb
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?__autoclassinit2@token@@QEAAX_K@Z ENDP			; token::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\shtuk\Desktop\Files\EquationStringParser\EquationStringParser\token.h
;	COMDAT ?reset@token@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?reset@token@@QEAAXXZ PROC				; token::reset, COMDAT

; 49   : 	{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__5A687423_token@h
	call	__CheckForDebuggerJustMyCode

; 50   : 		memset(container, '\0', TOKEN_SIZE);

	mov	r8d, 100				; 00000064H
	xor	edx, edx
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	memset

; 51   : 		curr = container;

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR [rax+16], rcx

; 52   : 		len = 0;

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0

; 53   : 	}

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?reset@token@@QEAAXXZ ENDP				; token::reset
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\shtuk\Desktop\Files\EquationStringParser\EquationStringParser\token.h
;	COMDAT ?length@token@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 224
?length@token@@QEBA_KXZ PROC				; token::length, COMDAT

; 44   : 	{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__5A687423_token@h
	call	__CheckForDebuggerJustMyCode

; 45   : 		return len;

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+8]

; 46   : 	}

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?length@token@@QEBA_KXZ ENDP				; token::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\shtuk\Desktop\Files\EquationStringParser\EquationStringParser\token.h
;	COMDAT ?readString@token@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
s$ = 8
$T4 = 260
__$ArrayPad$ = 280
this$ = 320
__$ReturnUdt$ = 328
?readString@token@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; token::readString, COMDAT

; 33   : 	{

$LN6:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 26
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+360]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	mov	DWORD PTR $T4[rbp], 0
	lea	rcx, OFFSET FLAT:__5A687423_token@h
	call	__CheckForDebuggerJustMyCode

; 34   : 		std::string s = std::string(container);

	mov	rax, QWORD PTR this$[rbp]
	mov	rdx, QWORD PTR [rax]
	lea	rcx, QWORD PTR s$[rbp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >

; 35   : 		return s;

	lea	rdx, QWORD PTR s$[rbp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T4[rbp]
	or	eax, 1
	mov	DWORD PTR $T4[rbp], eax
	lea	rcx, QWORD PTR s$[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]

; 36   : 	}

	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?readString@token@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?readString@token@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; token::readString
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\shtuk\Desktop\Files\EquationStringParser\EquationStringParser\token.h
;	COMDAT ?add@token@@QEAAXD@Z
_TEXT	SEGMENT
this$ = 224
c$ = 232
?add@token@@QEAAXD@Z PROC				; token::add, COMDAT

; 27   : 	{

$LN3:
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__5A687423_token@h
	call	__CheckForDebuggerJustMyCode

; 28   : 		*curr++ = c;

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+16]
	movzx	ecx, BYTE PTR c$[rbp]
	mov	BYTE PTR [rax], cl
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+16]
	inc	rax
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+16], rax

; 29   : 		len++;

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+8]
	inc	rax
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+8], rax

; 30   : 	}

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?add@token@@QEAAXD@Z ENDP				; token::add
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\shtuk\Desktop\Files\EquationStringParser\EquationStringParser\token.h
;	COMDAT ??1token@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
??1token@@QEAA@XZ PROC					; token::~token, COMDAT

; 22   : 	{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__5A687423_token@h
	call	__CheckForDebuggerJustMyCode

; 23   : 		delete[] container;

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR $T1[rbp], rax
	mov	rcx, QWORD PTR $T1[rbp]
	call	??_V@YAXPEAX@Z				; operator delete[]

; 24   : 	}

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??1token@@QEAA@XZ ENDP					; token::~token
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\shtuk\Desktop\Files\EquationStringParser\EquationStringParser\token.h
;	COMDAT ??0token@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
??0token@@QEAA@XZ PROC					; token::token, COMDAT

; 15   : 	token()

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__5A687423_token@h
	call	__CheckForDebuggerJustMyCode

; 11   : 	size_t len = 0;

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0

; 16   : 	{
; 17   : 		container = new char[TOKEN_SIZE];

	mov	ecx, 100				; 00000064H
	call	??_U@YAPEAX_K@Z				; operator new[]
	mov	QWORD PTR $T1[rbp], rax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR $T1[rbp]
	mov	QWORD PTR [rax], rcx

; 18   : 		reset();

	mov	rcx, QWORD PTR this$[rbp]
	call	?reset@token@@QEAAXXZ			; token::reset

; 19   : 	}

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??0token@@QEAA@XZ ENDP					; token::token
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@expression@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 224
classSize$ = 232
?__autoclassinit2@expression@@QEAAX_K@Z PROC		; expression::__autoclassinit2, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 200				; 000000c8H
	mov	rbp, rsp
	mov	rdi, QWORD PTR this$[rbp]
	xor	eax, eax
	mov	rcx, QWORD PTR classSize$[rbp]
	rep stosb
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?__autoclassinit2@expression@@QEAAX_K@Z ENDP		; expression::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1expression@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1expression@@QEAA@XZ PROC				; expression::~expression, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 64					; 00000040H
	mov	rcx, rax
	call	??1?$vector@Ubraket_group@@V?$allocator@Ubraket_group@@@std@@@std@@QEAA@XZ ; std::vector<braket_group,std::allocator<braket_group> >::~vector<braket_group,std::allocator<braket_group> >
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 32					; 00000020H
	mov	rcx, rax
	call	??1?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@XZ ; std::vector<op,std::allocator<op> >::~vector<op,std::allocator<op> >
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1expression@@QEAA@XZ ENDP				; expression::~expression
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@Ubraket_group@@@std@@V?$_Vector_val@U?$_Simple_types@Ubraket_group@@@std@@@2@$00@std@@QEAAAEAV?$allocator@Ubraket_group@@@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Get_first@?$_Compressed_pair@V?$allocator@Ubraket_group@@@std@@V?$_Vector_val@U?$_Simple_types@Ubraket_group@@@std@@@2@$00@std@@QEAAAEAV?$allocator@Ubraket_group@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<braket_group>,std::_Vector_val<std::_Simple_types<braket_group> >,1>::_Get_first, COMDAT

; 1397 :     constexpr _Ty1& _Get_first() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode

; 1398 :         return *this;

	mov	rax, QWORD PTR this$[rbp]

; 1399 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@Ubraket_group@@@std@@V?$_Vector_val@U?$_Simple_types@Ubraket_group@@@std@@@2@$00@std@@QEAAAEAV?$allocator@Ubraket_group@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<braket_group>,std::_Vector_val<std::_Simple_types<braket_group> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Getal@?$vector@Ubraket_group@@V?$allocator@Ubraket_group@@@std@@@std@@AEAAAEAV?$allocator@Ubraket_group@@@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Getal@?$vector@Ubraket_group@@V?$allocator@Ubraket_group@@@std@@@std@@AEAAAEAV?$allocator@Ubraket_group@@@2@XZ PROC ; std::vector<braket_group,std::allocator<braket_group> >::_Getal, COMDAT

; 1817 :     _NODISCARD _CONSTEXPR20_CONTAINER _Alty& _Getal() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__324884E2_vector
	call	__CheckForDebuggerJustMyCode

; 1818 :         return _Mypair._Get_first();

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@V?$allocator@Ubraket_group@@@std@@V?$_Vector_val@U?$_Simple_types@Ubraket_group@@@std@@@2@$00@std@@QEAAAEAV?$allocator@Ubraket_group@@@2@XZ ; std::_Compressed_pair<std::allocator<braket_group>,std::_Vector_val<std::_Simple_types<braket_group> >,1>::_Get_first

; 1819 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Getal@?$vector@Ubraket_group@@V?$allocator@Ubraket_group@@@std@@@std@@AEAAAEAV?$allocator@Ubraket_group@@@2@XZ ENDP ; std::vector<braket_group,std::allocator<braket_group> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Tidy@?$vector@Ubraket_group@@V?$allocator@Ubraket_group@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
_My_data$ = 8
_Myfirst$ = 40
_Mylast$ = 72
_Myend$ = 104
tv82 = 312
this$ = 352
?_Tidy@?$vector@Ubraket_group@@V?$allocator@Ubraket_group@@@std@@@std@@AEAAXXZ PROC ; std::vector<braket_group,std::allocator<braket_group> >::_Tidy, COMDAT

; 1755 :     _CONSTEXPR20_CONTAINER void _Tidy() noexcept { // free all storage

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 360				; 00000168H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__324884E2_vector
	call	__CheckForDebuggerJustMyCode

; 1756 :         auto& _My_data    = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR _My_data$[rbp], rax

; 1757 :         pointer& _Myfirst = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rbp], rax

; 1758 :         pointer& _Mylast  = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rbp], rax

; 1759 :         pointer& _Myend   = _My_data._Myend;

	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 24
	mov	QWORD PTR _Myend$[rbp], rax

; 1760 : 
; 1761 :         _My_data._Orphan_all();

	mov	rcx, QWORD PTR _My_data$[rbp]
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 1762 : 
; 1763 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rax, QWORD PTR _Myfirst$[rbp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Tidy

; 1764 :             _Destroy(_Myfirst, _Mylast);

	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	r8, QWORD PTR [rax]
	mov	rax, QWORD PTR _Myfirst$[rbp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Destroy@?$vector@Ubraket_group@@V?$allocator@Ubraket_group@@@std@@@std@@AEAAXPEAUbraket_group@@0@Z ; std::vector<braket_group,std::allocator<braket_group> >::_Destroy

; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rax, QWORD PTR _Myend$[rbp]
	mov	rcx, QWORD PTR _Myfirst$[rbp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	sar	rax, 3
	mov	QWORD PTR tv82[rbp], rax
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$vector@Ubraket_group@@V?$allocator@Ubraket_group@@@std@@@std@@AEAAAEAV?$allocator@Ubraket_group@@@2@XZ ; std::vector<braket_group,std::allocator<braket_group> >::_Getal
	mov	rcx, QWORD PTR tv82[rbp]
	mov	r8, rcx
	mov	rcx, QWORD PTR _Myfirst$[rbp]
	mov	rdx, QWORD PTR [rcx]
	mov	rcx, rax
	call	?deallocate@?$allocator@Ubraket_group@@@std@@QEAAXQEAUbraket_group@@_K@Z ; std::allocator<braket_group>::deallocate

; 1766 : 
; 1767 :             _Myfirst = nullptr;

	mov	rax, QWORD PTR _Myfirst$[rbp]
	mov	QWORD PTR [rax], 0

; 1768 :             _Mylast  = nullptr;

	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	QWORD PTR [rax], 0

; 1769 :             _Myend   = nullptr;

	mov	rax, QWORD PTR _Myend$[rbp]
	mov	QWORD PTR [rax], 0
$LN2@Tidy:

; 1770 :         }
; 1771 :     }

	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
?_Tidy@?$vector@Ubraket_group@@V?$allocator@Ubraket_group@@@std@@@std@@AEAAXXZ ENDP ; std::vector<braket_group,std::allocator<braket_group> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Destroy@?$vector@Ubraket_group@@V?$allocator@Ubraket_group@@@std@@@std@@AEAAXPEAUbraket_group@@0@Z
_TEXT	SEGMENT
this$ = 224
_First$ = 232
_Last$ = 240
?_Destroy@?$vector@Ubraket_group@@V?$allocator@Ubraket_group@@@std@@@std@@AEAAXPEAUbraket_group@@0@Z PROC ; std::vector<braket_group,std::allocator<braket_group> >::_Destroy, COMDAT

; 1678 :     _CONSTEXPR20_CONTAINER void _Destroy(pointer _First, pointer _Last) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__324884E2_vector
	call	__CheckForDebuggerJustMyCode

; 1679 :         // destroy [_First, _Last) using allocator
; 1680 :         _Destroy_range(_First, _Last, _Getal());

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$vector@Ubraket_group@@V?$allocator@Ubraket_group@@@std@@@std@@AEAAAEAV?$allocator@Ubraket_group@@@2@XZ ; std::vector<braket_group,std::allocator<braket_group> >::_Getal
	mov	r8, rax
	mov	rdx, QWORD PTR _Last$[rbp]
	mov	rcx, QWORD PTR _First$[rbp]
	call	??$_Destroy_range@V?$allocator@Ubraket_group@@@std@@@std@@YAXPEAUbraket_group@@QEAU1@AEAV?$allocator@Ubraket_group@@@0@@Z ; std::_Destroy_range<std::allocator<braket_group> >

; 1681 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Destroy@?$vector@Ubraket_group@@V?$allocator@Ubraket_group@@@std@@@std@@AEAAXPEAUbraket_group@@0@Z ENDP ; std::vector<braket_group,std::allocator<braket_group> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??1?$vector@Ubraket_group@@V?$allocator@Ubraket_group@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 8
$S2$ = 36
$T4 = 260
__$ArrayPad$ = 280
this$ = 320
??1?$vector@Ubraket_group@@V?$allocator@Ubraket_group@@@std@@@std@@QEAA@XZ PROC ; std::vector<braket_group,std::allocator<braket_group> >::~vector<braket_group,std::allocator<braket_group> >, COMDAT

; 711  :     _CONSTEXPR20_CONTAINER ~vector() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 26
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+360]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__324884E2_vector
	call	__CheckForDebuggerJustMyCode

; 712  :         _Tidy();

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Tidy@?$vector@Ubraket_group@@V?$allocator@Ubraket_group@@@std@@@std@@AEAAXXZ ; std::vector<braket_group,std::allocator<braket_group> >::_Tidy

; 713  : #if _ITERATOR_DEBUG_LEVEL != 0
; 714  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$vector@Ubraket_group@@V?$allocator@Ubraket_group@@@std@@@std@@AEAAAEAV?$allocator@Ubraket_group@@@2@XZ ; std::vector<braket_group,std::allocator<braket_group> >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $S2$[rbp]
	call	??$?0Ubraket_group@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@Ubraket_group@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><braket_group>
	lea	rax, QWORD PTR $S2$[rbp]
	mov	QWORD PTR _Alproxy$[rbp], rax

; 715  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

	mov	QWORD PTR $T4[rbp], 0
	mov	rax, QWORD PTR this$[rbp]
	lea	rdx, QWORD PTR $T4[rbp]
	mov	rcx, rax
	call	??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
	mov	rdx, rax
	mov	rcx, QWORD PTR _Alproxy$[rbp]
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >

; 716  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 717  :     }

	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:??1?$vector@Ubraket_group@@V?$allocator@Ubraket_group@@@std@@@std@@QEAA@XZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
??1?$vector@Ubraket_group@@V?$allocator@Ubraket_group@@@std@@@std@@QEAA@XZ ENDP ; std::vector<braket_group,std::allocator<braket_group> >::~vector<braket_group,std::allocator<braket_group> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?deallocate@?$allocator@Ubraket_group@@@std@@QEAAXQEAUbraket_group@@_K@Z
_TEXT	SEGMENT
this$ = 224
_Ptr$ = 232
_Count$ = 240
?deallocate@?$allocator@Ubraket_group@@@std@@QEAAXQEAUbraket_group@@_K@Z PROC ; std::allocator<braket_group>::deallocate, COMDAT

; 833  :     _CONSTEXPR20_DYNALLOC void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode

; 834  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rax, QWORD PTR _Count$[rbp]
	shl	rax, 3
	mov	rdx, rax
	mov	rcx, QWORD PTR _Ptr$[rbp]
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 836  :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?deallocate@?$allocator@Ubraket_group@@@std@@QEAAXQEAUbraket_group@@_K@Z ENDP ; std::allocator<braket_group>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 224
classSize$ = 232
?__autoclassinit2@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAAX_K@Z PROC ; std::vector<op,std::allocator<op> >::__autoclassinit2, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 200				; 000000c8H
	mov	rbp, rsp
	mov	rdi, QWORD PTR this$[rbp]
	xor	eax, eax
	mov	rcx, QWORD PTR classSize$[rbp]
	rep stosb
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?__autoclassinit2@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAAX_K@Z ENDP ; std::vector<op,std::allocator<op> >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@Uop@@@std@@V?$_Vector_val@U?$_Simple_types@Uop@@@std@@@2@$00@std@@QEBAAEBV?$allocator@Uop@@@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Get_first@?$_Compressed_pair@V?$allocator@Uop@@@std@@V?$_Vector_val@U?$_Simple_types@Uop@@@std@@@2@$00@std@@QEBAAEBV?$allocator@Uop@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<op>,std::_Vector_val<std::_Simple_types<op> >,1>::_Get_first, COMDAT

; 1401 :     constexpr const _Ty1& _Get_first() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode

; 1402 :         return *this;

	mov	rax, QWORD PTR this$[rbp]

; 1403 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@Uop@@@std@@V?$_Vector_val@U?$_Simple_types@Uop@@@std@@@2@$00@std@@QEBAAEBV?$allocator@Uop@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<op>,std::_Vector_val<std::_Simple_types<op> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@Uop@@@std@@V?$_Vector_val@U?$_Simple_types@Uop@@@std@@@2@$00@std@@QEAAAEAV?$allocator@Uop@@@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Get_first@?$_Compressed_pair@V?$allocator@Uop@@@std@@V?$_Vector_val@U?$_Simple_types@Uop@@@std@@@2@$00@std@@QEAAAEAV?$allocator@Uop@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<op>,std::_Vector_val<std::_Simple_types<op> >,1>::_Get_first, COMDAT

; 1397 :     constexpr _Ty1& _Get_first() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode

; 1398 :         return *this;

	mov	rax, QWORD PTR this$[rbp]

; 1399 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@Uop@@@std@@V?$_Vector_val@U?$_Simple_types@Uop@@@std@@@2@$00@std@@QEAAAEAV?$allocator@Uop@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<op>,std::_Vector_val<std::_Simple_types<op> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@Uop@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$_Vector_val@U?$_Simple_types@Uop@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<op> >::_Vector_val<std::_Simple_types<op> >, COMDAT

; 401  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__324884E2_vector
	call	__CheckForDebuggerJustMyCode
	mov	rcx, QWORD PTR this$[rbp]
	call	??0_Container_base12@std@@QEAA@XZ	; std::_Container_base12::_Container_base12
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+16], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+24], 0
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$_Vector_val@U?$_Simple_types@Uop@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<op> >::_Vector_val<std::_Simple_types<op> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Getal@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@AEBAAEBV?$allocator@Uop@@@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Getal@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@AEBAAEBV?$allocator@Uop@@@2@XZ PROC ; std::vector<op,std::allocator<op> >::_Getal, COMDAT

; 1821 :     _NODISCARD _CONSTEXPR20_CONTAINER const _Alty& _Getal() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__324884E2_vector
	call	__CheckForDebuggerJustMyCode

; 1822 :         return _Mypair._Get_first();

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@V?$allocator@Uop@@@std@@V?$_Vector_val@U?$_Simple_types@Uop@@@std@@@2@$00@std@@QEBAAEBV?$allocator@Uop@@@2@XZ ; std::_Compressed_pair<std::allocator<op>,std::_Vector_val<std::_Simple_types<op> >,1>::_Get_first

; 1823 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Getal@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@AEBAAEBV?$allocator@Uop@@@2@XZ ENDP ; std::vector<op,std::allocator<op> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Getal@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@AEAAAEAV?$allocator@Uop@@@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Getal@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@AEAAAEAV?$allocator@Uop@@@2@XZ PROC ; std::vector<op,std::allocator<op> >::_Getal, COMDAT

; 1817 :     _NODISCARD _CONSTEXPR20_CONTAINER _Alty& _Getal() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__324884E2_vector
	call	__CheckForDebuggerJustMyCode

; 1818 :         return _Mypair._Get_first();

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@V?$allocator@Uop@@@std@@V?$_Vector_val@U?$_Simple_types@Uop@@@std@@@2@$00@std@@QEAAAEAV?$allocator@Uop@@@2@XZ ; std::_Compressed_pair<std::allocator<op>,std::_Vector_val<std::_Simple_types<op> >,1>::_Get_first

; 1819 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Getal@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@AEAAAEAV?$allocator@Uop@@@2@XZ ENDP ; std::vector<op,std::allocator<op> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Tidy@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
_My_data$ = 8
_Myfirst$ = 40
_Mylast$ = 72
_Myend$ = 104
tv82 = 312
this$ = 352
?_Tidy@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@AEAAXXZ PROC ; std::vector<op,std::allocator<op> >::_Tidy, COMDAT

; 1755 :     _CONSTEXPR20_CONTAINER void _Tidy() noexcept { // free all storage

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 360				; 00000168H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__324884E2_vector
	call	__CheckForDebuggerJustMyCode

; 1756 :         auto& _My_data    = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR _My_data$[rbp], rax

; 1757 :         pointer& _Myfirst = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rbp], rax

; 1758 :         pointer& _Mylast  = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rbp], rax

; 1759 :         pointer& _Myend   = _My_data._Myend;

	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 24
	mov	QWORD PTR _Myend$[rbp], rax

; 1760 : 
; 1761 :         _My_data._Orphan_all();

	mov	rcx, QWORD PTR _My_data$[rbp]
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 1762 : 
; 1763 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rax, QWORD PTR _Myfirst$[rbp]
	cmp	QWORD PTR [rax], 0
	je	$LN2@Tidy

; 1764 :             _Destroy(_Myfirst, _Mylast);

	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	r8, QWORD PTR [rax]
	mov	rax, QWORD PTR _Myfirst$[rbp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Destroy@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@AEAAXPEAUop@@0@Z ; std::vector<op,std::allocator<op> >::_Destroy

; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rax, QWORD PTR _Myend$[rbp]
	mov	rcx, QWORD PTR _Myfirst$[rbp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	cdq
	mov	ecx, 48					; 00000030H
	idiv	rcx
	mov	QWORD PTR tv82[rbp], rax
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@AEAAAEAV?$allocator@Uop@@@2@XZ ; std::vector<op,std::allocator<op> >::_Getal
	mov	rcx, QWORD PTR tv82[rbp]
	mov	r8, rcx
	mov	rcx, QWORD PTR _Myfirst$[rbp]
	mov	rdx, QWORD PTR [rcx]
	mov	rcx, rax
	call	?deallocate@?$allocator@Uop@@@std@@QEAAXQEAUop@@_K@Z ; std::allocator<op>::deallocate

; 1766 : 
; 1767 :             _Myfirst = nullptr;

	mov	rax, QWORD PTR _Myfirst$[rbp]
	mov	QWORD PTR [rax], 0

; 1768 :             _Mylast  = nullptr;

	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	QWORD PTR [rax], 0

; 1769 :             _Myend   = nullptr;

	mov	rax, QWORD PTR _Myend$[rbp]
	mov	QWORD PTR [rax], 0
$LN2@Tidy:

; 1770 :         }
; 1771 :     }

	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
?_Tidy@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@AEAAXXZ ENDP ; std::vector<op,std::allocator<op> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Buy_raw@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@AEAAX_K@Z
_TEXT	SEGMENT
_My_data$ = 8
_Myfirst$ = 40
_Mylast$ = 72
_Myend$ = 104
_Newvec$ = 136
this$ = 384
_Newcapacity$ = 392
?_Buy_raw@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@AEAAX_K@Z PROC ; std::vector<op,std::allocator<op> >::_Buy_raw, COMDAT

; 1701 :     _CONSTEXPR20_CONTAINER void _Buy_raw(const size_type _Newcapacity) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 392				; 00000188H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__324884E2_vector
	call	__CheckForDebuggerJustMyCode

; 1702 :         // allocate array with _Newcapacity elements
; 1703 :         auto& _My_data    = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR _My_data$[rbp], rax

; 1704 :         pointer& _Myfirst = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rbp], rax

; 1705 :         pointer& _Mylast  = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rbp], rax

; 1706 :         pointer& _Myend   = _My_data._Myend;

	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 24
	mov	QWORD PTR _Myend$[rbp], rax

; 1707 : 
; 1708 :         _STL_INTERNAL_CHECK(!_Myfirst && !_Mylast && !_Myend); // check that *this is tidy
; 1709 :         _STL_INTERNAL_CHECK(0 < _Newcapacity && _Newcapacity <= max_size());
; 1710 : 
; 1711 :         const auto _Newvec = _Getal().allocate(_Newcapacity);

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@AEAAAEAV?$allocator@Uop@@@2@XZ ; std::vector<op,std::allocator<op> >::_Getal
	mov	rdx, QWORD PTR _Newcapacity$[rbp]
	mov	rcx, rax
	call	?allocate@?$allocator@Uop@@@std@@QEAAPEAUop@@_K@Z ; std::allocator<op>::allocate
	mov	QWORD PTR _Newvec$[rbp], rax

; 1712 :         _Myfirst           = _Newvec;

	mov	rax, QWORD PTR _Myfirst$[rbp]
	mov	rcx, QWORD PTR _Newvec$[rbp]
	mov	QWORD PTR [rax], rcx

; 1713 :         _Mylast            = _Newvec;

	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	rcx, QWORD PTR _Newvec$[rbp]
	mov	QWORD PTR [rax], rcx

; 1714 :         _Myend             = _Newvec + _Newcapacity;

	imul	rax, QWORD PTR _Newcapacity$[rbp], 48	; 00000030H
	mov	rcx, QWORD PTR _Newvec$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, QWORD PTR _Myend$[rbp]
	mov	QWORD PTR [rcx], rax

; 1715 :     }

	lea	rsp, QWORD PTR [rbp+360]
	pop	rdi
	pop	rbp
	ret	0
?_Buy_raw@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@AEAAX_K@Z ENDP ; std::vector<op,std::allocator<op> >::_Buy_raw
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Destroy@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@AEAAXPEAUop@@0@Z
_TEXT	SEGMENT
this$ = 224
_First$ = 232
_Last$ = 240
?_Destroy@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@AEAAXPEAUop@@0@Z PROC ; std::vector<op,std::allocator<op> >::_Destroy, COMDAT

; 1678 :     _CONSTEXPR20_CONTAINER void _Destroy(pointer _First, pointer _Last) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__324884E2_vector
	call	__CheckForDebuggerJustMyCode

; 1679 :         // destroy [_First, _Last) using allocator
; 1680 :         _Destroy_range(_First, _Last, _Getal());

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@AEAAAEAV?$allocator@Uop@@@2@XZ ; std::vector<op,std::allocator<op> >::_Getal
	mov	r8, rax
	mov	rdx, QWORD PTR _Last$[rbp]
	mov	rcx, QWORD PTR _First$[rbp]
	call	??$_Destroy_range@V?$allocator@Uop@@@std@@@std@@YAXPEAUop@@QEAU1@AEAV?$allocator@Uop@@@0@@Z ; std::_Destroy_range<std::allocator<op> >

; 1681 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Destroy@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@AEAAXPEAUop@@0@Z ENDP ; std::vector<op,std::allocator<op> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??A?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAAAEAUop@@_K@Z
_TEXT	SEGMENT
_My_data$ = 8
this$ = 256
_Pos$ = 264
??A?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAAAEAUop@@_K@Z PROC ; std::vector<op,std::allocator<op> >::operator[], COMDAT

; 1562 :     _NODISCARD _CONSTEXPR20_CONTAINER _Ty& operator[](const size_type _Pos) noexcept /* strengthened */ {

$LN12:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 280				; 00000118H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__324884E2_vector
	call	__CheckForDebuggerJustMyCode

; 1563 :         auto& _My_data = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR _My_data$[rbp], rax
$LN4@operator:

; 1564 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1565 :         _STL_VERIFY(

	mov	rax, QWORD PTR _My_data$[rbp]
	mov	rcx, QWORD PTR _My_data$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	rax, QWORD PTR [rax+16]
	sub	rax, rcx
	cdq
	mov	ecx, 48					; 00000030H
	idiv	rcx
	cmp	QWORD PTR _Pos$[rbp], rax
	jae	SHORT $LN7@operator
	jmp	SHORT $LN9@operator
$LN7@operator:
	lea	rax, OFFSET FLAT:??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 1566				; 0000061eH
	lea	rdx, OFFSET FLAT:??_C@_0GH@KMHDIFOI@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN11@operator
	int	3
	xor	eax, eax
$LN11@operator:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 1566				; 0000061eH
	lea	r8, OFFSET FLAT:??_C@_1MO@NOHEJINP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_1IK@LEEOEPLD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr@
	lea	rcx, OFFSET FLAT:??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@operator
$LN9@operator:
	xor	eax, eax
	test	eax, eax
	jne	$LN4@operator

; 1566 :             _Pos < static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst), "vector subscript out of range");
; 1567 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1568 : 
; 1569 :         return _My_data._Myfirst[_Pos];

	imul	rax, QWORD PTR _Pos$[rbp], 48		; 00000030H
	mov	rcx, QWORD PTR _My_data$[rbp]
	add	rax, QWORD PTR [rcx+8]

; 1570 :     }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??A?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAAAEAUop@@_K@Z ENDP ; std::vector<op,std::allocator<op> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?size@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
_My_data$ = 8
this$ = 256
?size@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEBA_KXZ PROC ; std::vector<op,std::allocator<op> >::size, COMDAT

; 1547 :     _NODISCARD _CONSTEXPR20_CONTAINER size_type size() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__324884E2_vector
	call	__CheckForDebuggerJustMyCode

; 1548 :         auto& _My_data = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR _My_data$[rbp], rax

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rax, QWORD PTR _My_data$[rbp]
	mov	rcx, QWORD PTR _My_data$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	rax, QWORD PTR [rax+16]
	sub	rax, rcx
	cdq
	mov	ecx, 48					; 00000030H
	idiv	rcx

; 1550 :     }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?size@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<op,std::allocator<op> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Unchecked_end@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAAPEAUop@@XZ
_TEXT	SEGMENT
this$ = 224
?_Unchecked_end@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAAPEAUop@@XZ PROC ; std::vector<op,std::allocator<op> >::_Unchecked_end, COMDAT

; 1534 :     _NODISCARD _CONSTEXPR20_CONTAINER pointer _Unchecked_end() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__324884E2_vector
	call	__CheckForDebuggerJustMyCode

; 1535 :         return _Mypair._Myval2._Mylast;

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+16]

; 1536 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Unchecked_end@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAAPEAUop@@XZ ENDP ; std::vector<op,std::allocator<op> >::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Unchecked_begin@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAAPEAUop@@XZ
_TEXT	SEGMENT
this$ = 224
?_Unchecked_begin@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAAPEAUop@@XZ PROC ; std::vector<op,std::allocator<op> >::_Unchecked_begin, COMDAT

; 1526 :     _NODISCARD _CONSTEXPR20_CONTAINER pointer _Unchecked_begin() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__324884E2_vector
	call	__CheckForDebuggerJustMyCode

; 1527 :         return _Mypair._Myval2._Myfirst;

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+8]

; 1528 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Unchecked_begin@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAAPEAUop@@XZ ENDP ; std::vector<op,std::allocator<op> >::_Unchecked_begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??1?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 8
$S3$ = 36
$T4 = 260
__$ArrayPad$ = 280
this$ = 320
??1?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@XZ PROC ; std::vector<op,std::allocator<op> >::~vector<op,std::allocator<op> >, COMDAT

; 711  :     _CONSTEXPR20_CONTAINER ~vector() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 26
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+360]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__324884E2_vector
	call	__CheckForDebuggerJustMyCode

; 712  :         _Tidy();

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Tidy@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@AEAAXXZ ; std::vector<op,std::allocator<op> >::_Tidy

; 713  : #if _ITERATOR_DEBUG_LEVEL != 0
; 714  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@AEAAAEAV?$allocator@Uop@@@2@XZ ; std::vector<op,std::allocator<op> >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $S3$[rbp]
	call	??$?0Uop@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@Uop@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><op>
	lea	rax, QWORD PTR $S3$[rbp]
	mov	QWORD PTR _Alproxy$[rbp], rax

; 715  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

	mov	QWORD PTR $T4[rbp], 0
	mov	rax, QWORD PTR this$[rbp]
	lea	rdx, QWORD PTR $T4[rbp]
	mov	rcx, rax
	call	??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
	mov	rdx, rax
	mov	rcx, QWORD PTR _Alproxy$[rbp]
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >

; 716  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 717  :     }

	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:??1?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@XZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
??1?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@XZ ENDP ; std::vector<op,std::allocator<op> >::~vector<op,std::allocator<op> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??0?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
_Alproxy$ = 8
$S4$ = 36
_My_data$ = 72
_Right_data$ = 104
_Rightfirst$ = 136
_Rightlast$ = 168
_Proxy$ = 200
_Guard$6 = 248
$T7 = 468
$T8 = 500
__$ArrayPad$ = 520
this$ = 560
_Right$ = 568
??0?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@AEBV01@@Z PROC ; std::vector<op,std::allocator<op> >::vector<op,std::allocator<op> >, COMDAT

; 555  :         : _Mypair(_One_then_variadic_args_t{}, _Alty_traits::select_on_container_copy_construction(_Right._Getal())) {

$LN6:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 568				; 00000238H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 86					; 00000056H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+600]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__324884E2_vector
	call	__CheckForDebuggerJustMyCode
	mov	rcx, QWORD PTR _Right$[rbp]
	call	?_Getal@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@AEBAAEBV?$allocator@Uop@@@2@XZ ; std::vector<op,std::allocator<op> >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $T7[rbp]
	call	?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@Uop@@@std@@@std@@SA?AV?$allocator@Uop@@@2@AEBV32@@Z ; std::_Default_allocator_traits<std::allocator<op> >::select_on_container_copy_construction
	mov	rcx, QWORD PTR this$[rbp]
	mov	r8, rax
	movzx	edx, BYTE PTR $T8[rbp]
	call	??$?0V?$allocator@Uop@@@std@@$$V@?$_Compressed_pair@V?$allocator@Uop@@@std@@V?$_Vector_val@U?$_Simple_types@Uop@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@Uop@@@1@@Z ; std::_Compressed_pair<std::allocator<op>,std::_Vector_val<std::_Simple_types<op> >,1>::_Compressed_pair<std::allocator<op>,std::_Vector_val<std::_Simple_types<op> >,1><std::allocator<op> >

; 556  :         auto&& _Alproxy           = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@AEAAAEAV?$allocator@Uop@@@2@XZ ; std::vector<op,std::allocator<op> >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $S4$[rbp]
	call	??$?0Uop@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@Uop@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><op>
	lea	rax, QWORD PTR $S4$[rbp]
	mov	QWORD PTR _Alproxy$[rbp], rax

; 557  :         auto& _My_data            = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR _My_data$[rbp], rax

; 558  :         const auto& _Right_data   = _Right._Mypair._Myval2;

	mov	rax, QWORD PTR _Right$[rbp]
	mov	QWORD PTR _Right_data$[rbp], rax

; 559  :         const pointer _Rightfirst = _Right_data._Myfirst;

	mov	rax, QWORD PTR _Right_data$[rbp]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR _Rightfirst$[rbp], rax

; 560  :         const pointer _Rightlast  = _Right_data._Mylast;

	mov	rax, QWORD PTR _Right_data$[rbp]
	mov	rax, QWORD PTR [rax+16]
	mov	QWORD PTR _Rightlast$[rbp], rax

; 561  :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);

	mov	r8, QWORD PTR _My_data$[rbp]
	mov	rdx, QWORD PTR _Alproxy$[rbp]
	lea	rcx, QWORD PTR _Proxy$[rbp]
	call	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	npad	1

; 562  :         if (_Rightfirst != _Rightlast) {

	mov	rax, QWORD PTR _Rightlast$[rbp]
	cmp	QWORD PTR _Rightfirst$[rbp], rax
	je	SHORT $LN2@vector

; 563  :             _Buy_raw(static_cast<size_type>(_Rightlast - _Rightfirst));

	mov	rax, QWORD PTR _Rightfirst$[rbp]
	mov	rcx, QWORD PTR _Rightlast$[rbp]
	sub	rcx, rax
	mov	rax, rcx
	cdq
	mov	ecx, 48					; 00000030H
	idiv	rcx
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Buy_raw@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@AEAAX_K@Z ; std::vector<op,std::allocator<op> >::_Buy_raw

; 564  :             _Tidy_guard<vector> _Guard{this};

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR _Guard$6[rbp], rax

; 565  :             _My_data._Mylast = _Ucopy(_Rightfirst, _Rightlast, _My_data._Myfirst);

	mov	rax, QWORD PTR _My_data$[rbp]
	mov	r9, QWORD PTR [rax+8]
	mov	r8, QWORD PTR _Rightlast$[rbp]
	mov	rdx, QWORD PTR _Rightfirst$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	??$_Ucopy@PEAUop@@@?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@AEAAPEAUop@@PEAU2@00@Z ; std::vector<op,std::allocator<op> >::_Ucopy<op *>
	mov	rcx, QWORD PTR _My_data$[rbp]
	mov	QWORD PTR [rcx+16], rax

; 566  :             _Guard._Target   = nullptr;

	mov	QWORD PTR _Guard$6[rbp], 0

; 567  :         }

	lea	rcx, QWORD PTR _Guard$6[rbp]
	call	??1?$_Tidy_guard@V?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<op,std::allocator<op> > >::~_Tidy_guard<std::vector<op,std::allocator<op> > >
$LN2@vector:

; 568  : 
; 569  :         _Proxy._Release();

	lea	rcx, QWORD PTR _Proxy$[rbp]
	call	?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
	npad	1

; 570  :     }

	lea	rcx, QWORD PTR _Proxy$[rbp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	mov	rax, QWORD PTR this$[rbp]
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:??0?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@AEBV01@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+536]
	pop	rdi
	pop	rbp
	ret	0
??0?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@AEBV01@@Z ENDP ; std::vector<op,std::allocator<op> >::vector<op,std::allocator<op> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 8
$S4$ = 36
_My_data$ = 72
_Right_data$ = 104
_Rightfirst$ = 136
_Rightlast$ = 168
_Proxy$ = 200
_Guard$6 = 248
$T7 = 468
$T8 = 500
__$ArrayPad$ = 520
this$ = 560
_Right$ = 568
?dtor$0@?0???0?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::vector<op,std::allocator<op> >::vector<op,std::allocator<op> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR _Proxy$[rbp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::vector<op,std::allocator<op> >::vector<op,std::allocator<op> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 8
$S4$ = 36
_My_data$ = 72
_Right_data$ = 104
_Rightfirst$ = 136
_Rightlast$ = 168
_Proxy$ = 200
_Guard$6 = 248
$T7 = 468
$T8 = 500
__$ArrayPad$ = 520
this$ = 560
_Right$ = 568
?dtor$1@?0???0?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::vector<op,std::allocator<op> >::vector<op,std::allocator<op> >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR _Guard$6[rbp]
	call	??1?$_Tidy_guard@V?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<op,std::allocator<op> > >::~_Tidy_guard<std::vector<op,std::allocator<op> > >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???0?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::vector<op,std::allocator<op> >::vector<op,std::allocator<op> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 8
$S4$ = 36
_My_data$ = 72
_Right_data$ = 104
_Rightfirst$ = 136
_Rightlast$ = 168
_Proxy$ = 200
_Guard$6 = 248
$T7 = 468
$T8 = 500
__$ArrayPad$ = 520
this$ = 560
_Right$ = 568
?dtor$0@?0???0?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::vector<op,std::allocator<op> >::vector<op,std::allocator<op> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR _Proxy$[rbp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::vector<op,std::allocator<op> >::vector<op,std::allocator<op> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 8
$S4$ = 36
_My_data$ = 72
_Right_data$ = 104
_Rightfirst$ = 136
_Rightlast$ = 168
_Proxy$ = 200
_Guard$6 = 248
$T7 = 468
$T8 = 500
__$ArrayPad$ = 520
this$ = 560
_Right$ = 568
?dtor$1@?0???0?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::vector<op,std::allocator<op> >::vector<op,std::allocator<op> >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR _Guard$6[rbp]
	call	??1?$_Tidy_guard@V?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<op,std::allocator<op> > >::~_Tidy_guard<std::vector<op,std::allocator<op> > >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???0?$vector@Uop@@V?$allocator@Uop@@@std@@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::vector<op,std::allocator<op> >::vector<op,std::allocator<op> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@Uop@@@std@@@std@@SA?AV?$allocator@Uop@@@2@AEBV32@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 224
_Al$ = 232
?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@Uop@@@std@@@std@@SA?AV?$allocator@Uop@@@2@AEBV32@@Z PROC ; std::_Default_allocator_traits<std::allocator<op> >::select_on_container_copy_construction, COMDAT

; 731  :     _NODISCARD static _CONSTEXPR20_DYNALLOC _Alloc select_on_container_copy_construction(const _Alloc& _Al) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode

; 732  :         return _Al;

	mov	rax, QWORD PTR __$ReturnUdt$[rbp]

; 733  :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@Uop@@@std@@@std@@SA?AV?$allocator@Uop@@@2@AEBV32@@Z ENDP ; std::_Default_allocator_traits<std::allocator<op> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?allocate@?$allocator@Uop@@@std@@QEAAPEAUop@@_K@Z
_TEXT	SEGMENT
this$ = 224
_Count$ = 232
?allocate@?$allocator@Uop@@@std@@QEAAPEAUop@@_K@Z PROC	; std::allocator<op>::allocate, COMDAT

; 838  :     _NODISCARD _CONSTEXPR20_DYNALLOC __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode

; 839  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

	mov	rcx, QWORD PTR _Count$[rbp]
	call	??$_Get_size_of_n@$0DA@@std@@YA_K_K@Z	; std::_Get_size_of_n<48>
	mov	rcx, rax
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 840  :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?allocate@?$allocator@Uop@@@std@@QEAAPEAUop@@_K@Z ENDP	; std::allocator<op>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?deallocate@?$allocator@Uop@@@std@@QEAAXQEAUop@@_K@Z
_TEXT	SEGMENT
this$ = 224
_Ptr$ = 232
_Count$ = 240
?deallocate@?$allocator@Uop@@@std@@QEAAXQEAUop@@_K@Z PROC ; std::allocator<op>::deallocate, COMDAT

; 833  :     _CONSTEXPR20_DYNALLOC void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode

; 834  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	imul	rax, QWORD PTR _Count$[rbp], 48		; 00000030H
	mov	rdx, rax
	mov	rcx, QWORD PTR _Ptr$[rbp]
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 836  :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?deallocate@?$allocator@Uop@@@std@@QEAAXQEAUop@@_K@Z ENDP ; std::allocator<op>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 224
classSize$ = 232
?__autoclassinit2@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAX_K@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::__autoclassinit2, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 200				; 000000c8H
	mov	rbp, rsp
	mov	rdi, QWORD PTR this$[rbp]
	xor	eax, eax
	mov	rcx, QWORD PTR classSize$[rbp]
	rep stosb
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?__autoclassinit2@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAX_K@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>::_Get_first, COMDAT

; 1397 :     constexpr _Ty1& _Get_first() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode

; 1398 :         return *this;

	mov	rax, QWORD PTR this$[rbp]

; 1399 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Getal, COMDAT

; 1817 :     _NODISCARD _CONSTEXPR20_CONTAINER _Alty& _Getal() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__324884E2_vector
	call	__CheckForDebuggerJustMyCode

; 1818 :         return _Mypair._Get_first();

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>::_Get_first

; 1819 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ
_TEXT	SEGMENT
_My_data$ = 8
_Myfirst$ = 40
_Mylast$ = 72
_Myend$ = 104
tv82 = 312
this$ = 352
?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy, COMDAT

; 1755 :     _CONSTEXPR20_CONTAINER void _Tidy() noexcept { // free all storage

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 360				; 00000168H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__324884E2_vector
	call	__CheckForDebuggerJustMyCode

; 1756 :         auto& _My_data    = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR _My_data$[rbp], rax

; 1757 :         pointer& _Myfirst = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rbp], rax

; 1758 :         pointer& _Mylast  = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rbp], rax

; 1759 :         pointer& _Myend   = _My_data._Myend;

	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 24
	mov	QWORD PTR _Myend$[rbp], rax

; 1760 : 
; 1761 :         _My_data._Orphan_all();

	mov	rcx, QWORD PTR _My_data$[rbp]
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 1762 : 
; 1763 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rax, QWORD PTR _Myfirst$[rbp]
	cmp	QWORD PTR [rax], 0
	je	$LN2@Tidy

; 1764 :             _Destroy(_Myfirst, _Mylast);

	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	r8, QWORD PTR [rax]
	mov	rax, QWORD PTR _Myfirst$[rbp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy

; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rax, QWORD PTR _Myend$[rbp]
	mov	rcx, QWORD PTR _Myfirst$[rbp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	cdq
	mov	ecx, 40					; 00000028H
	idiv	rcx
	mov	QWORD PTR tv82[rbp], rax
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Getal
	mov	rcx, QWORD PTR tv82[rbp]
	mov	r8, rcx
	mov	rcx, QWORD PTR _Myfirst$[rbp]
	mov	rdx, QWORD PTR [rcx]
	mov	rcx, rax
	call	?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate

; 1766 : 
; 1767 :             _Myfirst = nullptr;

	mov	rax, QWORD PTR _Myfirst$[rbp]
	mov	QWORD PTR [rax], 0

; 1768 :             _Mylast  = nullptr;

	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	QWORD PTR [rax], 0

; 1769 :             _Myend   = nullptr;

	mov	rax, QWORD PTR _Myend$[rbp]
	mov	QWORD PTR [rax], 0
$LN2@Tidy:

; 1770 :         }
; 1771 :     }

	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z
_TEXT	SEGMENT
this$ = 224
_First$ = 232
_Last$ = 240
?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy, COMDAT

; 1678 :     _CONSTEXPR20_CONTAINER void _Destroy(pointer _First, pointer _Last) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__324884E2_vector
	call	__CheckForDebuggerJustMyCode

; 1679 :         // destroy [_First, _Last) using allocator
; 1680 :         _Destroy_range(_First, _Last, _Getal());

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Getal
	mov	r8, rax
	mov	rdx, QWORD PTR _Last$[rbp]
	mov	rcx, QWORD PTR _First$[rbp]
	call	??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 1681 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@_K@Z
_TEXT	SEGMENT
_My_data$ = 8
this$ = 256
_Pos$ = 264
??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@_K@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[], COMDAT

; 1562 :     _NODISCARD _CONSTEXPR20_CONTAINER _Ty& operator[](const size_type _Pos) noexcept /* strengthened */ {

$LN12:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 280				; 00000118H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__324884E2_vector
	call	__CheckForDebuggerJustMyCode

; 1563 :         auto& _My_data = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR _My_data$[rbp], rax
$LN4@operator:

; 1564 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1565 :         _STL_VERIFY(

	mov	rax, QWORD PTR _My_data$[rbp]
	mov	rcx, QWORD PTR _My_data$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	rax, QWORD PTR [rax+16]
	sub	rax, rcx
	cdq
	mov	ecx, 40					; 00000028H
	idiv	rcx
	cmp	QWORD PTR _Pos$[rbp], rax
	jae	SHORT $LN7@operator
	jmp	SHORT $LN9@operator
$LN7@operator:
	lea	rax, OFFSET FLAT:??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 1566				; 0000061eH
	lea	rdx, OFFSET FLAT:??_C@_0GH@KMHDIFOI@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN11@operator
	int	3
	xor	eax, eax
$LN11@operator:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 1566				; 0000061eH
	lea	r8, OFFSET FLAT:??_C@_1MO@NOHEJINP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_1BME@NCIPHHDN@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa@
	lea	rcx, OFFSET FLAT:??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@operator
$LN9@operator:
	xor	eax, eax
	test	eax, eax
	jne	$LN4@operator

; 1566 :             _Pos < static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst), "vector subscript out of range");
; 1567 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1568 : 
; 1569 :         return _My_data._Myfirst[_Pos];

	imul	rax, QWORD PTR _Pos$[rbp], 40		; 00000028H
	mov	rcx, QWORD PTR _My_data$[rbp]
	add	rax, QWORD PTR [rcx+8]

; 1570 :     }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@_K@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 8
$S5$ = 36
$T4 = 260
__$ArrayPad$ = 280
this$ = 320
??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 711  :     _CONSTEXPR20_CONTAINER ~vector() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 26
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+360]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__324884E2_vector
	call	__CheckForDebuggerJustMyCode

; 712  :         _Tidy();

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy

; 713  : #if _ITERATOR_DEBUG_LEVEL != 0
; 714  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $S5$[rbp]
	call	??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	lea	rax, QWORD PTR $S5$[rbp]
	mov	QWORD PTR _Alproxy$[rbp], rax

; 715  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

	mov	QWORD PTR $T4[rbp], 0
	mov	rax, QWORD PTR this$[rbp]
	lea	rdx, QWORD PTR $T4[rbp]
	mov	rcx, rax
	call	??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
	mov	rdx, rax
	mov	rcx, QWORD PTR _Alproxy$[rbp]
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >

; 716  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 717  :     }

	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z
_TEXT	SEGMENT
this$ = 224
_Ptr$ = 232
_Count$ = 240
?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z PROC ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate, COMDAT

; 833  :     _CONSTEXPR20_DYNALLOC void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode

; 834  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	imul	rax, QWORD PTR _Count$[rbp], 40		; 00000028H
	mov	rdx, rax
	mov	rcx, QWORD PTR _Ptr$[rbp]
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 836  :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gop@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_Gop@@QEAAPEAXI@Z PROC				; op::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1op@@QEAA@XZ
	mov	eax, DWORD PTR __flags$[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	edx, 48					; 00000030H
	mov	rcx, QWORD PTR this$[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN2@scalar:
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??_Gop@@QEAAPEAXI@Z ENDP				; op::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0op@@QEAA@AEBU0@@Z
_TEXT	SEGMENT
this$ = 224
__that$ = 232
??0op@@QEAA@AEBU0@@Z PROC				; op::op, COMDAT
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rax, QWORD PTR __that$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	rdx, rax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR __that$[rbp]
	mov	ecx, DWORD PTR [rcx+40]
	mov	DWORD PTR [rax+40], ecx
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0op@@QEAA@AEBU0@@Z ENDP				; op::op
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1op@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1op@@QEAA@XZ PROC					; op::~op, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1op@@QEAA@XZ ENDP					; op::~op
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\shtuk\Desktop\Files\EquationStringParser\EquationStringParser\op.h
;	COMDAT ??0op@@QEAA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
this$ = 224
n$ = 232
??0op@@QEAA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; op::op, COMDAT

; 11   : 	{

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63E15800_op@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 10   : 	op(std::string n) : executionNumber(MaxExecutionNumber)

	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+40], 99999		; 0001869fH

; 12   : 		name = n;

	mov	rax, QWORD PTR this$[rbp]
	mov	rdx, QWORD PTR n$[rbp]
	mov	rcx, rax
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	npad	1

; 13   : 	}

	mov	rcx, QWORD PTR n$[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0op@@QEAA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; op::op
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 224
n$ = 232
?dtor$0@?0???0op@@QEAA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `op::op'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR n$[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0op@@QEAA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `op::op'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 224
n$ = 232
?dtor$1@?0???0op@@QEAA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `op::op'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???0op@@QEAA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `op::op'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
this$ = 224
n$ = 232
?dtor$0@?0???0op@@QEAA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `op::op'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR n$[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0op@@QEAA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `op::op'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
this$ = 224
n$ = 232
?dtor$1@?0???0op@@QEAA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `op::op'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???0op@@QEAA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `op::op'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\string
;	COMDAT ?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@N@Z
_TEXT	SEGMENT
_Len$ = 8
_Str$ = 40
$T4 = 292
tv76 = 312
__$ArrayPad$ = 320
__$ReturnUdt$ = 368
_Val$ = 376
?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@N@Z PROC ; std::to_string, COMDAT

; 537  : _NODISCARD inline string to_string(double _Val) { // convert double to string

$LN6:
	movsd	QWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 376				; 00000178H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 38					; 00000026H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+408]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	mov	DWORD PTR $T4[rbp], 0
	lea	rcx, OFFSET FLAT:__B7987E10_string
	call	__CheckForDebuggerJustMyCode

; 538  :     const auto _Len = static_cast<size_t>(_CSTD _scprintf("%f", _Val));

	movsd	xmm1, QWORD PTR _Val$[rbp]
	movq	rdx, xmm1
	lea	rcx, OFFSET FLAT:??_C@_02NJPGOMH@?$CFf@
	call	_scprintf
	cdqe
	mov	QWORD PTR _Len$[rbp], rax

; 539  :     string _Str(_Len, '\0');

	xor	r8d, r8d
	mov	rdx, QWORD PTR _Len$[rbp]
	lea	rcx, QWORD PTR _Str$[rbp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >

; 540  :     _CSTD sprintf_s(&_Str[0], _Len + 1, "%f", _Val);

	mov	rax, QWORD PTR _Len$[rbp]
	inc	rax
	mov	QWORD PTR tv76[rbp], rax
	xor	edx, edx
	lea	rcx, QWORD PTR _Str$[rbp]
	call	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
	movsd	xmm3, QWORD PTR _Val$[rbp]
	movq	r9, xmm3
	lea	r8, OFFSET FLAT:??_C@_02NJPGOMH@?$CFf@
	mov	rcx, QWORD PTR tv76[rbp]
	mov	rdx, rcx
	mov	rcx, rax
	call	sprintf_s

; 541  :     return _Str;

	lea	rdx, QWORD PTR _Str$[rbp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T4[rbp]
	or	eax, 1
	mov	DWORD PTR $T4[rbp], eax
	lea	rcx, QWORD PTR _Str$[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]

; 542  : }

	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@N@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+344]
	pop	rdi
	pop	rbp
	ret	0
?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@N@Z ENDP ; std::to_string
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\ios
;	COMDAT ?fixed@std@@YAAEAVios_base@1@AEAV21@@Z
_TEXT	SEGMENT
_Iosbase$ = 224
?fixed@std@@YAAEAVios_base@1@AEAV21@@Z PROC		; std::fixed, COMDAT

; 201  : inline ios_base& __CLRCALL_OR_CDECL fixed(ios_base& _Iosbase) { // set floatfield to fixed

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__845859A3_ios
	call	__CheckForDebuggerJustMyCode

; 202  :     _Iosbase.setf(ios_base::fixed, ios_base::floatfield);

	mov	r8d, 12288				; 00003000H
	mov	edx, 8192				; 00002000H
	mov	rcx, QWORD PTR _Iosbase$[rbp]
	call	QWORD PTR __imp_?setf@ios_base@std@@QEAAHHH@Z

; 203  :     return _Iosbase;

	mov	rax, QWORD PTR _Iosbase$[rbp]

; 204  : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?fixed@std@@YAAEAVios_base@1@AEAV21@@Z ENDP		; std::fixed
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\time.h
;	COMDAT time
_TEXT	SEGMENT
_Time$ = 224
time	PROC						; COMDAT

; 521  :         {

	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__93FD7E51_time@h
	call	__CheckForDebuggerJustMyCode

; 522  :             return _time64(_Time);

	mov	rcx, QWORD PTR _Time$[rbp]
	call	QWORD PTR __imp__time64

; 523  :         }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
time	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAPEAXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR __flags$[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	edx, 40					; 00000028H
	mov	rcx, QWORD PTR this$[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN2@scalar:
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAPEAXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT

; 1401 :     constexpr const _Ty1& _Get_first() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode

; 1402 :         return *this;

	mov	rax, QWORD PTR this$[rbp]

; 1403 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT

; 1397 :     constexpr _Ty1& _Get_first() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode

; 1398 :         return *this;

	mov	rax, QWORD PTR this$[rbp]

; 1399 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal, COMDAT

; 4654 :     _CONSTEXPR20_CONTAINER const _Alty& _Getal() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode

; 4655 :         return _Mypair._Get_first();

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first

; 4656 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal, COMDAT

; 4650 :     _CONSTEXPR20_CONTAINER _Alty& _Getal() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode

; 4651 :         return _Mypair._Get_first();

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first

; 4652 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z
_TEXT	SEGMENT
this$ = 224
_Right$ = 232
?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators, COMDAT

; 4646 :     _CONSTEXPR20_CONTAINER void _Swap_proxy_and_iterators(basic_string& _Right) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode

; 4647 :         _Mypair._Myval2._Swap_proxy_and_iterators(_Right._Mypair._Myval2);

	mov	rax, QWORD PTR _Right$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	rdx, rax
	call	?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators

; 4648 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
_TEXT	SEGMENT
_Ptr$1 = 8
_Al$2 = 40
$T3 = 260
this$ = 320
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate, COMDAT

; 4616 :     _CONSTEXPR20_CONTAINER void _Tidy_deallocate() noexcept { // initialize buffer, deallocating any storage

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode

; 4617 :         _Mypair._Myval2._Orphan_all();

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@Tidy_deall

; 4619 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR _Ptr$1[rbp], rax

; 4620 :             auto& _Al          = _Getal();

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	mov	QWORD PTR _Al$2[rbp], rax

; 4621 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);

	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	rcx, rax
	call	??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z ; std::_Destroy_in_place<char *>

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+32]
	inc	rax
	mov	r8, rax
	mov	rdx, QWORD PTR _Ptr$1[rbp]
	mov	rcx, QWORD PTR _Al$2[rbp]
	call	?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate
$LN2@Tidy_deall:

; 4623 :         }
; 4624 : 
; 4625 : #ifdef __cpp_lib_constexpr_string
; 4626 :         if (_STD is_constant_evaluated()) {
; 4627 :             _Mypair._Myval2._Bx._Ptr = nullptr;
; 4628 :             _Mypair._Myval2._Mysize  = 0;
; 4629 :             _Mypair._Myval2._Myres   = 0;
; 4630 :         } else
; 4631 : #endif // __cpp_lib_constexpr_string
; 4632 :         {
; 4633 :             _Mypair._Myval2._Mysize = 0;

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+24], 0

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+32], 15

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T3[rbp], 0
	mov	eax, 1
	imul	rax, rax, 0
	mov	rcx, QWORD PTR this$[rbp]
	lea	rax, QWORD PTR [rcx+rax+8]
	lea	rdx, QWORD PTR $T3[rbp]
	mov	rcx, rax
	call	?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign
	npad	1

; 4637 :         }
; 4638 :     }

	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
_TEXT	SEGMENT
_My_data$ = 8
$T1 = 228
this$ = 288
?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init, COMDAT

; 4594 :     _CONSTEXPR20_CONTAINER void _Tidy_init() noexcept { // initialize basic_string data members

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode

; 4595 :         auto& _My_data   = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR _My_data$[rbp], rax

; 4596 :         _My_data._Mysize = 0;

	mov	rax, QWORD PTR _My_data$[rbp]
	mov	QWORD PTR [rax+24], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

	mov	rax, QWORD PTR _My_data$[rbp]
	mov	QWORD PTR [rax+32], 15

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T1[rbp], 0
	mov	eax, 1
	imul	rax, rax, 0
	mov	rcx, QWORD PTR _My_data$[rbp]
	lea	rax, QWORD PTR [rcx+rax+8]
	lea	rdx, QWORD PTR $T1[rbp]
	mov	rcx, rax
	call	?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 4613 :         }
; 4614 :     }

	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
this$ = 224
_Requested$ = 232
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth, COMDAT

; 4500 :     _NODISCARD _CONSTEXPR20_CONTAINER size_type _Calculate_growth(const size_type _Requested) const noexcept {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode

; 4501 :         return _Calculate_growth(_Requested, _Mypair._Myval2._Myres, max_size());

	mov	rcx, QWORD PTR this$[rbp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	r8, rax
	mov	rax, QWORD PTR this$[rbp]
	mov	rdx, QWORD PTR [rax+32]
	mov	rcx, QWORD PTR _Requested$[rbp]
	call	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth

; 4502 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z
_TEXT	SEGMENT
_Masked$ = 8
$T4 = 232
__$ArrayPad$ = 248
_Requested$ = 288
_Old$ = 296
_Max$ = 304
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth, COMDAT

; 4487 :         const size_type _Requested, const size_type _Old, const size_type _Max) noexcept {

$LN5:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 18
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+328]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode

; 4488 :         const size_type _Masked = _Requested | _ALLOC_MASK;

	mov	rax, QWORD PTR _Requested$[rbp]
	or	rax, 15
	mov	QWORD PTR _Masked$[rbp], rax

; 4489 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

	mov	rax, QWORD PTR _Max$[rbp]
	cmp	QWORD PTR _Masked$[rbp], rax
	jbe	SHORT $LN2@Calculate_

; 4490 :             return _Max;

	mov	rax, QWORD PTR _Max$[rbp]
	jmp	SHORT $LN1@Calculate_
$LN2@Calculate_:

; 4491 :         }
; 4492 : 
; 4493 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

	xor	edx, edx
	mov	rax, QWORD PTR _Old$[rbp]
	mov	ecx, 2
	div	rcx
	mov	rcx, QWORD PTR _Max$[rbp]
	sub	rcx, rax
	mov	rax, rcx
	cmp	QWORD PTR _Old$[rbp], rax
	jbe	SHORT $LN3@Calculate_

; 4494 :             return _Max;

	mov	rax, QWORD PTR _Max$[rbp]
	jmp	SHORT $LN1@Calculate_
$LN3@Calculate_:

; 4495 :         }
; 4496 : 
; 4497 :         return (_STD max)(_Masked, _Old + _Old / 2);

	xor	edx, edx
	mov	rax, QWORD PTR _Old$[rbp]
	mov	ecx, 2
	div	rcx
	mov	rcx, QWORD PTR _Old$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR $T4[rbp], rax
	lea	rdx, QWORD PTR $T4[rbp]
	lea	rcx, QWORD PTR _Masked$[rbp]
	call	??$max@_K@std@@YAAEB_KAEB_K0@Z		; std::max<unsigned __int64>
	mov	rax, QWORD PTR [rax]
$LN1@Calculate_:

; 4498 :     }

	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 256
__$ReturnUdt$ = 264
?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$allocator@D@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator, COMDAT

; 4481 :     _NODISCARD _CONSTEXPR20_CONTAINER allocator_type get_allocator() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode

; 4482 :         return static_cast<allocator_type>(_Getal());

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]

; 4483 :     }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$allocator@D@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAHQEBD@Z
_TEXT	SEGMENT
tv65 = 192
this$ = 240
_Ptr$ = 248
?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAHQEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare, COMDAT

; 4434 :     _NODISCARD _CONSTEXPR20_CONTAINER int compare(_In_z_ const _Elem* const _Ptr) const noexcept /* strengthened */ {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode

; 4435 :         // compare [0, size()) with [_Ptr, <null>)
; 4436 :         return _Traits_compare<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize, _Ptr, _Traits::length(_Ptr));

	mov	rcx, QWORD PTR _Ptr$[rbp]
	call	?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
	mov	QWORD PTR tv65[rbp], rax
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	rcx, QWORD PTR tv65[rbp]
	mov	r9, rcx
	mov	r8, QWORD PTR _Ptr$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	rdx, QWORD PTR [rcx+24]
	mov	rcx, rax
	call	??$_Traits_compare@U?$char_traits@D@std@@@std@@YAHQEBD_K01@Z ; std::_Traits_compare<std::char_traits<char> >

; 4437 :     }

	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAHQEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z
_TEXT	SEGMENT
$T1 = 196
$T2 = 228
this$ = 288
__$ReturnUdt$ = 296
_Off$ = 304
_Count$ = 312
?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr, COMDAT

; 4365 :         const size_type _Off = 0, const size_type _Count = npos) const {

$LN5:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 312				; 00000138H
	lea	rbp, QWORD PTR [rsp+48]
	mov	DWORD PTR $T2[rbp], 0
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode

; 4366 :         // return [_Off, _Off + _Count) as new string
; 4367 :         return basic_string(*this, _Off, _Count, get_allocator());

	lea	rdx, QWORD PTR $T1[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR _Count$[rbp]
	mov	r8, QWORD PTR _Off$[rbp]
	mov	rdx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T2[rbp]
	or	eax, 1
	mov	DWORD PTR $T2[rbp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]

; 4368 :     }

	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
_Alloc_max$ = 8
_Storage_max$ = 40
$T4 = 264
$T5 = 296
$T6 = 328
__$ArrayPad$ = 344
this$ = 384
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT

; 3943 :     _NODISCARD _CONSTEXPR20_CONTAINER size_type max_size() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 392				; 00000188H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 42					; 0000002aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+424]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode

; 3944 :         const size_type _Alloc_max   = _Alty_traits::max_size(_Getal());

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	mov	rcx, rax
	call	?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ; std::_Default_allocator_traits<std::allocator<char> >::max_size
	mov	QWORD PTR _Alloc_max$[rbp], rax

; 3945 :         const size_type _Storage_max = // can always store small string

	mov	QWORD PTR $T4[rbp], 16
	lea	rdx, QWORD PTR $T4[rbp]
	lea	rcx, QWORD PTR _Alloc_max$[rbp]
	call	??$max@_K@std@@YAAEB_KAEB_K0@Z		; std::max<unsigned __int64>
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Storage_max$[rbp], rax

; 3946 :             (_STD max)(_Alloc_max, static_cast<size_type>(_BUF_SIZE));
; 3947 :         return (_STD min)(static_cast<size_type>((numeric_limits<difference_type>::max)()),

	mov	rax, QWORD PTR _Storage_max$[rbp]
	dec	rax
	mov	QWORD PTR $T5[rbp], rax
	call	?max@?$numeric_limits@_J@std@@SA_JXZ	; std::numeric_limits<__int64>::max
	mov	QWORD PTR $T6[rbp], rax
	lea	rdx, QWORD PTR $T5[rbp]
	lea	rcx, QWORD PTR $T6[rbp]
	call	??$min@_K@std@@YAAEB_KAEB_K0@Z		; std::min<unsigned __int64>
	mov	rax, QWORD PTR [rax]

; 3948 :             _Storage_max - 1 // -1 is for null terminator and/or npos
; 3949 :         );
; 3950 :     }

	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+360]
	pop	rdi
	pop	rbp
	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 224
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT

; 3939 :     _NODISCARD _CONSTEXPR20_CONTAINER size_type size() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode

; 3940 :         return _Mypair._Myval2._Mysize;

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+24]

; 3941 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 224
?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length, COMDAT

; 3935 :     _NODISCARD _CONSTEXPR20_CONTAINER size_type length() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode

; 3936 :         return _Mypair._Myval2._Mysize;

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+24]

; 3937 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
_TEXT	SEGMENT
this$ = 224
?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data, COMDAT

; 3925 :     _NODISCARD _CONSTEXPR20_CONTAINER _Ret_z_ const _Elem* data() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode

; 3926 :         return _Mypair._Myval2._Myptr();

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr

; 3927 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
_TEXT	SEGMENT
this$ = 224
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT

; 3921 :     _NODISCARD _CONSTEXPR20_CONTAINER _Ret_z_ const _Elem* c_str() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode

; 3922 :         return _Mypair._Myval2._Myptr();

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr

; 3923 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z
_TEXT	SEGMENT
this$ = 224
_Off$ = 232
??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[], COMDAT

; 3839 :     _NODISCARD _CONSTEXPR20_CONTAINER reference operator[](const size_type _Off) noexcept /* strengthened */ {

$LN12:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode
$LN4@operator:

; 3840 : #if _CONTAINER_DEBUG_LEVEL > 0
; 3841 :         _STL_VERIFY(_Off <= _Mypair._Myval2._Mysize, "string subscript out of range");

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+24]
	cmp	QWORD PTR _Off$[rbp], rax
	ja	SHORT $LN7@operator
	jmp	SHORT $LN9@operator
$LN7@operator:
	lea	rax, OFFSET FLAT:??_C@_0BO@LFGPDMIB@string?5subscript?5out?5of?5range@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 3841				; 00000f01H
	lea	rdx, OFFSET FLAT:??_C@_0GI@DEIBJNCC@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN11@operator
	int	3
	xor	eax, eax
$LN11@operator:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 3841				; 00000f01H
	lea	r8, OFFSET FLAT:??_C@_1NA@CHJCONEK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_1LO@NPPEKPAI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAb?$AAa?$AAs?$AAi?$AAc?$AA_?$AAs?$AAt?$AAr?$AAi@
	lea	rcx, OFFSET FLAT:??_C@_1EA@OADAPGGK@?$AA?$CC?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@operator
$LN9@operator:
	xor	eax, eax
	test	eax, eax
	jne	$LN4@operator

; 3842 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 3843 :         return _Mypair._Myval2._Myptr()[_Off];

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	rax, QWORD PTR _Off$[rbp]

; 3844 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?at@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z
_TEXT	SEGMENT
this$ = 224
_Off$ = 232
?at@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::at, COMDAT

; 3829 :     _NODISCARD _CONSTEXPR20_CONTAINER reference at(const size_type _Off) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode

; 3830 :         _Mypair._Myval2._Check_offset_exclusive(_Off);

	mov	rax, QWORD PTR this$[rbp]
	mov	rdx, QWORD PTR _Off$[rbp]
	mov	rcx, rax
	call	?_Check_offset_exclusive@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z ; std::_String_val<std::_Simple_types<char> >::_Check_offset_exclusive

; 3831 :         return _Mypair._Myval2._Myptr()[_Off];

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	rax, QWORD PTR _Off$[rbp]

; 3832 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?at@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::at
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z
_TEXT	SEGMENT
_Old_ptr$1 = 8
$T2 = 228
$T3 = 260
this$ = 320
_Count$ = 328
_Ch$ = 336
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT

; 3267 :     _CONSTEXPR20_CONTAINER basic_string& assign(_CRT_GUARDOVERFLOW const size_type _Count, const _Elem _Ch) {

$LN4:
	mov	BYTE PTR [rsp+24], r8b
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode

; 3268 :         // assign _Count * _Ch
; 3269 :         if (_Count <= _Mypair._Myval2._Myres) {

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+32]
	cmp	QWORD PTR _Count$[rbp], rax
	ja	SHORT $LN2@assign

; 3270 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	QWORD PTR _Old_ptr$1[rbp], rax

; 3271 :             _Mypair._Myval2._Mysize = _Count;

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _Count$[rbp]
	mov	QWORD PTR [rax+24], rcx

; 3272 :             _Traits::assign(_Old_ptr, _Count, _Ch);

	movzx	r8d, BYTE PTR _Ch$[rbp]
	mov	rdx, QWORD PTR _Count$[rbp]
	mov	rcx, QWORD PTR _Old_ptr$1[rbp]
	call	?assign@?$_Narrow_char_traits@DH@std@@SAPEADQEAD_KD@Z ; std::_Narrow_char_traits<char,int>::assign

; 3273 :             _Traits::assign(_Old_ptr[_Count], _Elem());

	mov	BYTE PTR $T2[rbp], 0
	mov	rax, QWORD PTR _Count$[rbp]
	mov	rcx, QWORD PTR _Old_ptr$1[rbp]
	add	rcx, rax
	mov	rax, rcx
	lea	rdx, QWORD PTR $T2[rbp]
	mov	rcx, rax
	call	?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 3274 :             return *this;

	mov	rax, QWORD PTR this$[rbp]
	jmp	SHORT $LN1@assign
$LN2@assign:

; 3275 :         }
; 3276 : 
; 3277 :         return _Reallocate_for(

	lea	rax, QWORD PTR $T3[rbp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 1
	rep stosb
	movzx	r9d, BYTE PTR _Ch$[rbp]
	movzx	r8d, BYTE PTR $T3[rbp]
	mov	rdx, QWORD PTR _Count$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	??$_Reallocate_for@V<lambda_138c3d7c38c85abb84c7fc7bfe5747b7>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_138c3d7c38c85abb84c7fc7bfe5747b7>@@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_138c3d7c38c85abb84c7fc7bfe5747b7>,char>
$LN1@assign:

; 3278 :             _Count,
; 3279 :             [](_Elem* const _New_ptr, const size_type _Count, const _Elem _Ch) {
; 3280 :                 _Traits::assign(_New_ptr, _Count, _Ch);
; 3281 :                 _Traits::assign(_New_ptr[_Count], _Elem());
; 3282 :             },
; 3283 :             _Ch);
; 3284 :     }

	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z
_TEXT	SEGMENT
this$ = 224
_Ptr$ = 232
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT

; 3263 :     _CONSTEXPR20_CONTAINER basic_string& assign(_In_z_ const _Elem* const _Ptr) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	mov	rcx, QWORD PTR _Ptr$[rbp]
	call	?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
	mov	rcx, rax
	call	??$_Convert_size@_K@std@@YA_K_K@Z	; std::_Convert_size<unsigned __int64>
	mov	r8, rax
	mov	rdx, QWORD PTR _Ptr$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 3265 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
_TEXT	SEGMENT
_Old_ptr$1 = 8
$T2 = 228
$T3 = 260
this$ = 320
_Ptr$ = 328
_Count$ = 336
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT

; 3244 :         _In_reads_(_Count) const _Elem* const _Ptr, _CRT_GUARDOVERFLOW const size_type _Count) {

$LN4:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode

; 3245 :         // assign [_Ptr, _Ptr + _Count)
; 3246 :         if (_Count <= _Mypair._Myval2._Myres) {

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+32]
	cmp	QWORD PTR _Count$[rbp], rax
	ja	SHORT $LN2@assign

; 3247 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	QWORD PTR _Old_ptr$1[rbp], rax

; 3248 :             _Mypair._Myval2._Mysize = _Count;

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _Count$[rbp]
	mov	QWORD PTR [rax+24], rcx

; 3249 :             _Traits::move(_Old_ptr, _Ptr, _Count);

	mov	r8, QWORD PTR _Count$[rbp]
	mov	rdx, QWORD PTR _Ptr$[rbp]
	mov	rcx, QWORD PTR _Old_ptr$1[rbp]
	call	?move@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Char_traits<char,int>::move

; 3250 :             _Traits::assign(_Old_ptr[_Count], _Elem());

	mov	BYTE PTR $T2[rbp], 0
	mov	rax, QWORD PTR _Count$[rbp]
	mov	rcx, QWORD PTR _Old_ptr$1[rbp]
	add	rcx, rax
	mov	rax, rcx
	lea	rdx, QWORD PTR $T2[rbp]
	mov	rcx, rax
	call	?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 3251 :             return *this;

	mov	rax, QWORD PTR this$[rbp]
	jmp	SHORT $LN1@assign
$LN2@assign:

; 3252 :         }
; 3253 : 
; 3254 :         return _Reallocate_for(

	lea	rax, QWORD PTR $T3[rbp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 1
	rep stosb
	mov	r9, QWORD PTR _Ptr$[rbp]
	movzx	r8d, BYTE PTR $T3[rbp]
	mov	rdx, QWORD PTR _Count$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
$LN1@assign:

; 3255 :             _Count,
; 3256 :             [](_Elem* const _New_ptr, const size_type _Count, const _Elem* const _Ptr) {
; 3257 :                 _Traits::copy(_New_ptr, _Ptr, _Count);
; 3258 :                 _Traits::assign(_New_ptr[_Count], _Elem());
; 3259 :             },
; 3260 :             _Ptr);
; 3261 :     }

	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K_K@Z
_TEXT	SEGMENT
this$ = 224
_Right$ = 232
_Roff$ = 240
_Count$ = 248
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT

; 3220 :         const basic_string& _Right, const size_type _Roff, size_type _Count = npos) {

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode

; 3221 :         // assign _Right [_Roff, _Roff + _Count)
; 3222 :         _Right._Mypair._Myval2._Check_offset(_Roff);

	mov	rax, QWORD PTR _Right$[rbp]
	mov	rdx, QWORD PTR _Roff$[rbp]
	mov	rcx, rax
	call	?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z ; std::_String_val<std::_Simple_types<char> >::_Check_offset

; 3223 :         _Count = _Right._Mypair._Myval2._Clamp_suffix_size(_Roff, _Count);

	mov	rax, QWORD PTR _Right$[rbp]
	mov	r8, QWORD PTR _Count$[rbp]
	mov	rdx, QWORD PTR _Roff$[rbp]
	mov	rcx, rax
	call	?_Clamp_suffix_size@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_K_K0@Z ; std::_String_val<std::_Simple_types<char> >::_Clamp_suffix_size
	mov	QWORD PTR _Count$[rbp], rax

; 3224 :         return assign(_Right._Mypair._Myval2._Myptr() + _Roff, _Count);

	mov	rax, QWORD PTR _Right$[rbp]
	mov	rcx, rax
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	rax, QWORD PTR _Roff$[rbp]
	mov	r8, QWORD PTR _Count$[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rbp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 3225 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z
_TEXT	SEGMENT
this$ = 224
_Ptr$ = 232
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT

; 3174 :     _CONSTEXPR20_CONTAINER basic_string& append(_In_z_ const _Elem* const _Ptr) { // append [_Ptr, <null>)

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode

; 3175 :         return append(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	mov	rcx, QWORD PTR _Ptr$[rbp]
	call	?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
	mov	rcx, rax
	call	??$_Convert_size@_K@std@@YA_K_K@Z	; std::_Convert_size<unsigned __int64>
	mov	r8, rax
	mov	rdx, QWORD PTR _Ptr$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 3176 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
_TEXT	SEGMENT
_Old_size$ = 8
_Old_ptr$1 = 40
$T2 = 260
$T3 = 292
this$ = 352
_Ptr$ = 360
_Count$ = 368
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT

; 3152 :         _In_reads_(_Count) const _Elem* const _Ptr, _CRT_GUARDOVERFLOW const size_type _Count) {

$LN4:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 376				; 00000178H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode

; 3153 :         // append [_Ptr, _Ptr + _Count)
; 3154 :         const size_type _Old_size = _Mypair._Myval2._Mysize;

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+24]
	mov	QWORD PTR _Old_size$[rbp], rax

; 3155 :         if (_Count <= _Mypair._Myval2._Myres - _Old_size) {

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _Old_size$[rbp]
	mov	rax, QWORD PTR [rax+32]
	sub	rax, rcx
	cmp	QWORD PTR _Count$[rbp], rax
	ja	$LN2@append

; 3156 :             _Mypair._Myval2._Mysize = _Old_size + _Count;

	mov	rax, QWORD PTR _Count$[rbp]
	mov	rcx, QWORD PTR _Old_size$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+24], rax

; 3157 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	QWORD PTR _Old_ptr$1[rbp], rax

; 3158 :             _Traits::move(_Old_ptr + _Old_size, _Ptr, _Count);

	mov	rax, QWORD PTR _Old_size$[rbp]
	mov	rcx, QWORD PTR _Old_ptr$1[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	r8, QWORD PTR _Count$[rbp]
	mov	rdx, QWORD PTR _Ptr$[rbp]
	mov	rcx, rax
	call	?move@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Char_traits<char,int>::move

; 3159 :             _Traits::assign(_Old_ptr[_Old_size + _Count], _Elem());

	mov	BYTE PTR $T2[rbp], 0
	mov	rax, QWORD PTR _Count$[rbp]
	mov	rcx, QWORD PTR _Old_size$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, QWORD PTR _Old_ptr$1[rbp]
	add	rcx, rax
	mov	rax, rcx
	lea	rdx, QWORD PTR $T2[rbp]
	mov	rcx, rax
	call	?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 3160 :             return *this;

	mov	rax, QWORD PTR this$[rbp]
	jmp	SHORT $LN1@append
$LN2@append:

; 3161 :         }
; 3162 : 
; 3163 :         return _Reallocate_grow_by(

	lea	rax, QWORD PTR $T3[rbp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 1
	rep stosb
	mov	rax, QWORD PTR _Count$[rbp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR _Ptr$[rbp]
	movzx	r8d, BYTE PTR $T3[rbp]
	mov	rdx, QWORD PTR _Count$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>
$LN1@append:

; 3164 :             _Count,
; 3165 :             [](_Elem* const _New_ptr, const _Elem* const _Old_ptr, const size_type _Old_size, const _Elem* const _Ptr,
; 3166 :                 const size_type _Count) {
; 3167 :                 _Traits::copy(_New_ptr, _Old_ptr, _Old_size);
; 3168 :                 _Traits::copy(_New_ptr + _Old_size, _Ptr, _Count);
; 3169 :                 _Traits::assign(_New_ptr[_Old_size + _Count], _Elem());
; 3170 :             },
; 3171 :             _Ptr, _Count);
; 3172 :     }

	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z
_TEXT	SEGMENT
this$ = 224
_Right$ = 232
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT

; 3123 :     _CONSTEXPR20_CONTAINER basic_string& append(const basic_string& _Right) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode

; 3124 :         return append(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

	mov	rax, QWORD PTR _Right$[rbp]
	mov	rcx, rax
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	rcx, QWORD PTR _Right$[rbp]
	mov	r8, QWORD PTR [rcx+24]
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rbp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 3125 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z
_TEXT	SEGMENT
$T1 = 196
this$ = 256
_Right$ = 264
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=, COMDAT

; 3076 :     _CONSTEXPR20_CONTAINER basic_string& operator=(const basic_string& _Right) {

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode

; 3077 :         if (this != _STD addressof(_Right)) {

	mov	rcx, QWORD PTR _Right$[rbp]
	call	??$addressof@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@@Z ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
	cmp	QWORD PTR this$[rbp], rax
	je	SHORT $LN2@operator

; 3078 :             _Copy_assign(_Right, _Choose_pocca<_Alty>{});

	lea	rax, QWORD PTR $T1[rbp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 1
	rep stosb
	movzx	r8d, BYTE PTR $T1[rbp]
	mov	rdx, QWORD PTR _Right$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Copy_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@U?$integral_constant@_N$0A@@2@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy_assign
$LN2@operator:

; 3079 :         }
; 3080 : 
; 3081 :         return *this;

	mov	rax, QWORD PTR this$[rbp]

; 3082 :     }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?_Copy_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@U?$integral_constant@_N$0A@@2@@Z
_TEXT	SEGMENT
tv65 = 192
this$ = 240
_Right$ = 248
__formal$ = 256
?_Copy_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@U?$integral_constant@_N$0A@@2@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy_assign, COMDAT

; 3033 :     _CONSTEXPR20_CONTAINER void _Copy_assign(const basic_string& _Right, false_type) {

$LN3:
	mov	BYTE PTR [rsp+24], r8b
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode

; 3034 :         _Pocca(_Getal(), _Right._Getal());

	mov	rcx, QWORD PTR _Right$[rbp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	mov	QWORD PTR tv65[rbp], rax
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	mov	rcx, QWORD PTR tv65[rbp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$_Pocca@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@AEBV10@@Z ; std::_Pocca<std::allocator<char> >

; 3035 :         assign(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

	mov	rax, QWORD PTR _Right$[rbp]
	mov	rcx, rax
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	rcx, QWORD PTR _Right$[rbp]
	mov	r8, QWORD PTR [rcx+24]
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rbp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 3036 :     }

	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?_Copy_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@U?$integral_constant@_N$0A@@2@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy_assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 8
$S13$ = 36
_To_delete$ = 72
__$ArrayPad$ = 280
this$ = 320
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 3002 :     _CONSTEXPR20_CONTAINER ~basic_string() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 26
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+360]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode

; 3003 :         _Tidy_deallocate();

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate

; 3004 : #if _ITERATOR_DEBUG_LEVEL != 0
; 3005 :         auto&& _Alproxy          = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $S13$[rbp]
	call	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
	lea	rax, QWORD PTR $S13$[rbp]
	mov	QWORD PTR _Alproxy$[rbp], rax

; 3006 :         const auto _To_delete    = _Mypair._Myval2._Myproxy;

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _To_delete$[rbp], rax

; 3007 :         _Mypair._Myval2._Myproxy = nullptr;

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax], 0

; 3008 :         _Delete_plain_internal(_Alproxy, _To_delete);

	mov	rdx, QWORD PTR _To_delete$[rbp]
	mov	rcx, QWORD PTR _Alproxy$[rbp]
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >

; 3009 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 3010 :     }

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z
_TEXT	SEGMENT
_Right_data$ = 8
_Right_size$ = 40
_Right_ptr$ = 72
_My_data$ = 104
_Stay_small$ = 132
_Al$ = 168
_New_capacity$ = 200
_New_array$ = 232
$T4 = 456
$T5 = 488
tv72 = 500
tv134 = 504
__$ArrayPad$ = 512
this$ = 560
_Right$ = 568
?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct_lv_contents, COMDAT

; 2915 :     _CONSTEXPR20_CONTAINER void _Construct_lv_contents(const basic_string& _Right) {

$LN6:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 568				; 00000238H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 86					; 00000056H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+600]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode

; 2916 :         // assign by copying data stored in _Right
; 2917 :         // pre: this != &_Right
; 2918 :         // pre: *this owns no memory, iterators orphaned (note:
; 2919 :         // _Buf/_Ptr/_Mysize/_Myres may be garbage init)
; 2920 :         auto& _Right_data             = _Right._Mypair._Myval2;

	mov	rax, QWORD PTR _Right$[rbp]
	mov	QWORD PTR _Right_data$[rbp], rax

; 2921 :         const size_type _Right_size   = _Right_data._Mysize;

	mov	rax, QWORD PTR _Right_data$[rbp]
	mov	rax, QWORD PTR [rax+24]
	mov	QWORD PTR _Right_size$[rbp], rax

; 2922 :         const _Elem* const _Right_ptr = _Right_data._Myptr();

	mov	rcx, QWORD PTR _Right_data$[rbp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	QWORD PTR _Right_ptr$[rbp], rax

; 2923 :         auto& _My_data                = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR _My_data$[rbp], rax

; 2924 : 
; 2925 : #ifdef __cpp_lib_constexpr_string
; 2926 :         const bool _Stay_small = _Right_size < _BUF_SIZE && !_STD is_constant_evaluated();
; 2927 : #else // ^^^ __cpp_lib_constexpr_string / !__cpp_lib_constexpr_string vvv
; 2928 :         const bool _Stay_small = _Right_size < _BUF_SIZE;

	cmp	QWORD PTR _Right_size$[rbp], 16
	jae	SHORT $LN4@Construct_
	mov	BYTE PTR tv72[rbp], 1
	jmp	SHORT $LN5@Construct_
$LN4@Construct_:
	mov	BYTE PTR tv72[rbp], 0
$LN5@Construct_:
	movzx	eax, BYTE PTR tv72[rbp]
	mov	BYTE PTR _Stay_small$[rbp], al

; 2929 : #endif // __cpp_lib_constexpr_string
; 2930 : 
; 2931 :         // NOTE: even if _Right is in large mode, we only go into large mode ourselves if the actual size of _Right
; 2932 :         // requires it
; 2933 :         if (_Stay_small) { // stay small, don't allocate

	movzx	eax, BYTE PTR _Stay_small$[rbp]
	test	eax, eax
	je	SHORT $LN2@Construct_

; 2934 :             _Traits::copy(_My_data._Bx._Buf, _Right_ptr, _BUF_SIZE);

	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 8
	mov	r8d, 16
	mov	rdx, QWORD PTR _Right_ptr$[rbp]
	mov	rcx, rax
	call	?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Char_traits<char,int>::copy

; 2935 :             _My_data._Mysize = _Right_size;

	mov	rax, QWORD PTR _My_data$[rbp]
	mov	rcx, QWORD PTR _Right_size$[rbp]
	mov	QWORD PTR [rax+24], rcx

; 2936 :             _My_data._Myres  = _BUF_SIZE - 1;

	mov	rax, QWORD PTR _My_data$[rbp]
	mov	QWORD PTR [rax+32], 15

; 2937 :             return;

	jmp	$LN1@Construct_
$LN2@Construct_:

; 2938 :         }
; 2939 : 
; 2940 :         auto& _Al                     = _Getal();

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	mov	QWORD PTR _Al$[rbp], rax

; 2941 :         const size_type _New_capacity = (_STD min)(_Right_size | _ALLOC_MASK, max_size());

	mov	rcx, QWORD PTR this$[rbp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	QWORD PTR $T4[rbp], rax
	mov	rax, QWORD PTR _Right_size$[rbp]
	or	rax, 15
	mov	QWORD PTR $T5[rbp], rax
	lea	rdx, QWORD PTR $T4[rbp]
	lea	rcx, QWORD PTR $T5[rbp]
	call	??$min@_K@std@@YAAEB_KAEB_K0@Z		; std::min<unsigned __int64>
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _New_capacity$[rbp], rax

; 2942 :         const pointer _New_array      = _Al.allocate(_New_capacity + 1); // throws

	mov	rax, QWORD PTR _New_capacity$[rbp]
	inc	rax
	mov	rdx, rax
	mov	rcx, QWORD PTR _Al$[rbp]
	call	?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate
	mov	QWORD PTR _New_array$[rbp], rax

; 2943 :         _Construct_in_place(_My_data._Bx._Ptr, _New_array);

	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 8
	lea	rdx, QWORD PTR _New_array$[rbp]
	mov	rcx, rax
	call	??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>

; 2944 : 
; 2945 : #ifdef __cpp_lib_constexpr_string
; 2946 :         if (_STD is_constant_evaluated()) { // Begin the lifetimes of the objects before copying to avoid UB
; 2947 :             _Traits::assign(_Unfancy(_New_array), _New_capacity + 1, _Elem());
; 2948 :         }
; 2949 : #endif // __cpp_lib_constexpr_string
; 2950 :         _Traits::copy(_Unfancy(_New_array), _Right_ptr, _Right_size + 1);

	mov	rax, QWORD PTR _Right_size$[rbp]
	inc	rax
	mov	QWORD PTR tv134[rbp], rax
	mov	rcx, QWORD PTR _New_array$[rbp]
	call	??$_Unfancy@D@std@@YAPEADPEAD@Z		; std::_Unfancy<char>
	mov	rcx, QWORD PTR tv134[rbp]
	mov	r8, rcx
	mov	rdx, QWORD PTR _Right_ptr$[rbp]
	mov	rcx, rax
	call	?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Char_traits<char,int>::copy

; 2951 :         _My_data._Mysize = _Right_size;

	mov	rax, QWORD PTR _My_data$[rbp]
	mov	rcx, QWORD PTR _Right_size$[rbp]
	mov	QWORD PTR [rax+24], rcx

; 2952 :         _My_data._Myres  = _New_capacity;

	mov	rax, QWORD PTR _My_data$[rbp]
	mov	rcx, QWORD PTR _New_capacity$[rbp]
	mov	QWORD PTR [rax+32], rcx
$LN1@Construct_:

; 2953 :     }

	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+536]
	pop	rdi
	pop	rbp
	ret	0
?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct_lv_contents
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z
_TEXT	SEGMENT
_My_data$ = 8
_Right_data$ = 40
tv136 = 248
this$ = 288
_Right$ = 296
?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents, COMDAT

; 2872 :     _CONSTEXPR20_CONTAINER void _Take_contents(basic_string& _Right) noexcept {

$LN7:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode

; 2873 :         // assign by stealing _Right's buffer
; 2874 :         // pre: this != &_Right
; 2875 :         // pre: allocator propagation (POCMA) from _Right, if necessary, is complete
; 2876 :         // pre: *this owns no memory, iterators orphaned
; 2877 :         // (note: _Buf/_Ptr/_Mysize/_Myres may be garbage init)
; 2878 :         auto& _My_data    = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR _My_data$[rbp], rax

; 2879 :         auto& _Right_data = _Right._Mypair._Myval2;

	mov	rax, QWORD PTR _Right$[rbp]
	mov	QWORD PTR _Right_data$[rbp], rax

; 2880 : 
; 2881 :         if constexpr (_Can_memcpy_val) {
; 2882 : #ifdef __cpp_lib_constexpr_string
; 2883 :             if (!_STD is_constant_evaluated())
; 2884 : #endif // __cpp_lib_constexpr_string
; 2885 :             {
; 2886 : #if _ITERATOR_DEBUG_LEVEL != 0
; 2887 :                 if (_Right_data._Large_string_engaged()) {

	mov	rcx, QWORD PTR _Right_data$[rbp]
	call	?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@Take_conte

; 2888 :                     // take ownership of _Right's iterators along with its buffer
; 2889 :                     _Swap_proxy_and_iterators(_Right);

	mov	rdx, QWORD PTR _Right$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators

; 2890 :                 } else {

	jmp	SHORT $LN3@Take_conte
$LN2@Take_conte:

; 2891 :                     _Right_data._Orphan_all();

	mov	rcx, QWORD PTR _Right_data$[rbp]
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
$LN3@Take_conte:

; 2892 :                 }
; 2893 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 2894 : 
; 2895 :                 _Memcpy_val_from(_Right);

	mov	rdx, QWORD PTR _Right$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Memcpy_val_from

; 2896 :                 _Right._Tidy_init();

	mov	rcx, QWORD PTR _Right$[rbp]
	call	?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init

; 2897 :                 return;

	jmp	$LN1@Take_conte

; 2898 :             }
; 2899 :         }
; 2900 : 
; 2901 :         if (_Right_data._Large_string_engaged()) { // steal buffer

	mov	rcx, QWORD PTR _Right_data$[rbp]
	call	?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@Take_conte

; 2902 :             _Construct_in_place(_My_data._Bx._Ptr, _Right_data._Bx._Ptr);

	mov	rax, QWORD PTR _Right_data$[rbp]
	add	rax, 8
	mov	rcx, QWORD PTR _My_data$[rbp]
	add	rcx, 8
	mov	rdx, rax
	call	??$_Construct_in_place@PEADAEAPEAD@std@@YAXAEAPEAD0@Z ; std::_Construct_in_place<char *,char * &>

; 2903 :             _Right_data._Bx._Ptr = nullptr;

	mov	rax, QWORD PTR _Right_data$[rbp]
	mov	QWORD PTR [rax+8], 0

; 2904 :             _Swap_proxy_and_iterators(_Right);

	mov	rdx, QWORD PTR _Right$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators

; 2905 :         } else { // copy small string buffer

	jmp	SHORT $LN5@Take_conte
$LN4@Take_conte:

; 2906 :             _Traits::copy(_My_data._Bx._Buf, _Right_data._Bx._Buf, _Right_data._Mysize + 1);

	mov	rax, QWORD PTR _Right_data$[rbp]
	mov	rax, QWORD PTR [rax+24]
	inc	rax
	mov	rcx, QWORD PTR _Right_data$[rbp]
	add	rcx, 8
	mov	rdx, QWORD PTR _My_data$[rbp]
	add	rdx, 8
	mov	QWORD PTR tv136[rbp], rdx
	mov	r8, rax
	mov	rdx, rcx
	mov	rax, QWORD PTR tv136[rbp]
	mov	rcx, rax
	call	?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Char_traits<char,int>::copy

; 2907 :             _Right_data._Orphan_all();

	mov	rcx, QWORD PTR _Right_data$[rbp]
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
$LN5@Take_conte:

; 2908 :         }
; 2909 : 
; 2910 :         _My_data._Mysize = _Right_data._Mysize;

	mov	rax, QWORD PTR _My_data$[rbp]
	mov	rcx, QWORD PTR _Right_data$[rbp]
	mov	rcx, QWORD PTR [rcx+24]
	mov	QWORD PTR [rax+24], rcx

; 2911 :         _My_data._Myres  = _Right_data._Myres;

	mov	rax, QWORD PTR _My_data$[rbp]
	mov	rcx, QWORD PTR _Right_data$[rbp]
	mov	rcx, QWORD PTR [rcx+32]
	mov	QWORD PTR [rax+32], rcx

; 2912 :         _Right._Tidy_init();

	mov	rcx, QWORD PTR _Right$[rbp]
	call	?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
	npad	1
$LN1@Take_conte:

; 2913 :     }

	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z
_TEXT	SEGMENT
_My_data_mem$ = 8
_Right_data_mem$ = 40
this$ = 288
_Right$ = 296
?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Memcpy_val_from, COMDAT

; 2863 :     void _Memcpy_val_from(const basic_string& _Right) noexcept {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode

; 2864 :         _STL_INTERNAL_CHECK(_Can_memcpy_val); // TRANSITION, if constexpr
; 2865 :         const auto _My_data_mem =

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > >
	add	rax, 8
	mov	QWORD PTR _My_data_mem$[rbp], rax

; 2866 :             reinterpret_cast<unsigned char*>(_STD addressof(_Mypair._Myval2)) + _Memcpy_val_offset;
; 2867 :         const auto _Right_data_mem =

	mov	rax, QWORD PTR _Right$[rbp]
	mov	rcx, rax
	call	??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > const >
	add	rax, 8
	mov	QWORD PTR _Right_data_mem$[rbp], rax

; 2868 :             reinterpret_cast<const unsigned char*>(_STD addressof(_Right._Mypair._Myval2)) + _Memcpy_val_offset;
; 2869 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	mov	r8d, 32					; 00000020H
	mov	rdx, QWORD PTR _Right_data_mem$[rbp]
	mov	rcx, QWORD PTR _My_data_mem$[rbp]
	call	memcpy

; 2870 :     }

	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Memcpy_val_from
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z
_TEXT	SEGMENT
$T1 = 196
this$ = 256
_Right$ = 264
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=, COMDAT

; 2849 :         noexcept(_Move_assign(_Right, _Choose_pocma<_Alty>{}))) {

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode

; 2850 :         if (this != _STD addressof(_Right)) {

	mov	rcx, QWORD PTR _Right$[rbp]
	call	??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	cmp	QWORD PTR this$[rbp], rax
	je	SHORT $LN2@operator

; 2851 :             _Move_assign(_Right, _Choose_pocma<_Alty>{});

	lea	rax, QWORD PTR $T1[rbp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 1
	rep stosb
	movzx	r8d, BYTE PTR $T1[rbp]
	mov	rdx, QWORD PTR _Right$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Move_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Move_assign
$LN2@operator:

; 2852 :         }
; 2853 : 
; 2854 :         return *this;

	mov	rax, QWORD PTR this$[rbp]

; 2855 :     }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?_Move_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z
_TEXT	SEGMENT
tv66 = 192
this$ = 240
_Right$ = 248
__formal$ = 256
?_Move_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Move_assign, COMDAT

; 2775 :     _CONSTEXPR20_CONTAINER void _Move_assign(basic_string& _Right, _Equal_allocators) noexcept {

$LN3:
	mov	BYTE PTR [rsp+24], r8b
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode

; 2776 :         _Tidy_deallocate();

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate

; 2777 :         _Pocma(_Getal(), _Right._Getal());

	mov	rcx, QWORD PTR _Right$[rbp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	mov	QWORD PTR tv66[rbp], rax
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	mov	rcx, QWORD PTR tv66[rbp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$_Pocma@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@0@Z ; std::_Pocma<std::allocator<char> >

; 2778 :         _Take_contents(_Right);

	mov	rdx, QWORD PTR _Right$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents

; 2779 :     }

	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?_Move_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Move_assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEAV01@1@Z
_TEXT	SEGMENT
_My_data$ = 8
_Left_data$ = 40
_Right_data$ = 72
_Left_size$ = 104
_Right_size$ = 136
_Left_capacity$ = 168
_Right_capacity$ = 200
_New_size$ = 232
_Fits_in_left$ = 260
_Ptr$6 = 296
_Fits_in_right$ = 324
_Ptr$7 = 360
_Max$ = 392
_New_capacity$ = 424
_Alproxy$ = 456
$S20$ = 484
_Proxy$ = 520
_Fancyptr$ = 568
_Ptr$ = 600
$T8 = 1012
$T9 = 1044
$T10 = 1076
tv157 = 1092
tv128 = 1092
tv245 = 1096
tv228 = 1096
tv160 = 1096
tv148 = 1096
__$ArrayPad$ = 1104
this$ = 1152
__formal$ = 1160
_Left$ = 1168
_Right$ = 1176
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEAV01@1@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2672 :         : _Mypair(_One_then_variadic_args_t{}, _Left._Getal()) {

$LN13:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 1160				; 00000488H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 186				; 000000baH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+1192]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode
	mov	rcx, QWORD PTR _Left$[rbp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	mov	rcx, QWORD PTR this$[rbp]
	mov	r8, rax
	movzx	edx, BYTE PTR $T8[rbp]
	call	??$?0AEAV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEAV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> &>
	npad	1

; 2673 :         auto& _My_data    = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR _My_data$[rbp], rax

; 2674 :         auto& _Left_data  = _Left._Mypair._Myval2;

	mov	rax, QWORD PTR _Left$[rbp]
	mov	QWORD PTR _Left_data$[rbp], rax

; 2675 :         auto& _Right_data = _Right._Mypair._Myval2;

	mov	rax, QWORD PTR _Right$[rbp]
	mov	QWORD PTR _Right_data$[rbp], rax

; 2676 :         _Left_data._Orphan_all();

	mov	rcx, QWORD PTR _Left_data$[rbp]
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 2677 :         _Right_data._Orphan_all();

	mov	rcx, QWORD PTR _Right_data$[rbp]
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 2678 :         const auto _Left_size  = _Left_data._Mysize;

	mov	rax, QWORD PTR _Left_data$[rbp]
	mov	rax, QWORD PTR [rax+24]
	mov	QWORD PTR _Left_size$[rbp], rax

; 2679 :         const auto _Right_size = _Right_data._Mysize;

	mov	rax, QWORD PTR _Right_data$[rbp]
	mov	rax, QWORD PTR [rax+24]
	mov	QWORD PTR _Right_size$[rbp], rax

; 2680 : 
; 2681 :         const auto _Left_capacity  = _Left_data._Myres;

	mov	rax, QWORD PTR _Left_data$[rbp]
	mov	rax, QWORD PTR [rax+32]
	mov	QWORD PTR _Left_capacity$[rbp], rax

; 2682 :         const auto _Right_capacity = _Right_data._Myres;

	mov	rax, QWORD PTR _Right_data$[rbp]
	mov	rax, QWORD PTR [rax+32]
	mov	QWORD PTR _Right_capacity$[rbp], rax

; 2683 :         // overflow is OK due to max_size() checks:
; 2684 :         const auto _New_size     = static_cast<size_type>(_Left_size + _Right_size);

	mov	rax, QWORD PTR _Right_size$[rbp]
	mov	rcx, QWORD PTR _Left_size$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _New_size$[rbp], rax

; 2685 :         const bool _Fits_in_left = _Right_size <= _Left_capacity - _Left_size;

	mov	rax, QWORD PTR _Left_size$[rbp]
	mov	rcx, QWORD PTR _Left_capacity$[rbp]
	sub	rcx, rax
	mov	rax, rcx
	cmp	QWORD PTR _Right_size$[rbp], rax
	ja	SHORT $LN6@basic_stri
	mov	BYTE PTR tv128[rbp], 1
	jmp	SHORT $LN7@basic_stri
$LN6@basic_stri:
	mov	BYTE PTR tv128[rbp], 0
$LN7@basic_stri:
	movzx	eax, BYTE PTR tv128[rbp]
	mov	BYTE PTR _Fits_in_left$[rbp], al

; 2686 :         if (_Fits_in_left && _Right_capacity <= _Left_capacity) {

	movzx	eax, BYTE PTR _Fits_in_left$[rbp]
	test	eax, eax
	je	$LN2@basic_stri
	mov	rax, QWORD PTR _Left_capacity$[rbp]
	cmp	QWORD PTR _Right_capacity$[rbp], rax
	ja	$LN2@basic_stri

; 2687 :             // take _Left's buffer, max_size() is OK because _Fits_in_left
; 2688 :             _My_data._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal())); // throws, hereafter nothrow in this block

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $T9[rbp]
	call	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
	mov	rdx, rax
	mov	rcx, QWORD PTR _My_data$[rbp]
	call	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >

; 2689 :             _Take_contents(_Left);

	mov	rdx, QWORD PTR _Left$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents

; 2690 :             const auto _Ptr = _My_data._Myptr();

	mov	rcx, QWORD PTR _My_data$[rbp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	QWORD PTR _Ptr$6[rbp], rax

; 2691 :             _Traits::copy(_Ptr + _Left_size, _Right_data._Myptr(), _Right_size + 1);

	mov	rax, QWORD PTR _Right_size$[rbp]
	inc	rax
	mov	QWORD PTR tv148[rbp], rax
	mov	rcx, QWORD PTR _Right_data$[rbp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	rcx, QWORD PTR _Left_size$[rbp]
	mov	rdx, QWORD PTR _Ptr$6[rbp]
	add	rdx, rcx
	mov	rcx, rdx
	mov	rdx, QWORD PTR tv148[rbp]
	mov	r8, rdx
	mov	rdx, rax
	call	?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Char_traits<char,int>::copy

; 2692 :             _My_data._Mysize = _New_size;

	mov	rax, QWORD PTR _My_data$[rbp]
	mov	rcx, QWORD PTR _New_size$[rbp]
	mov	QWORD PTR [rax+24], rcx

; 2693 :             return;

	jmp	$LN1@basic_stri
$LN2@basic_stri:

; 2694 :         }
; 2695 : 
; 2696 :         const bool _Fits_in_right = _Left_size <= _Right_capacity - _Right_size;

	mov	rax, QWORD PTR _Right_size$[rbp]
	mov	rcx, QWORD PTR _Right_capacity$[rbp]
	sub	rcx, rax
	mov	rax, rcx
	cmp	QWORD PTR _Left_size$[rbp], rax
	ja	SHORT $LN8@basic_stri
	mov	BYTE PTR tv157[rbp], 1
	jmp	SHORT $LN9@basic_stri
$LN8@basic_stri:
	mov	BYTE PTR tv157[rbp], 0
$LN9@basic_stri:
	movzx	eax, BYTE PTR tv157[rbp]
	mov	BYTE PTR _Fits_in_right$[rbp], al

; 2697 :         if (_Allocators_equal(_Getal(), _Right._Getal()) && _Fits_in_right) {

	mov	rcx, QWORD PTR _Right$[rbp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	mov	QWORD PTR tv160[rbp], rax
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	mov	rcx, QWORD PTR tv160[rbp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$_Allocators_equal@V?$allocator@D@std@@@std@@YA_NAEBV?$allocator@D@0@0@Z ; std::_Allocators_equal<std::allocator<char> >
	movzx	eax, al
	test	eax, eax
	je	$LN3@basic_stri
	movzx	eax, BYTE PTR _Fits_in_right$[rbp]
	test	eax, eax
	je	$LN3@basic_stri

; 2698 :             // take _Right's buffer, max_size() is OK because _Fits_in_right
; 2699 :             // At this point, we have tested:
; 2700 :             // !(_Fits_in_left && _Right_capacity <= _Left_capacity) && _Fits_in_right
; 2701 :             // therefore: (by De Morgan's Laws)
; 2702 :             // (!_Fits_in_left || _Right_capacity > _Left_capacity) && _Fits_in_right
; 2703 :             // therefore: (by the distributive property)
; 2704 :             // (!_Fits_in_left && _Fits_in_right)  // implying _Right has more capacity
; 2705 :             //     || (_Right_capacity > _Left_capacity && _Fits_in_right)  // tests that _Right has more capacity
; 2706 :             // therefore: _Right must have more than the minimum capacity, so it must be _Large_string_engaged()
; 2707 :             _STL_INTERNAL_CHECK(_Right_data._Large_string_engaged());
; 2708 :             _My_data._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal())); // throws, hereafter nothrow in this block

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $T10[rbp]
	call	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
	mov	rdx, rax
	mov	rcx, QWORD PTR _My_data$[rbp]
	call	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >

; 2709 :             _Take_contents(_Right);

	mov	rdx, QWORD PTR _Right$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents

; 2710 :             const auto _Ptr = _Unfancy(_My_data._Bx._Ptr);

	mov	rax, QWORD PTR _My_data$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	??$_Unfancy@D@std@@YAPEADPEAD@Z		; std::_Unfancy<char>
	mov	QWORD PTR _Ptr$7[rbp], rax

; 2711 :             _Traits::move(_Ptr + _Left_size, _Ptr, _Right_size + 1);

	mov	rax, QWORD PTR _Right_size$[rbp]
	inc	rax
	mov	rcx, QWORD PTR _Left_size$[rbp]
	mov	rdx, QWORD PTR _Ptr$7[rbp]
	add	rdx, rcx
	mov	rcx, rdx
	mov	r8, rax
	mov	rdx, QWORD PTR _Ptr$7[rbp]
	call	?move@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Char_traits<char,int>::move

; 2712 :             _Traits::copy(_Ptr, _Left_data._Myptr(), _Left_size);

	mov	rcx, QWORD PTR _Left_data$[rbp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	r8, QWORD PTR _Left_size$[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR _Ptr$7[rbp]
	call	?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Char_traits<char,int>::copy

; 2713 :             _My_data._Mysize = _New_size;

	mov	rax, QWORD PTR _My_data$[rbp]
	mov	rcx, QWORD PTR _New_size$[rbp]
	mov	QWORD PTR [rax+24], rcx

; 2714 :             return;

	jmp	$LN1@basic_stri
$LN3@basic_stri:

; 2715 :         }
; 2716 : 
; 2717 :         // can't use either buffer, reallocate
; 2718 :         const auto _Max = max_size();

	mov	rcx, QWORD PTR this$[rbp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	QWORD PTR _Max$[rbp], rax

; 2719 :         if (_Max - _Left_size < _Right_size) { // check if max_size() is OK

	mov	rax, QWORD PTR _Left_size$[rbp]
	mov	rcx, QWORD PTR _Max$[rbp]
	sub	rcx, rax
	mov	rax, rcx
	cmp	rax, QWORD PTR _Right_size$[rbp]
	jae	SHORT $LN4@basic_stri

; 2720 :             _Xlen_string();

	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
$LN4@basic_stri:

; 2721 :         }
; 2722 : 
; 2723 :         const auto _New_capacity = _Calculate_growth(_New_size, _BUF_SIZE - 1, _Max);

	mov	r8, QWORD PTR _Max$[rbp]
	mov	edx, 15
	mov	rcx, QWORD PTR _New_size$[rbp]
	call	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
	mov	QWORD PTR _New_capacity$[rbp], rax

; 2724 :         auto&& _Alproxy          = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $S20$[rbp]
	call	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
	lea	rax, QWORD PTR $S20$[rbp]
	mov	QWORD PTR _Alproxy$[rbp], rax

; 2725 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data); // throws

	mov	r8, QWORD PTR _My_data$[rbp]
	mov	rdx, QWORD PTR _Alproxy$[rbp]
	lea	rcx, QWORD PTR _Proxy$[rbp]
	call	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	npad	1

; 2726 :         const pointer _Fancyptr = _Getal().allocate(_New_capacity + 1); // throws

	mov	rax, QWORD PTR _New_capacity$[rbp]
	add	rax, 1
	mov	rcx, -1
	cmovb	rax, rcx
	mov	QWORD PTR tv228[rbp], rax
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	mov	rcx, QWORD PTR tv228[rbp]
	mov	rdx, rcx
	mov	rcx, rax
	call	?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate
	mov	QWORD PTR _Fancyptr$[rbp], rax

; 2727 :         // nothrow hereafter
; 2728 : #ifdef __cpp_lib_constexpr_string
; 2729 :         if (_STD is_constant_evaluated()) { // Begin the lifetimes of the objects before copying to avoid UB
; 2730 :             _Traits::assign(_Unfancy(_Fancyptr), _New_capacity + 1, _Elem());
; 2731 :         }
; 2732 : #endif // __cpp_lib_constexpr_string
; 2733 :         _Construct_in_place(_My_data._Bx._Ptr, _Fancyptr);

	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 8
	lea	rdx, QWORD PTR _Fancyptr$[rbp]
	mov	rcx, rax
	call	??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>

; 2734 :         _My_data._Mysize = _New_size;

	mov	rax, QWORD PTR _My_data$[rbp]
	mov	rcx, QWORD PTR _New_size$[rbp]
	mov	QWORD PTR [rax+24], rcx

; 2735 :         _My_data._Myres  = _New_capacity;

	mov	rax, QWORD PTR _My_data$[rbp]
	mov	rcx, QWORD PTR _New_capacity$[rbp]
	mov	QWORD PTR [rax+32], rcx

; 2736 :         const auto _Ptr  = _Unfancy(_Fancyptr);

	mov	rcx, QWORD PTR _Fancyptr$[rbp]
	call	??$_Unfancy@D@std@@YAPEADPEAD@Z		; std::_Unfancy<char>
	mov	QWORD PTR _Ptr$[rbp], rax

; 2737 :         _Traits::copy(_Ptr, _Left_data._Myptr(), _Left_size);

	mov	rcx, QWORD PTR _Left_data$[rbp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	r8, QWORD PTR _Left_size$[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR _Ptr$[rbp]
	call	?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Char_traits<char,int>::copy

; 2738 :         _Traits::copy(_Ptr + _Left_size, _Right_data._Myptr(), _Right_size + 1);

	mov	rax, QWORD PTR _Right_size$[rbp]
	inc	rax
	mov	QWORD PTR tv245[rbp], rax
	mov	rcx, QWORD PTR _Right_data$[rbp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	rcx, QWORD PTR _Left_size$[rbp]
	mov	rdx, QWORD PTR _Ptr$[rbp]
	add	rdx, rcx
	mov	rcx, rdx
	mov	rdx, QWORD PTR tv245[rbp]
	mov	r8, rdx
	mov	rdx, rax
	call	?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Char_traits<char,int>::copy

; 2739 :         _Proxy._Release();

	lea	rcx, QWORD PTR _Proxy$[rbp]
	call	?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
	npad	1

; 2740 :     }

	lea	rcx, QWORD PTR _Proxy$[rbp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	npad	1
$LN1@basic_stri:
	mov	rax, QWORD PTR this$[rbp]
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEAV01@1@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+1128]
	pop	rdi
	pop	rbp
	ret	0
$LN12@basic_stri:
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEAV01@1@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_My_data$ = 8
_Left_data$ = 40
_Right_data$ = 72
_Left_size$ = 104
_Right_size$ = 136
_Left_capacity$ = 168
_Right_capacity$ = 200
_New_size$ = 232
_Fits_in_left$ = 260
_Ptr$6 = 296
_Fits_in_right$ = 324
_Ptr$7 = 360
_Max$ = 392
_New_capacity$ = 424
_Alproxy$ = 456
$S20$ = 484
_Proxy$ = 520
_Fancyptr$ = 568
_Ptr$ = 600
$T8 = 1012
$T9 = 1044
$T10 = 1076
tv157 = 1092
tv128 = 1092
tv245 = 1096
tv228 = 1096
tv160 = 1096
tv148 = 1096
__$ArrayPad$ = 1104
this$ = 1152
__formal$ = 1160
_Left$ = 1168
_Right$ = 1176
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEAV01@1@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEAV01@1@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_My_data$ = 8
_Left_data$ = 40
_Right_data$ = 72
_Left_size$ = 104
_Right_size$ = 136
_Left_capacity$ = 168
_Right_capacity$ = 200
_New_size$ = 232
_Fits_in_left$ = 260
_Ptr$6 = 296
_Fits_in_right$ = 324
_Ptr$7 = 360
_Max$ = 392
_New_capacity$ = 424
_Alproxy$ = 456
$S20$ = 484
_Proxy$ = 520
_Fancyptr$ = 568
_Ptr$ = 600
$T8 = 1012
$T9 = 1044
$T10 = 1076
tv157 = 1092
tv128 = 1092
tv245 = 1096
tv228 = 1096
tv160 = 1096
tv148 = 1096
__$ArrayPad$ = 1104
this$ = 1152
__formal$ = 1160
_Left$ = 1168
_Right$ = 1176
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEAV01@1@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR _Proxy$[rbp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEAV01@1@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_My_data$ = 8
_Left_data$ = 40
_Right_data$ = 72
_Left_size$ = 104
_Right_size$ = 136
_Left_capacity$ = 168
_Right_capacity$ = 200
_New_size$ = 232
_Fits_in_left$ = 260
_Ptr$6 = 296
_Fits_in_right$ = 324
_Ptr$7 = 360
_Max$ = 392
_New_capacity$ = 424
_Alproxy$ = 456
$S20$ = 484
_Proxy$ = 520
_Fancyptr$ = 568
_Ptr$ = 600
$T8 = 1012
$T9 = 1044
$T10 = 1076
tv157 = 1092
tv128 = 1092
tv245 = 1096
tv228 = 1096
tv160 = 1096
tv148 = 1096
__$ArrayPad$ = 1104
this$ = 1152
__formal$ = 1160
_Left$ = 1168
_Right$ = 1176
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEAV01@1@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEAV01@1@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_My_data$ = 8
_Left_data$ = 40
_Right_data$ = 72
_Left_size$ = 104
_Right_size$ = 136
_Left_capacity$ = 168
_Right_capacity$ = 200
_New_size$ = 232
_Fits_in_left$ = 260
_Ptr$6 = 296
_Fits_in_right$ = 324
_Ptr$7 = 360
_Max$ = 392
_New_capacity$ = 424
_Alproxy$ = 456
$S20$ = 484
_Proxy$ = 520
_Fancyptr$ = 568
_Ptr$ = 600
$T8 = 1012
$T9 = 1044
$T10 = 1076
tv157 = 1092
tv128 = 1092
tv245 = 1096
tv228 = 1096
tv160 = 1096
tv148 = 1096
__$ArrayPad$ = 1104
this$ = 1152
__formal$ = 1160
_Left$ = 1168
_Right$ = 1176
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEAV01@1@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR _Proxy$[rbp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEAV01@1@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z
_TEXT	SEGMENT
_New_size$ = 8
_New_capacity$ = 40
_My_data$ = 72
_Ptr$ = 104
_Alproxy$ = 136
$S21$ = 164
_Proxy$ = 200
_Activate_large_mode$ = 244
_Requested_size$7 = 280
_Fancyptr$8 = 312
$T9 = 532
$T10 = 564
$T11 = 596
tv95 = 612
tv149 = 616
__$ArrayPad$ = 624
this$ = 672
__formal$ = 680
_Source_of_al$ = 688
_Left_ptr$ = 696
_Left_size$ = 704
_Right_ptr$ = 712
_Right_size$ = 720
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2631 :             _One_then_variadic_args_t{}, _Alty_traits::select_on_container_copy_construction(_Source_of_al._Getal())) {

$LN8:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 680				; 000002a8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 114				; 00000072H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+712]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode

; 2630 :         : _Mypair(

	mov	rcx, QWORD PTR _Source_of_al$[rbp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $T9[rbp]
	call	?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z ; std::_Default_allocator_traits<std::allocator<char> >::select_on_container_copy_construction
	mov	rcx, QWORD PTR this$[rbp]
	mov	r8, rax
	movzx	edx, BYTE PTR $T10[rbp]
	call	??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >
	npad	1

; 2632 :         _STL_INTERNAL_CHECK(_Left_size <= max_size());
; 2633 :         _STL_INTERNAL_CHECK(_Right_size <= max_size());
; 2634 :         _STL_INTERNAL_CHECK(_Right_size <= max_size() - _Left_size);
; 2635 :         const auto _New_size    = static_cast<size_type>(_Left_size + _Right_size);

	mov	rax, QWORD PTR _Right_size$[rbp]
	mov	rcx, QWORD PTR _Left_size$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _New_size$[rbp], rax

; 2636 :         size_type _New_capacity = _BUF_SIZE - 1;

	mov	QWORD PTR _New_capacity$[rbp], 15

; 2637 :         auto& _My_data          = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR _My_data$[rbp], rax

; 2638 :         _Elem* _Ptr             = _My_data._Bx._Buf;

	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 8
	mov	QWORD PTR _Ptr$[rbp], rax

; 2639 :         auto&& _Alproxy         = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $S21$[rbp]
	call	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
	lea	rax, QWORD PTR $S21$[rbp]
	mov	QWORD PTR _Alproxy$[rbp], rax

; 2640 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data); // throws

	mov	r8, QWORD PTR _My_data$[rbp]
	mov	rdx, QWORD PTR _Alproxy$[rbp]
	lea	rcx, QWORD PTR _Proxy$[rbp]
	call	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	npad	1

; 2641 : 
; 2642 : #ifdef __cpp_lib_constexpr_string
; 2643 :         const bool _Activate_large_mode = _New_capacity < _New_size || _STD is_constant_evaluated();
; 2644 : #else // ^^^ __cpp_lib_constexpr_string / !__cpp_lib_constexpr_string vvv
; 2645 :         const bool _Activate_large_mode = _New_capacity < _New_size;

	mov	rax, QWORD PTR _New_size$[rbp]
	cmp	QWORD PTR _New_capacity$[rbp], rax
	jae	SHORT $LN4@basic_stri
	mov	BYTE PTR tv95[rbp], 1
	jmp	SHORT $LN5@basic_stri
$LN4@basic_stri:
	mov	BYTE PTR tv95[rbp], 0
$LN5@basic_stri:
	movzx	eax, BYTE PTR tv95[rbp]
	mov	BYTE PTR _Activate_large_mode$[rbp], al

; 2646 : #endif // __cpp_lib_constexpr_string
; 2647 : 
; 2648 :         if (_Activate_large_mode) {

	movzx	eax, BYTE PTR _Activate_large_mode$[rbp]
	test	eax, eax
	je	$LN2@basic_stri

; 2649 :             // we should never allocate less than _BUF_SIZE space (_New_size could be small if constant evaluated)
; 2650 :             const size_type _Requested_size = (_STD max)(_New_size, _BUF_SIZE);

	lea	rdx, OFFSET FLAT:?_BUF_SIZE@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0_KB
	lea	rcx, QWORD PTR _New_size$[rbp]
	call	??$max@_K@std@@YAAEB_KAEB_K0@Z		; std::max<unsigned __int64>
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Requested_size$7[rbp], rax

; 2651 :             _New_capacity                   = _Calculate_growth(_Requested_size, _BUF_SIZE - 1, max_size());

	mov	rcx, QWORD PTR this$[rbp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	r8, rax
	mov	edx, 15
	mov	rcx, QWORD PTR _Requested_size$7[rbp]
	call	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
	mov	QWORD PTR _New_capacity$[rbp], rax

; 2652 :             const pointer _Fancyptr         = _Getal().allocate(_New_capacity + 1); // throws

	mov	rax, QWORD PTR _New_capacity$[rbp]
	add	rax, 1
	mov	rcx, -1
	cmovb	rax, rcx
	mov	QWORD PTR tv149[rbp], rax
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	mov	rcx, QWORD PTR tv149[rbp]
	mov	rdx, rcx
	mov	rcx, rax
	call	?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate
	mov	QWORD PTR _Fancyptr$8[rbp], rax

; 2653 :             _Ptr                            = _Unfancy(_Fancyptr);

	mov	rcx, QWORD PTR _Fancyptr$8[rbp]
	call	??$_Unfancy@D@std@@YAPEADPEAD@Z		; std::_Unfancy<char>
	mov	QWORD PTR _Ptr$[rbp], rax

; 2654 :             _Construct_in_place(_My_data._Bx._Ptr, _Fancyptr);

	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 8
	lea	rdx, QWORD PTR _Fancyptr$8[rbp]
	mov	rcx, rax
	call	??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>
$LN2@basic_stri:

; 2655 :         }
; 2656 : 
; 2657 : #ifdef __cpp_lib_constexpr_string
; 2658 :         if (_STD is_constant_evaluated()) { // Begin the lifetimes of the objects before copying to avoid UB
; 2659 :             _Traits::assign(_Ptr, _New_capacity + 1, _Elem());
; 2660 :         }
; 2661 : #endif // __cpp_lib_constexpr_string
; 2662 : 
; 2663 :         _My_data._Mysize = _New_size;

	mov	rax, QWORD PTR _My_data$[rbp]
	mov	rcx, QWORD PTR _New_size$[rbp]
	mov	QWORD PTR [rax+24], rcx

; 2664 :         _My_data._Myres  = _New_capacity;

	mov	rax, QWORD PTR _My_data$[rbp]
	mov	rcx, QWORD PTR _New_capacity$[rbp]
	mov	QWORD PTR [rax+32], rcx

; 2665 :         _Traits::copy(_Ptr, _Left_ptr, _Left_size);

	mov	r8, QWORD PTR _Left_size$[rbp]
	mov	rdx, QWORD PTR _Left_ptr$[rbp]
	mov	rcx, QWORD PTR _Ptr$[rbp]
	call	?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Char_traits<char,int>::copy

; 2666 :         _Traits::copy(_Ptr + static_cast<ptrdiff_t>(_Left_size), _Right_ptr, _Right_size);

	mov	rax, QWORD PTR _Left_size$[rbp]
	mov	rcx, QWORD PTR _Ptr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	r8, QWORD PTR _Right_size$[rbp]
	mov	rdx, QWORD PTR _Right_ptr$[rbp]
	mov	rcx, rax
	call	?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Char_traits<char,int>::copy

; 2667 :         _Traits::assign(_Ptr[_New_size], _Elem());

	mov	BYTE PTR $T11[rbp], 0
	mov	rax, QWORD PTR _New_size$[rbp]
	mov	rcx, QWORD PTR _Ptr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	lea	rdx, QWORD PTR $T11[rbp]
	mov	rcx, rax
	call	?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 2668 :         _Proxy._Release();

	lea	rcx, QWORD PTR _Proxy$[rbp]
	call	?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
	npad	1

; 2669 :     }

	lea	rcx, QWORD PTR _Proxy$[rbp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+648]
	pop	rdi
	pop	rbp
	ret	0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_New_size$ = 8
_New_capacity$ = 40
_My_data$ = 72
_Ptr$ = 104
_Alproxy$ = 136
$S21$ = 164
_Proxy$ = 200
_Activate_large_mode$ = 244
_Requested_size$7 = 280
_Fancyptr$8 = 312
$T9 = 532
$T10 = 564
$T11 = 596
tv95 = 612
tv149 = 616
__$ArrayPad$ = 624
this$ = 672
__formal$ = 680
_Source_of_al$ = 688
_Left_ptr$ = 696
_Left_size$ = 704
_Right_ptr$ = 712
_Right_size$ = 720
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_New_size$ = 8
_New_capacity$ = 40
_My_data$ = 72
_Ptr$ = 104
_Alproxy$ = 136
$S21$ = 164
_Proxy$ = 200
_Activate_large_mode$ = 244
_Requested_size$7 = 280
_Fancyptr$8 = 312
$T9 = 532
$T10 = 564
$T11 = 596
tv95 = 612
tv149 = 616
__$ArrayPad$ = 624
this$ = 672
__formal$ = 680
_Source_of_al$ = 688
_Left_ptr$ = 696
_Left_size$ = 704
_Right_ptr$ = 712
_Right_size$ = 720
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR _Proxy$[rbp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_New_size$ = 8
_New_capacity$ = 40
_My_data$ = 72
_Ptr$ = 104
_Alproxy$ = 136
$S21$ = 164
_Proxy$ = 200
_Activate_large_mode$ = 244
_Requested_size$7 = 280
_Fancyptr$8 = 312
$T9 = 532
$T10 = 564
$T11 = 596
tv95 = 612
tv149 = 616
__$ArrayPad$ = 624
this$ = 672
__formal$ = 680
_Source_of_al$ = 688
_Left_ptr$ = 696
_Left_size$ = 704
_Right_ptr$ = 712
_Right_size$ = 720
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_New_size$ = 8
_New_capacity$ = 40
_My_data$ = 72
_Ptr$ = 104
_Alproxy$ = 136
$S21$ = 164
_Proxy$ = 200
_Activate_large_mode$ = 244
_Requested_size$7 = 280
_Fancyptr$8 = 312
$T9 = 532
$T10 = 564
$T11 = 596
tv95 = 612
tv149 = 616
__$ArrayPad$ = 624
this$ = 672
__formal$ = 680
_Source_of_al$ = 688
_Left_ptr$ = 696
_Left_size$ = 704
_Right_ptr$ = 712
_Right_size$ = 720
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR _Proxy$[rbp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
$T1 = 196
$T2 = 228
this$ = 288
_Right$ = 296
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2605 :         : _Mypair(_One_then_variadic_args_t{}, _STD move(_Right._Getal())) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode
	mov	rcx, QWORD PTR _Right$[rbp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	mov	rcx, rax
	call	??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ; std::move<std::allocator<char> &>
	mov	rcx, QWORD PTR this$[rbp]
	mov	r8, rax
	movzx	edx, BYTE PTR $T1[rbp]
	call	??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >

; 2606 :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $T2[rbp]
	call	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
	mov	rcx, QWORD PTR this$[rbp]
	mov	rdx, rax
	call	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >

; 2607 :         _Take_contents(_Right);

	mov	rdx, QWORD PTR _Right$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents

; 2608 :     }

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z
_TEXT	SEGMENT
_Alproxy$ = 8
$S14$ = 36
_Proxy$ = 72
$T5 = 308
__$ArrayPad$ = 328
this$ = 368
_Count$ = 376
_Ch$ = 384
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2538 :         : _Mypair(_Zero_then_variadic_args_t{}) {

$LN5:
	mov	BYTE PTR [rsp+24], r8b
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 376				; 00000178H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 38					; 00000026H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+408]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	movzx	edx, BYTE PTR $T5[rbp]
	mov	rcx, rax
	call	??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
	npad	1

; 2539 :         // construct from _Count * _Ch
; 2540 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $S14$[rbp]
	call	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
	lea	rax, QWORD PTR $S14$[rbp]
	mov	QWORD PTR _Alproxy$[rbp], rax

; 2541 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);

	mov	rax, QWORD PTR this$[rbp]
	mov	r8, rax
	mov	rdx, QWORD PTR _Alproxy$[rbp]
	lea	rcx, QWORD PTR _Proxy$[rbp]
	call	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	npad	1

; 2542 :         _Tidy_init();

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init

; 2543 :         assign(_Count, _Ch);

	movzx	r8d, BYTE PTR _Ch$[rbp]
	mov	rdx, QWORD PTR _Count$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 2544 :         _Proxy._Release();

	lea	rcx, QWORD PTR _Proxy$[rbp]
	call	?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
	npad	1

; 2545 :     }

	lea	rcx, QWORD PTR _Proxy$[rbp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+344]
	pop	rdi
	pop	rbp
	ret	0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 8
$S14$ = 36
_Proxy$ = 72
$T5 = 308
__$ArrayPad$ = 328
this$ = 368
_Count$ = 376
_Ch$ = 384
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 8
$S14$ = 36
_Proxy$ = 72
$T5 = 308
__$ArrayPad$ = 328
this$ = 368
_Count$ = 376
_Ch$ = 384
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR _Proxy$[rbp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 8
$S14$ = 36
_Proxy$ = 72
$T5 = 308
__$ArrayPad$ = 328
this$ = 368
_Count$ = 376
_Ch$ = 384
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 8
$S14$ = 36
_Proxy$ = 72
$T5 = 308
__$ArrayPad$ = 328
this$ = 368
_Count$ = 376
_Ch$ = 384
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR _Proxy$[rbp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z
_TEXT	SEGMENT
_Alproxy$ = 8
$S15$ = 36
_Proxy$ = 72
$T5 = 308
__$ArrayPad$ = 328
this$ = 368
_Ptr$ = 376
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2517 :     _CONSTEXPR20_CONTAINER basic_string(_In_z_ const _Elem* const _Ptr) : _Mypair(_Zero_then_variadic_args_t{}) {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 376				; 00000178H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 38					; 00000026H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+408]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	movzx	edx, BYTE PTR $T5[rbp]
	mov	rcx, rax
	call	??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
	npad	1

; 2518 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $S15$[rbp]
	call	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
	lea	rax, QWORD PTR $S15$[rbp]
	mov	QWORD PTR _Alproxy$[rbp], rax

; 2519 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);

	mov	rax, QWORD PTR this$[rbp]
	mov	r8, rax
	mov	rdx, QWORD PTR _Alproxy$[rbp]
	lea	rcx, QWORD PTR _Proxy$[rbp]
	call	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	npad	1

; 2520 :         _Tidy_init();

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init

; 2521 :         assign(_Ptr);

	mov	rdx, QWORD PTR _Ptr$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 2522 :         _Proxy._Release();

	lea	rcx, QWORD PTR _Proxy$[rbp]
	call	?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
	npad	1

; 2523 :     }

	lea	rcx, QWORD PTR _Proxy$[rbp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+344]
	pop	rdi
	pop	rbp
	ret	0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 8
$S15$ = 36
_Proxy$ = 72
$T5 = 308
__$ArrayPad$ = 328
this$ = 368
_Ptr$ = 376
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 8
$S15$ = 36
_Proxy$ = 72
$T5 = 308
__$ArrayPad$ = 328
this$ = 368
_Ptr$ = 376
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR _Proxy$[rbp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 8
$S15$ = 36
_Proxy$ = 72
$T5 = 308
__$ArrayPad$ = 328
this$ = 368
_Ptr$ = 376
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 8
$S15$ = 36
_Proxy$ = 72
$T5 = 308
__$ArrayPad$ = 328
this$ = 368
_Ptr$ = 376
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR _Proxy$[rbp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z
_TEXT	SEGMENT
_Alproxy$ = 8
$S19$ = 36
_Proxy$ = 72
$T5 = 308
__$ArrayPad$ = 328
this$ = 368
_Right$ = 376
_Roff$ = 384
_Count$ = 392
_Al$ = 400
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2489 :         : _Mypair(_One_then_variadic_args_t{}, _Al) { // construct from _Right [_Roff, _Roff + _Count)

$LN5:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 376				; 00000178H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 38					; 00000026H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+408]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	r8, QWORD PTR _Al$[rbp]
	movzx	edx, BYTE PTR $T5[rbp]
	mov	rcx, rax
	call	??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> const &>
	npad	1

; 2490 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $S19$[rbp]
	call	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
	lea	rax, QWORD PTR $S19$[rbp]
	mov	QWORD PTR _Alproxy$[rbp], rax

; 2491 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);

	mov	rax, QWORD PTR this$[rbp]
	mov	r8, rax
	mov	rdx, QWORD PTR _Alproxy$[rbp]
	lea	rcx, QWORD PTR _Proxy$[rbp]
	call	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	npad	1

; 2492 :         _Tidy_init();

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init

; 2493 :         assign(_Right, _Roff, _Count);

	mov	r9, QWORD PTR _Count$[rbp]
	mov	r8, QWORD PTR _Roff$[rbp]
	mov	rdx, QWORD PTR _Right$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 2494 :         _Proxy._Release();

	lea	rcx, QWORD PTR _Proxy$[rbp]
	call	?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
	npad	1

; 2495 :     }

	lea	rcx, QWORD PTR _Proxy$[rbp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+344]
	pop	rdi
	pop	rbp
	ret	0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 8
$S19$ = 36
_Proxy$ = 72
$T5 = 308
__$ArrayPad$ = 328
this$ = 368
_Right$ = 376
_Roff$ = 384
_Count$ = 392
_Al$ = 400
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 8
$S19$ = 36
_Proxy$ = 72
$T5 = 308
__$ArrayPad$ = 328
this$ = 368
_Right$ = 376
_Roff$ = 384
_Count$ = 392
_Al$ = 400
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR _Proxy$[rbp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 8
$S19$ = 36
_Proxy$ = 72
$T5 = 308
__$ArrayPad$ = 328
this$ = 368
_Right$ = 376
_Roff$ = 384
_Count$ = 392
_Al$ = 400
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 8
$S19$ = 36
_Proxy$ = 72
$T5 = 308
__$ArrayPad$ = 328
this$ = 368
_Right$ = 376
_Roff$ = 384
_Count$ = 392
_Al$ = 400
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR _Proxy$[rbp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 196
$T2 = 228
this$ = 288
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2467 :         : _Mypair(_Zero_then_variadic_args_t{}) {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	movzx	edx, BYTE PTR $T1[rbp]
	mov	rcx, rax
	call	??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>

; 2468 :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $T2[rbp]
	call	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
	mov	rcx, QWORD PTR this$[rbp]
	mov	rdx, rax
	call	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >

; 2469 :         _Tidy_init();

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init

; 2470 :     }

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
_Alproxy$ = 8
$S17$ = 36
_Proxy$ = 72
$T5 = 308
$T6 = 340
__$ArrayPad$ = 360
this$ = 400
_Right$ = 408
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2451 :         : _Mypair(_One_then_variadic_args_t{}, _Alty_traits::select_on_container_copy_construction(_Right._Getal())) {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 408				; 00000198H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 46					; 0000002eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+440]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode
	mov	rcx, QWORD PTR _Right$[rbp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $T5[rbp]
	call	?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z ; std::_Default_allocator_traits<std::allocator<char> >::select_on_container_copy_construction
	mov	rcx, QWORD PTR this$[rbp]
	mov	r8, rax
	movzx	edx, BYTE PTR $T6[rbp]
	call	??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >
	npad	1

; 2452 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $S17$[rbp]
	call	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
	lea	rax, QWORD PTR $S17$[rbp]
	mov	QWORD PTR _Alproxy$[rbp], rax

; 2453 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);

	mov	rax, QWORD PTR this$[rbp]
	mov	r8, rax
	mov	rdx, QWORD PTR _Alproxy$[rbp]
	lea	rcx, QWORD PTR _Proxy$[rbp]
	call	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	npad	1

; 2454 :         _Construct_lv_contents(_Right);

	mov	rdx, QWORD PTR _Right$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct_lv_contents

; 2455 :         _Proxy._Release();

	lea	rcx, QWORD PTR _Proxy$[rbp]
	call	?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
	npad	1

; 2456 :     }

	lea	rcx, QWORD PTR _Proxy$[rbp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+376]
	pop	rdi
	pop	rbp
	ret	0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 8
$S17$ = 36
_Proxy$ = 72
$T5 = 308
$T6 = 340
__$ArrayPad$ = 360
this$ = 400
_Right$ = 408
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 8
$S17$ = 36
_Proxy$ = 72
$T5 = 308
$T6 = 340
__$ArrayPad$ = 360
this$ = 400
_Right$ = 408
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR _Proxy$[rbp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 8
$S17$ = 36
_Proxy$ = 72
$T5 = 308
$T6 = 340
__$ArrayPad$ = 360
this$ = 400
_Right$ = 408
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 8
$S17$ = 36
_Proxy$ = 72
$T5 = 308
$T6 = 340
__$ArrayPad$ = 360
this$ = 400
_Right$ = 408
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR _Proxy$[rbp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	rcx, rax
	call	??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty, COMDAT

; 2348 :         _CONSTEXPR20_CONTAINER ~_Bxty() noexcept {} // user-provided, for fancy pointers

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty, COMDAT

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?_Clamp_suffix_size@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_K_K0@Z
_TEXT	SEGMENT
$T1 = 200
this$ = 256
_Off$ = 264
_Size$ = 272
?_Clamp_suffix_size@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_K_K0@Z PROC ; std::_String_val<std::_Simple_types<char> >::_Clamp_suffix_size, COMDAT

; 2340 :     _CONSTEXPR20_CONTAINER size_type _Clamp_suffix_size(const size_type _Off, const size_type _Size) const noexcept {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode

; 2341 :         // trims _Size to the longest it can be assuming a string at/after _Off
; 2342 :         return (_STD min)(_Size, _Mysize - _Off);

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _Off$[rbp]
	mov	rax, QWORD PTR [rax+24]
	sub	rax, rcx
	mov	QWORD PTR $T1[rbp], rax
	lea	rdx, QWORD PTR $T1[rbp]
	lea	rcx, QWORD PTR _Size$[rbp]
	call	??$min@_K@std@@YAAEB_KAEB_K0@Z		; std::min<unsigned __int64>
	mov	rax, QWORD PTR [rax]

; 2343 :     }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?_Clamp_suffix_size@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_K_K0@Z ENDP ; std::_String_val<std::_Simple_types<char> >::_Clamp_suffix_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ
_TEXT	SEGMENT
?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Xran, COMDAT

; 2336 :     [[noreturn]] static void _Xran() {

$LN3:
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode

; 2337 :         _Xout_of_range("invalid string position");

	lea	rcx, OFFSET FLAT:??_C@_0BI@CFPLBAOH@invalid?5string?5position@
	call	?_Xout_of_range@std@@YAXPEBD@Z		; std::_Xout_of_range
$LN2@Xran:

; 2338 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?_Check_offset_exclusive@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z
_TEXT	SEGMENT
this$ = 224
_Off$ = 232
?_Check_offset_exclusive@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z PROC ; std::_String_val<std::_Simple_types<char> >::_Check_offset_exclusive, COMDAT

; 2329 :     _CONSTEXPR20_CONTAINER void _Check_offset_exclusive(const size_type _Off) const {

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode

; 2330 :         // checks whether _Off is in the bounds of [0, size())
; 2331 :         if (_Mysize <= _Off) {

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _Off$[rbp]
	cmp	QWORD PTR [rax+24], rcx
	ja	SHORT $LN2@Check_offs

; 2332 :             _Xran();

	call	?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ ; std::_String_val<std::_Simple_types<char> >::_Xran
$LN2@Check_offs:
$LN3@Check_offs:

; 2333 :         }
; 2334 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Check_offset_exclusive@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z ENDP ; std::_String_val<std::_Simple_types<char> >::_Check_offset_exclusive
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z
_TEXT	SEGMENT
this$ = 224
_Off$ = 232
?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z PROC ; std::_String_val<std::_Simple_types<char> >::_Check_offset, COMDAT

; 2322 :     _CONSTEXPR20_CONTAINER void _Check_offset(const size_type _Off) const {

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode

; 2323 :         // checks whether _Off is in the bounds of [0, size()]
; 2324 :         if (_Mysize < _Off) {

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _Off$[rbp]
	cmp	QWORD PTR [rax+24], rcx
	jae	SHORT $LN2@Check_offs

; 2325 :             _Xran();

	call	?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ ; std::_String_val<std::_Simple_types<char> >::_Xran
$LN2@Check_offs:
$LN3@Check_offs:

; 2326 :         }
; 2327 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z ENDP ; std::_String_val<std::_Simple_types<char> >::_Check_offset
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
tv66 = 192
this$ = 240
?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged, COMDAT

; 2313 :     _CONSTEXPR20_CONTAINER bool _Large_string_engaged() const noexcept {

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode

; 2314 : #ifdef __cpp_lib_constexpr_string
; 2315 :         if (_STD is_constant_evaluated()) {
; 2316 :             return true;
; 2317 :         }
; 2318 : #endif // __cpp_lib_constexpr_string
; 2319 :         return _BUF_SIZE <= _Myres;

	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+32], 16
	jb	SHORT $LN3@Large_stri
	mov	DWORD PTR tv66[rbp], 1
	jmp	SHORT $LN4@Large_stri
$LN3@Large_stri:
	mov	DWORD PTR tv66[rbp], 0
$LN4@Large_stri:
	movzx	eax, BYTE PTR tv66[rbp]

; 2320 :     }

	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ
_TEXT	SEGMENT
_Result$ = 8
this$ = 256
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT

; 2304 :     _CONSTEXPR20_CONTAINER const value_type* _Myptr() const noexcept {

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode

; 2305 :         const value_type* _Result = _Bx._Buf;

	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	QWORD PTR _Result$[rbp], rax

; 2306 :         if (_Large_string_engaged()) {

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@Myptr

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	??$_Unfancy@D@std@@YAPEADPEAD@Z		; std::_Unfancy<char>
	mov	QWORD PTR _Result$[rbp], rax
$LN2@Myptr:

; 2308 :         }
; 2309 : 
; 2310 :         return _Result;

	mov	rax, QWORD PTR _Result$[rbp]

; 2311 :     }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ
_TEXT	SEGMENT
_Result$ = 8
this$ = 256
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT

; 2295 :     _CONSTEXPR20_CONTAINER value_type* _Myptr() noexcept {

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode

; 2296 :         value_type* _Result = _Bx._Buf;

	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	QWORD PTR _Result$[rbp], rax

; 2297 :         if (_Large_string_engaged()) {

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@Myptr

; 2298 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	??$_Unfancy@D@std@@YAPEADPEAD@Z		; std::_Unfancy<char>
	mov	QWORD PTR _Result$[rbp], rax
$LN2@Myptr:

; 2299 :         }
; 2300 : 
; 2301 :         return _Result;

	mov	rax, QWORD PTR _Result$[rbp]

; 2302 :     }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT

; 2284 :     _CONSTEXPR20_CONTAINER _String_val() noexcept : _Bx() {}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode
	mov	rcx, QWORD PTR this$[rbp]
	call	??0_Container_base12@std@@QEAA@XZ	; std::_Container_base12::_Container_base12
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	rcx, rax
	call	??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty

; 2285 : 
; 2286 :     // length of internal buffer, [1, 16]:
; 2287 :     static constexpr size_type _BUF_SIZE = 16 / sizeof(value_type) < 1 ? 1 : 16 / sizeof(value_type);
; 2288 :     // roundup mask for allocated buffers, [0, 15]:
; 2289 :     static constexpr size_type _ALLOC_MASK = sizeof(value_type) <= 1 ? 15
; 2290 :                                            : sizeof(value_type) <= 2 ? 7
; 2291 :                                            : sizeof(value_type) <= 4 ? 3
; 2292 :                                            : sizeof(value_type) <= 8 ? 1
; 2293 :                                                                      : 0;
; 2294 : 
; 2295 :     _CONSTEXPR20_CONTAINER value_type* _Myptr() noexcept {
; 2296 :         value_type* _Result = _Bx._Buf;
; 2297 :         if (_Large_string_engaged()) {
; 2298 :             _Result = _Unfancy(_Bx._Ptr);
; 2299 :         }
; 2300 : 
; 2301 :         return _Result;
; 2302 :     }
; 2303 : 
; 2304 :     _CONSTEXPR20_CONTAINER const value_type* _Myptr() const noexcept {
; 2305 :         const value_type* _Result = _Bx._Buf;
; 2306 :         if (_Large_string_engaged()) {
; 2307 :             _Result = _Unfancy(_Bx._Ptr);
; 2308 :         }
; 2309 : 
; 2310 :         return _Result;
; 2311 :     }
; 2312 : 
; 2313 :     _CONSTEXPR20_CONTAINER bool _Large_string_engaged() const noexcept {
; 2314 : #ifdef __cpp_lib_constexpr_string
; 2315 :         if (_STD is_constant_evaluated()) {
; 2316 :             return true;
; 2317 :         }
; 2318 : #endif // __cpp_lib_constexpr_string
; 2319 :         return _BUF_SIZE <= _Myres;
; 2320 :     }
; 2321 : 
; 2322 :     _CONSTEXPR20_CONTAINER void _Check_offset(const size_type _Off) const {
; 2323 :         // checks whether _Off is in the bounds of [0, size()]
; 2324 :         if (_Mysize < _Off) {
; 2325 :             _Xran();
; 2326 :         }
; 2327 :     }
; 2328 : 
; 2329 :     _CONSTEXPR20_CONTAINER void _Check_offset_exclusive(const size_type _Off) const {
; 2330 :         // checks whether _Off is in the bounds of [0, size())
; 2331 :         if (_Mysize <= _Off) {
; 2332 :             _Xran();
; 2333 :         }
; 2334 :     }
; 2335 : 
; 2336 :     [[noreturn]] static void _Xran() {
; 2337 :         _Xout_of_range("invalid string position");
; 2338 :     }
; 2339 : 
; 2340 :     _CONSTEXPR20_CONTAINER size_type _Clamp_suffix_size(const size_type _Off, const size_type _Size) const noexcept {
; 2341 :         // trims _Size to the longest it can be assuming a string at/after _Off
; 2342 :         return (_STD min)(_Size, _Mysize - _Off);
; 2343 :     }
; 2344 : 
; 2345 :     union _Bxty { // storage for small buffer or pointer to larger one
; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers
; 2347 : 
; 2348 :         _CONSTEXPR20_CONTAINER ~_Bxty() noexcept {} // user-provided, for fancy pointers
; 2349 : 
; 2350 :         value_type _Buf[_BUF_SIZE];
; 2351 :         pointer _Ptr;
; 2352 :         char _Alias[_BUF_SIZE]; // TRANSITION, ABI: _Alias is preserved for binary compatibility (especially /clr)
; 2353 :     } _Bx;
; 2354 : 
; 2355 :     size_type _Mysize = 0; // current length of string

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+24], 0

; 2356 :     size_type _Myres  = 0; // current storage reserved for string

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+32], 0

; 2284 :     _CONSTEXPR20_CONTAINER _String_val() noexcept : _Bx() {}

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 224
_Al$ = 232
?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z PROC ; std::_Default_allocator_traits<std::allocator<char> >::select_on_container_copy_construction, COMDAT

; 731  :     _NODISCARD static _CONSTEXPR20_DYNALLOC _Alloc select_on_container_copy_construction(const _Alloc& _Al) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode

; 732  :         return _Al;

	mov	rax, QWORD PTR __$ReturnUdt$[rbp]

; 733  :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z ENDP ; std::_Default_allocator_traits<std::allocator<char> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z
_TEXT	SEGMENT
__formal$ = 224
?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<char> >::max_size, COMDAT

; 727  :     _NODISCARD static _CONSTEXPR20_DYNALLOC size_type max_size(const _Alloc&) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode

; 728  :         return static_cast<size_t>(-1) / sizeof(value_type);

	mov	rax, -1

; 729  :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z
_TEXT	SEGMENT
this$ = 224
_Count$ = 232
?allocate@?$allocator@D@std@@QEAAPEAD_K@Z PROC		; std::allocator<char>::allocate, COMDAT

; 838  :     _NODISCARD _CONSTEXPR20_DYNALLOC __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode

; 839  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

	mov	rcx, QWORD PTR _Count$[rbp]
	call	??$_Get_size_of_n@$00@std@@YA_K_K@Z	; std::_Get_size_of_n<1>
	mov	rcx, rax
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 840  :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z
_TEXT	SEGMENT
this$ = 224
_Ptr$ = 232
_Count$ = 240
?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z PROC	; std::allocator<char>::deallocate, COMDAT

; 833  :     _CONSTEXPR20_DYNALLOC void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode

; 834  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rdx, QWORD PTR _Count$[rbp]
	mov	rcx, QWORD PTR _Ptr$[rbp]
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 836  :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ENDP	; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??0?$allocator@D@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$allocator@D@std@@QEAA@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT

; 825  :     constexpr allocator() noexcept {}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$allocator@D@std@@QEAA@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?_Xlen_string@std@@YAXXZ
_TEXT	SEGMENT
?_Xlen_string@std@@YAXXZ PROC				; std::_Xlen_string, COMDAT

; 2373 : [[noreturn]] inline void _Xlen_string() {

$LN3:
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode

; 2374 :     _Xlength_error("string too long");

	lea	rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long@
	call	?_Xlength_error@std@@YAXPEBD@Z		; std::_Xlength_error
$LN2@Xlen_strin:

; 2375 : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Xlen_string@std@@YAXXZ ENDP				; std::_Xlen_string
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ
_TEXT	SEGMENT
?eof@?$_Narrow_char_traits@DH@std@@SAHXZ PROC		; std::_Narrow_char_traits<char,int>::eof, COMDAT

; 477  :     _NODISCARD static constexpr int_type eof() noexcept {

$LN3:
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode

; 478  :         return static_cast<int_type>(EOF);

	mov	eax, -1

; 479  :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ENDP		; std::_Narrow_char_traits<char,int>::eof
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z
_TEXT	SEGMENT
tv65 = 192
_Left$ = 240
_Right$ = 248
?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z PROC ; std::_Narrow_char_traits<char,int>::eq_int_type, COMDAT

; 469  :     _NODISCARD static constexpr bool eq_int_type(const int_type& _Left, const int_type& _Right) noexcept {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode

; 470  :         return _Left == _Right;

	mov	rax, QWORD PTR _Left$[rbp]
	mov	rcx, QWORD PTR _Right$[rbp]
	mov	ecx, DWORD PTR [rcx]
	cmp	DWORD PTR [rax], ecx
	jne	SHORT $LN3@eq_int_typ
	mov	DWORD PTR tv65[rbp], 1
	jmp	SHORT $LN4@eq_int_typ
$LN3@eq_int_typ:
	mov	DWORD PTR tv65[rbp], 0
$LN4@eq_int_typ:
	movzx	eax, BYTE PTR tv65[rbp]

; 471  :     }

	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ENDP ; std::_Narrow_char_traits<char,int>::eq_int_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z
_TEXT	SEGMENT
_Left$ = 224
_Right$ = 232
?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z PROC ; std::_Narrow_char_traits<char,int>::assign, COMDAT

; 449  :     static _CONSTEXPR17 void assign(_Elem& _Left, const _Elem& _Right) noexcept {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode

; 450  :         _Left = _Right;

	mov	rax, QWORD PTR _Left$[rbp]
	mov	rcx, QWORD PTR _Right$[rbp]
	movzx	ecx, BYTE PTR [rcx]
	mov	BYTE PTR [rax], cl

; 451  :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ENDP ; std::_Narrow_char_traits<char,int>::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?assign@?$_Narrow_char_traits@DH@std@@SAPEADQEAD_KD@Z
_TEXT	SEGMENT
_First$ = 224
_Count$ = 232
_Ch$ = 240
?assign@?$_Narrow_char_traits@DH@std@@SAPEADQEAD_KD@Z PROC ; std::_Narrow_char_traits<char,int>::assign, COMDAT

; 438  :         _Out_writes_all_(_Count) _Elem* const _First, size_t _Count, const _Elem _Ch) noexcept /* strengthened */ {

$LN3:
	mov	BYTE PTR [rsp+24], r8b
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode

; 439  :         // assign _Count * _Ch to [_First, ...)
; 440  : #ifdef __cpp_lib_is_constant_evaluated
; 441  :         if (_STD is_constant_evaluated()) {
; 442  :             return _Primary_char_traits::assign(_First, _Count, _Ch);
; 443  :         }
; 444  : #endif // __cpp_lib_is_constant_evaluated
; 445  : 
; 446  :         return static_cast<_Elem*>(_CSTD memset(_First, _Ch, _Count));

	movsx	eax, BYTE PTR _Ch$[rbp]
	mov	r8, QWORD PTR _Count$[rbp]
	mov	edx, eax
	mov	rcx, QWORD PTR _First$[rbp]
	call	memset

; 447  :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?assign@?$_Narrow_char_traits@DH@std@@SAPEADQEAD_KD@Z ENDP ; std::_Narrow_char_traits<char,int>::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
_TEXT	SEGMENT
_First$ = 224
?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z PROC	; std::_Narrow_char_traits<char,int>::length, COMDAT

; 396  :     _NODISCARD static _CONSTEXPR17 size_t length(_In_z_ const _Elem* const _First) noexcept /* strengthened */ {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode

; 397  :         // find length of null-terminated string
; 398  : #if _HAS_CXX17
; 399  : #ifdef __cpp_char8_t
; 400  :         if constexpr (is_same_v<_Elem, char8_t>) {
; 401  : #if _HAS_U8_INTRINSICS
; 402  :             return __builtin_u8strlen(_First);
; 403  : #else // ^^^ use u8 intrinsics / no u8 intrinsics vvv
; 404  :             return _Primary_char_traits::length(_First);
; 405  : #endif // _HAS_U8_INTRINSICS
; 406  :         } else
; 407  : #endif // __cpp_char8_t
; 408  :         {
; 409  :             return __builtin_strlen(_First);
; 410  :         }
; 411  : #else // _HAS_CXX17
; 412  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

	mov	rcx, QWORD PTR _First$[rbp]
	call	strlen

; 413  : #endif // _HAS_CXX17
; 414  :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ENDP	; std::_Narrow_char_traits<char,int>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z
_TEXT	SEGMENT
_First1$ = 224
_First2$ = 232
_Count$ = 240
?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z PROC ; std::_Narrow_char_traits<char,int>::compare, COMDAT

; 387  :         _In_reads_(_Count) const _Elem* const _First2, const size_t _Count) noexcept /* strengthened */ {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode

; 388  :         // compare [_First1, _First1 + _Count) with [_First2, ...)
; 389  : #if _HAS_CXX17
; 390  :         return __builtin_memcmp(_First1, _First2, _Count);
; 391  : #else // _HAS_CXX17
; 392  :         return _CSTD memcmp(_First1, _First2, _Count);

	mov	r8, QWORD PTR _Count$[rbp]
	mov	rdx, QWORD PTR _First2$[rbp]
	mov	rcx, QWORD PTR _First1$[rbp]
	call	memcmp

; 393  : #endif // _HAS_CXX17
; 394  :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z ENDP ; std::_Narrow_char_traits<char,int>::compare
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?move@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z
_TEXT	SEGMENT
_First1$ = 224
_First2$ = 232
_Count$ = 240
?move@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z PROC	; std::_Char_traits<char,int>::move, COMDAT

; 80   :         _In_reads_(_Count) const _Elem* const _First2, const size_t _Count) noexcept /* strengthened */ {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode

; 81   :         // copy [_First2, _First2 + _Count) to [_First1, ...), allowing overlap
; 82   : #if _HAS_MEMCPY_MEMMOVE_INTRINSICS
; 83   :         __builtin_memmove(_First1, _First2, _Count * sizeof(_Elem));
; 84   : #else // ^^^ _HAS_MEMCPY_MEMMOVE_INTRINSICS ^^^ / vvv !_HAS_MEMCPY_MEMMOVE_INTRINSICS vvv
; 85   : #ifdef __cpp_lib_is_constant_evaluated
; 86   :         if (_STD is_constant_evaluated()) {
; 87   :             // dest: [_First1, _First1 + _Count)
; 88   :             // src: [_First2, _First2 + _Count)
; 89   :             // We need to handle overlapping ranges.
; 90   :             // If _First1 is in the src range, we need a backward loop.
; 91   :             // Otherwise, the forward loop works (even if the back of dest overlaps the front of src).
; 92   : 
; 93   :             if (_First1 == _First2) {
; 94   :                 return _First1; // Self-assignment; either loop would work, but returning immediately is faster.
; 95   :             }
; 96   : 
; 97   :             // Usually, we would compare pointers with less-than, even though they could belong to different arrays.
; 98   :             // However, we're not allowed to do that during constant evaluation, so we need a linear scan for equality.
; 99   :             bool _Loop_forward = true;
; 100  : 
; 101  :             for (const _Elem* _Src = _First2; _Src != _First2 + _Count; ++_Src) {
; 102  :                 if (_First1 == _Src) {
; 103  :                     _Loop_forward = false;
; 104  :                     break;
; 105  :                 }
; 106  :             }
; 107  : 
; 108  :             if (_Loop_forward) {
; 109  :                 for (size_t _Idx = 0; _Idx < _Count; ++_Idx) {
; 110  :                     _First1[_Idx] = _First2[_Idx];
; 111  :                 }
; 112  :             } else {
; 113  :                 for (size_t _Idx = 0; _Idx < _Count; ++_Idx) {
; 114  :                     _First1[_Count - 1 - _Idx] = _First2[_Count - 1 - _Idx];
; 115  :                 }
; 116  :             }
; 117  : 
; 118  :             return _First1;
; 119  :         }
; 120  : #endif // __cpp_lib_is_constant_evaluated
; 121  : 
; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	mov	r8, QWORD PTR _Count$[rbp]
	mov	rdx, QWORD PTR _First2$[rbp]
	mov	rcx, QWORD PTR _First1$[rbp]
	call	memmove

; 123  : #endif // ^^^ !_HAS_MEMCPY_MEMMOVE_INTRINSICS ^^^
; 124  : 
; 125  :         return _First1;

	mov	rax, QWORD PTR _First1$[rbp]

; 126  :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?move@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z ENDP	; std::_Char_traits<char,int>::move
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z
_TEXT	SEGMENT
_First1$ = 224
_First2$ = 232
_Count$ = 240
?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z PROC	; std::_Char_traits<char,int>::copy, COMDAT

; 49   :         _In_reads_(_Count) const _Elem* const _First2, const size_t _Count) noexcept /* strengthened */ {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__0D019051_xstring
	call	__CheckForDebuggerJustMyCode

; 50   :         // copy [_First2, _First2 + _Count) to [_First1, ...)
; 51   : #if _HAS_MEMCPY_MEMMOVE_INTRINSICS
; 52   :         __builtin_memcpy(_First1, _First2, _Count * sizeof(_Elem));
; 53   : #else // ^^^ _HAS_MEMCPY_MEMMOVE_INTRINSICS ^^^ / vvv !_HAS_MEMCPY_MEMMOVE_INTRINSICS vvv
; 54   : #ifdef __cpp_lib_is_constant_evaluated
; 55   :         if (_STD is_constant_evaluated()) {
; 56   :             // pre: [_First1, _First1 + _Count) and [_First2, _First2 + _Count) do not overlap; see LWG-3085
; 57   :             for (size_t _Idx = 0; _Idx < _Count; ++_Idx) {
; 58   :                 _First1[_Idx] = _First2[_Idx];
; 59   :             }
; 60   : 
; 61   :             return _First1;
; 62   :         }
; 63   : #endif // __cpp_lib_is_constant_evaluated
; 64   : 
; 65   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	mov	r8, QWORD PTR _Count$[rbp]
	mov	rdx, QWORD PTR _First2$[rbp]
	mov	rcx, QWORD PTR _First1$[rbp]
	call	memcpy

; 66   : #endif // ^^^ !_HAS_MEMCPY_MEMMOVE_INTRINSICS ^^^
; 67   : 
; 68   :         return _First1;

	mov	rax, QWORD PTR _First1$[rbp]

; 69   :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z ENDP	; std::_Char_traits<char,int>::copy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xutility
;	COMDAT ??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
_TEXT	SEGMENT
$T1 = 200
_Obj$ = 256
<_Args_0>$ = 264
??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z PROC ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>, COMDAT

; 151  :     is_nothrow_constructible_v<_Ty, _Types...>) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__12269DE6_xutility
	call	__CheckForDebuggerJustMyCode
	mov	rcx, QWORD PTR _Obj$[rbp]
	call	??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
	mov	rcx, rax
	call	??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z ; std::_Voidify_iter<std::_Container_proxy *>
	mov	rdx, rax
	mov	ecx, 16
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rbp], rax
	mov	rcx, QWORD PTR <_Args_0>$[rbp]
	call	??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ; std::forward<std::_Container_base12 *>
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR $T1[rbp]
	call	??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy

; 152  : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 153  :     if (_STD is_constant_evaluated()) {
; 154  :         _STD construct_at(_STD addressof(_Obj), _STD forward<_Types>(_Args)...);
; 155  :     } else
; 156  : #endif // __cpp_lib_constexpr_dynamic_alloc
; 157  :     {
; 158  :         ::new (_Voidify_iter(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);
; 159  :     }
; 160  : }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ENDP ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstddef
;	COMDAT ??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 224
??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z PROC ; std::addressof<std::_Container_base12>, COMDAT

; 274  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__E458E21C_xstddef
	call	__CheckForDebuggerJustMyCode

; 275  :     return __builtin_addressof(_Val);

	mov	rax, QWORD PTR _Val$[rbp]

; 276  : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ENDP ; std::addressof<std::_Container_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??0_Basic_container_proxy_ptr12@std@@IEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0_Basic_container_proxy_ptr12@std@@IEAA@XZ PROC	; std::_Basic_container_proxy_ptr12::_Basic_container_proxy_ptr12, COMDAT

; 1323 :     _CONSTEXPR20_CONTAINER _Basic_container_proxy_ptr12()             = default;

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode

; 1316 :     _Container_proxy* _Ptr = nullptr;

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax], 0

; 1323 :     _CONSTEXPR20_CONTAINER _Basic_container_proxy_ptr12()             = default;

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0_Basic_container_proxy_ptr12@std@@IEAA@XZ ENDP	; std::_Basic_container_proxy_ptr12::_Basic_container_proxy_ptr12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ PROC ; std::_Basic_container_proxy_ptr12::_Release, COMDAT

; 1318 :     constexpr void _Release() noexcept { // disengage this _Basic_container_proxy_ptr12

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode

; 1319 :         _Ptr = nullptr;

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax], 0

; 1320 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ENDP ; std::_Basic_container_proxy_ptr12::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?_Swap_proxy_and_iterators_locked@_Container_base12@std@@AEAAXAEAU12@@Z
_TEXT	SEGMENT
_Lock$ = 4
__$ArrayPad$ = 216
this$ = 256
_Right$ = 264
?_Swap_proxy_and_iterators_locked@_Container_base12@std@@AEAAXAEAU12@@Z PROC ; std::_Container_base12::_Swap_proxy_and_iterators_locked, COMDAT

; 1100 :     void _Swap_proxy_and_iterators_locked(_Container_base12& _Right) noexcept {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 10
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode

; 1101 :         _Lockit _Lock(_LOCK_DEBUG);

	mov	edx, 3
	lea	rcx, QWORD PTR _Lock$[rbp]
	call	QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z

; 1102 :         _Swap_proxy_and_iterators_unlocked(_Right);

	mov	rdx, QWORD PTR _Right$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Swap_proxy_and_iterators_unlocked@_Container_base12@std@@AEAAXAEAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators_unlocked

; 1103 :     }

	lea	rcx, QWORD PTR _Lock$[rbp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?_Swap_proxy_and_iterators_locked@_Container_base12@std@@AEAAXAEAU12@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?_Swap_proxy_and_iterators_locked@_Container_base12@std@@AEAAXAEAU12@@Z ENDP ; std::_Container_base12::_Swap_proxy_and_iterators_locked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ
_TEXT	SEGMENT
_Lock$ = 4
__$ArrayPad$ = 216
this$ = 256
?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ PROC ; std::_Container_base12::_Orphan_all_locked_v3, COMDAT

; 1095 :     void _Orphan_all_locked_v3() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 10
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode

; 1096 :         _Lockit _Lock(_LOCK_DEBUG);

	mov	edx, 3
	lea	rcx, QWORD PTR _Lock$[rbp]
	call	QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z

; 1097 :         _Orphan_all_unlocked_v3();

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ ; std::_Container_base12::_Orphan_all_unlocked_v3

; 1098 :     }

	lea	rcx, QWORD PTR _Lock$[rbp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ ENDP ; std::_Container_base12::_Orphan_all_locked_v3
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?_Swap_proxy_and_iterators_unlocked@_Container_base12@std@@AEAAXAEAU12@@Z
_TEXT	SEGMENT
_Temp$ = 8
this$ = 256
_Right$ = 264
?_Swap_proxy_and_iterators_unlocked@_Container_base12@std@@AEAAXAEAU12@@Z PROC ; std::_Container_base12::_Swap_proxy_and_iterators_unlocked, COMDAT

; 1262 : _CONSTEXPR20_CONTAINER void _Container_base12::_Swap_proxy_and_iterators_unlocked(_Container_base12& _Right) noexcept {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode

; 1263 :     _Container_proxy* _Temp = _Myproxy;

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Temp$[rbp], rax

; 1264 :     _Myproxy                = _Right._Myproxy;

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _Right$[rbp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR [rax], rcx

; 1265 :     _Right._Myproxy         = _Temp;

	mov	rax, QWORD PTR _Right$[rbp]
	mov	rcx, QWORD PTR _Temp$[rbp]
	mov	QWORD PTR [rax], rcx

; 1266 : 
; 1267 :     if (_Myproxy) {

	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Swap_proxy

; 1268 :         _Myproxy->_Mycont = this;

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax], rcx
$LN2@Swap_proxy:

; 1269 :     }
; 1270 : 
; 1271 :     if (_Right._Myproxy) {

	mov	rax, QWORD PTR _Right$[rbp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN3@Swap_proxy

; 1272 :         _Right._Myproxy->_Mycont = &_Right;

	mov	rax, QWORD PTR _Right$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Right$[rbp]
	mov	QWORD PTR [rax], rcx
$LN3@Swap_proxy:

; 1273 :     }
; 1274 : }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?_Swap_proxy_and_iterators_unlocked@_Container_base12@std@@AEAAXAEAU12@@Z ENDP ; std::_Container_base12::_Swap_proxy_and_iterators_unlocked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ
_TEXT	SEGMENT
_Pnext$1 = 8
this$ = 256
?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ PROC ; std::_Container_base12::_Orphan_all_unlocked_v3, COMDAT

; 1237 : _CONSTEXPR20_CONTAINER void _Container_base12::_Orphan_all_unlocked_v3() noexcept {

$LN7:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode

; 1238 :     if (!_Myproxy) { // no proxy, already done

	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax], 0
	jne	SHORT $LN5@Orphan_all

; 1239 :         return;

	jmp	SHORT $LN1@Orphan_all
$LN5@Orphan_all:

; 1240 :     }
; 1241 : 
; 1242 :     // proxy allocated, drain it
; 1243 :     for (auto& _Pnext = _Myproxy->_Myfirstiter; _Pnext; _Pnext = _Pnext->_Mynextiter) { // TRANSITION, VSO-1269037

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, 8
	mov	QWORD PTR _Pnext$1[rbp], rax
	jmp	SHORT $LN4@Orphan_all
$LN2@Orphan_all:
	mov	rax, QWORD PTR _Pnext$1[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Pnext$1[rbp]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR [rcx], rax
$LN4@Orphan_all:
	mov	rax, QWORD PTR _Pnext$1[rbp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN3@Orphan_all

; 1244 :         _Pnext->_Myproxy = nullptr;

	mov	rax, QWORD PTR _Pnext$1[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rax], 0

; 1245 :     }

	jmp	SHORT $LN2@Orphan_all
$LN3@Orphan_all:

; 1246 :     _Myproxy->_Myfirstiter = nullptr;

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rax+8], 0
$LN1@Orphan_all:

; 1247 : }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ ENDP ; std::_Container_base12::_Orphan_all_unlocked_v3
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z
_TEXT	SEGMENT
this$ = 224
_Right$ = 232
?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z PROC ; std::_Container_base12::_Swap_proxy_and_iterators, COMDAT

; 1276 : _CONSTEXPR20_CONTAINER void _Container_base12::_Swap_proxy_and_iterators(_Container_base12& _Right) noexcept {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode

; 1277 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1278 : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 1279 :     if (_STD is_constant_evaluated()) {
; 1280 :         _Swap_proxy_and_iterators_unlocked(_Right);
; 1281 :     } else
; 1282 : #endif // __cpp_lib_constexpr_dynamic_alloc
; 1283 :     {
; 1284 :         _Swap_proxy_and_iterators_locked(_Right);

	mov	rdx, QWORD PTR _Right$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Swap_proxy_and_iterators_locked@_Container_base12@std@@AEAAXAEAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators_locked

; 1285 :     }
; 1286 : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 2 ^^^ / vvv _ITERATOR_DEBUG_LEVEL != 2 vvv
; 1287 :     _Swap_proxy_and_iterators_unlocked(_Right);
; 1288 : #endif // _ITERATOR_DEBUG_LEVEL != 2
; 1289 : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z ENDP ; std::_Container_base12::_Swap_proxy_and_iterators
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?_Orphan_all@_Container_base12@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?_Orphan_all@_Container_base12@std@@QEAAXXZ PROC	; std::_Container_base12::_Orphan_all, COMDAT

; 1249 : _CONSTEXPR20_CONTAINER void _Container_base12::_Orphan_all() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode

; 1250 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1251 : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 1252 :     if (_STD is_constant_evaluated()) {
; 1253 :         _Orphan_all_unlocked_v3();
; 1254 :     } else
; 1255 : #endif // __cpp_lib_constexpr_dynamic_alloc
; 1256 :     {
; 1257 :         _Orphan_all_locked_v3();

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ ; std::_Container_base12::_Orphan_all_locked_v3

; 1258 :     }
; 1259 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1260 : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Orphan_all@_Container_base12@std@@QEAAXXZ ENDP	; std::_Container_base12::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??0_Container_base12@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0_Container_base12@std@@QEAA@XZ PROC			; std::_Container_base12::_Container_base12, COMDAT

; 1064 :     _CONSTEXPR20_CONTAINER _Container_base12() noexcept = default;

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode

; 1065 : 
; 1066 :     _Container_base12(const _Container_base12&) = delete;
; 1067 :     _Container_base12& operator=(const _Container_base12&) = delete;
; 1068 : 
; 1069 :     _CONSTEXPR20_CONTAINER void _Orphan_all() noexcept;
; 1070 :     _CONSTEXPR20_CONTAINER void _Swap_proxy_and_iterators(_Container_base12&) noexcept;
; 1071 : 
; 1072 :     template <class _Alloc>
; 1073 :     _CONSTEXPR20_CONTAINER void _Alloc_proxy(_Alloc&& _Al) {
; 1074 :         _Container_proxy* const _New_proxy = _Unfancy(_Al.allocate(1));
; 1075 :         _Construct_in_place(*_New_proxy, this);
; 1076 :         _Myproxy            = _New_proxy;
; 1077 :         _New_proxy->_Mycont = this;
; 1078 :     }
; 1079 : 
; 1080 :     template <class _Alloc>
; 1081 :     _CONSTEXPR20_CONTAINER void _Reload_proxy(_Alloc&& _Old_alloc, _Alloc&& _New_alloc) {
; 1082 :         // pre: no iterators refer to the existing proxy
; 1083 :         _Container_proxy* const _New_proxy = _Unfancy(_New_alloc.allocate(1));
; 1084 :         _Construct_in_place(*_New_proxy, this);
; 1085 :         _New_proxy->_Mycont = this;
; 1086 :         _Delete_plain_internal(_Old_alloc, _STD exchange(_Myproxy, _New_proxy));
; 1087 :     }
; 1088 : 
; 1089 :     _Container_proxy* _Myproxy = nullptr;

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax], 0

; 1064 :     _CONSTEXPR20_CONTAINER _Container_base12() noexcept = default;

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0_Container_base12@std@@QEAA@XZ ENDP			; std::_Container_base12::_Container_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 224
_Mycont_$ = 232
??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z PROC ; std::_Container_proxy::_Container_proxy, COMDAT

; 1056 :     _CONSTEXPR20_CONTAINER _Container_proxy(_Container_base12* _Mycont_) noexcept : _Mycont(_Mycont_) {}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _Mycont_$[rbp]
	mov	QWORD PTR [rax], rcx

; 1057 : 
; 1058 :     const _Container_base12* _Mycont       = nullptr;
; 1059 :     mutable _Iterator_base12* _Myfirstiter = nullptr;

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0

; 1056 :     _CONSTEXPR20_CONTAINER _Container_proxy(_Container_base12* _Mycont_) noexcept : _Mycont(_Mycont_) {}

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ENDP ; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Convert_size@_K@std@@YA_K_K@Z
_TEXT	SEGMENT
_Len$ = 224
??$_Convert_size@_K@std@@YA_K_K@Z PROC			; std::_Convert_size<unsigned __int64>, COMDAT

; 978  : _NODISCARD constexpr size_t _Convert_size<size_t>(const size_t _Len) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode

; 979  :     // convert size_t to size_t, unchanged
; 980  :     return _Len;

	mov	rax, QWORD PTR _Len$[rbp]

; 981  : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Convert_size@_K@std@@YA_K_K@Z ENDP			; std::_Convert_size<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
_TEXT	SEGMENT
_Ptr_user$ = 8
_Ptr_container$ = 40
_Min_back_shift$ = 72
_Back_shift$ = 104
_Ptr$ = 352
_Bytes$ = 360
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z PROC ; std::_Adjust_manually_vector_aligned, COMDAT

; 153  : inline void _Adjust_manually_vector_aligned(void*& _Ptr, size_t& _Bytes) {

$LN21:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 376				; 00000178H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode

; 154  :     // adjust parameters from _Allocate_manually_vector_aligned to pass to operator delete
; 155  :     _Bytes += _Non_user_size;

	mov	rax, QWORD PTR _Bytes$[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, 47					; 0000002fH
	mov	rcx, QWORD PTR _Bytes$[rbp]
	mov	QWORD PTR [rcx], rax

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);

	mov	rax, QWORD PTR _Ptr$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Ptr_user$[rbp], rax

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	eax, 8
	imul	rax, rax, -1
	mov	rcx, QWORD PTR _Ptr_user$[rbp]
	mov	rax, QWORD PTR [rcx+rax]
	mov	QWORD PTR _Ptr_container$[rbp], rax
$LN4@Adjust_man:

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");

	mov	eax, 8
	imul	rax, rax, -2
	mov	rcx, QWORD PTR _Ptr_user$[rbp]
	mov	rdx, -361700864190383366		; fafafafafafafafaH
	cmp	QWORD PTR [rcx+rax], rdx
	jne	SHORT $LN14@Adjust_man
	jmp	SHORT $LN15@Adjust_man
$LN14@Adjust_man:
$LN7@Adjust_man:
	mov	eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
	add	eax, 9
	lea	rcx, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
	mov	QWORD PTR [rsp+40], rcx
	lea	rcx, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rcx
	xor	r9d, r9d
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_0GI@MNEMJBML@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN19@Adjust_man
	int	3
	xor	eax, eax
$LN19@Adjust_man:
	mov	eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
	add	eax, 9
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, eax
	lea	r8, OFFSET FLAT:??_C@_1NA@MJBOBEJL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
	lea	rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@Adjust_man
$LN15@Adjust_man:
	xor	eax, eax
	test	eax, eax
	jne	$LN4@Adjust_man

; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);

	mov	QWORD PTR _Min_back_shift$[rbp], 16

; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	mov	rax, QWORD PTR _Ptr$[rbp]
	mov	rcx, QWORD PTR _Ptr_container$[rbp]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	mov	QWORD PTR _Back_shift$[rbp], rax
$LN10@Adjust_man:

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	cmp	QWORD PTR _Back_shift$[rbp], 16
	jb	SHORT $LN16@Adjust_man
	cmp	QWORD PTR _Back_shift$[rbp], 47		; 0000002fH
	ja	SHORT $LN16@Adjust_man
	jmp	SHORT $LN17@Adjust_man
$LN16@Adjust_man:
$LN13@Adjust_man:
	mov	eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
	add	eax, 19
	lea	rcx, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
	mov	QWORD PTR [rsp+40], rcx
	lea	rcx, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rcx
	xor	r9d, r9d
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_0GI@MNEMJBML@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN20@Adjust_man
	int	3
	xor	eax, eax
$LN20@Adjust_man:
	mov	eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
	add	eax, 19
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, eax
	lea	r8, OFFSET FLAT:??_C@_1NA@MJBOBEJL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
	lea	rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN13@Adjust_man
$LN17@Adjust_man:
	xor	eax, eax
	test	eax, eax
	jne	$LN10@Adjust_man

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rax, QWORD PTR _Ptr$[rbp]
	mov	rcx, QWORD PTR _Ptr_container$[rbp]
	mov	QWORD PTR [rax], rcx

; 174  : }

	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ENDP ; std::_Adjust_manually_vector_aligned
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 224
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z PROC ; std::_Default_allocate_traits::_Allocate, COMDAT

; 84   :         void* _Allocate(const size_t _Bytes) {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__79D216CD_xmemory
	call	__CheckForDebuggerJustMyCode

; 85   :         return ::operator new(_Bytes);

	mov	rcx, QWORD PTR _Bytes$[rbp]
	call	??2@YAPEAX_K@Z				; operator new

; 86   :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ENDP ; std::_Default_allocate_traits::_Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\limits
;	COMDAT ?max@?$numeric_limits@_J@std@@SA_JXZ
_TEXT	SEGMENT
?max@?$numeric_limits@_J@std@@SA_JXZ PROC		; std::numeric_limits<__int64>::max, COMDAT

; 647  :     _NODISCARD static constexpr long long(max)() noexcept {

$LN3:
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__7FE5F402_limits
	call	__CheckForDebuggerJustMyCode

; 648  :         return LLONG_MAX;

	mov	rax, 9223372036854775807		; 7fffffffffffffffH

; 649  :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?max@?$numeric_limits@_J@std@@SA_JXZ ENDP		; std::numeric_limits<__int64>::max
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = 200
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 320  : [[noreturn]] inline void _Throw_bad_array_new_length() {

$LN3:
	push	rbp
	push	rdi
	sub	rsp, 280				; 00000118H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__FF458F76_exception
	call	__CheckForDebuggerJustMyCode

; 321  :     _THROW(bad_array_new_length{});

	lea	rcx, QWORD PTR $T1[rbp]
	call	??0bad_array_new_length@std@@QEAA@XZ	; std::bad_array_new_length::bad_array_new_length
	lea	rdx, OFFSET FLAT:_TI3?AVbad_array_new_length@std@@
	lea	rcx, QWORD PTR $T1[rbp]
	call	_CxxThrowException
$LN2@Throw_bad_:

; 322  : }

	lea	rsp, QWORD PTR [rbp+248]
	pop	rdi
	pop	rbp
	ret	0
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gbad_array_new_length@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_Gbad_array_new_length@std@@UEAAPEAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1bad_array_new_length@std@@UEAA@XZ
	mov	eax, DWORD PTR __flags$[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	edx, 24
	mov	rcx, QWORD PTR this$[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN2@scalar:
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??_Gbad_array_new_length@std@@UEAAPEAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 224
__that$ = 232
??0bad_array_new_length@std@@QEAA@AEBV01@@Z PROC	; std::bad_array_new_length::bad_array_new_length, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdx, QWORD PTR __that$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	??0bad_alloc@std@@QEAA@AEBV01@@Z
	mov	rax, QWORD PTR this$[rbp]
	lea	rcx, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0bad_array_new_length@std@@QEAA@AEBV01@@Z ENDP	; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1bad_array_new_length@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1bad_array_new_length@std@@UEAA@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1bad_alloc@std@@UEAA@XZ
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1bad_array_new_length@std@@UEAA@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0bad_array_new_length@std@@QEAA@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT

; 141  :     {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__B0A13A33_vcruntime_exception@h
	call	__CheckForDebuggerJustMyCode

; 140  :         : bad_alloc("bad array new length")

	lea	rdx, OFFSET FLAT:??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
	mov	rcx, QWORD PTR this$[rbp]
	call	??0bad_alloc@std@@AEAA@QEBD@Z		; std::bad_alloc::bad_alloc

; 141  :     {

	mov	rax, QWORD PTR this$[rbp]
	lea	rcx, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
	mov	QWORD PTR [rax], rcx

; 142  :     }

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0bad_array_new_length@std@@QEAA@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gbad_alloc@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_Gbad_alloc@std@@UEAAPEAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1bad_alloc@std@@UEAA@XZ
	mov	eax, DWORD PTR __flags$[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	edx, 24
	mov	rcx, QWORD PTR this$[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN2@scalar:
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??_Gbad_alloc@std@@UEAAPEAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0bad_alloc@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 224
__that$ = 232
??0bad_alloc@std@@QEAA@AEBV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdx, QWORD PTR __that$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	??0exception@std@@QEAA@AEBV01@@Z	; std::exception::exception
	mov	rax, QWORD PTR this$[rbp]
	lea	rcx, OFFSET FLAT:??_7bad_alloc@std@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0bad_alloc@std@@QEAA@AEBV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1bad_alloc@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1bad_alloc@std@@UEAA@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1exception@std@@UEAA@XZ		; std::exception::~exception
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1bad_alloc@std@@UEAA@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@AEAA@QEBD@Z
_TEXT	SEGMENT
this$ = 224
_Message$ = 232
??0bad_alloc@std@@AEAA@QEBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT

; 130  :     {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__B0A13A33_vcruntime_exception@h
	call	__CheckForDebuggerJustMyCode

; 129  :         : exception(_Message, 1)

	mov	r8d, 1
	mov	rdx, QWORD PTR _Message$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	??0exception@std@@QEAA@QEBDH@Z		; std::exception::exception

; 130  :     {

	mov	rax, QWORD PTR this$[rbp]
	lea	rcx, OFFSET FLAT:??_7bad_alloc@std@@6B@
	mov	QWORD PTR [rax], rcx

; 131  :     }

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0bad_alloc@std@@AEAA@QEBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gexception@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_Gexception@std@@UEAAPEAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1exception@std@@UEAA@XZ		; std::exception::~exception
	mov	eax, DWORD PTR __flags$[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	edx, 24
	mov	rcx, QWORD PTR this$[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN2@scalar:
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??_Gexception@std@@UEAAPEAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UEBAPEBDXZ
_TEXT	SEGMENT
tv69 = 192
this$ = 240
?what@exception@std@@UEBAPEBDXZ PROC			; std::exception::what, COMDAT

; 94   :     {

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__B0A13A33_vcruntime_exception@h
	call	__CheckForDebuggerJustMyCode

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN3@what
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR tv69[rbp], rax
	jmp	SHORT $LN4@what
$LN3@what:
	lea	rax, OFFSET FLAT:??_C@_0BC@EOODALEL@Unknown?5exception@
	mov	QWORD PTR tv69[rbp], rax
$LN4@what:
	mov	rax, QWORD PTR tv69[rbp]

; 96   :     }

	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?what@exception@std@@UEBAPEBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1exception@std@@UEAA@XZ PROC				; std::exception::~exception, COMDAT

; 89   :     {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__B0A13A33_vcruntime_exception@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	lea	rcx, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rax], rcx

; 90   :         __std_exception_destroy(&_Data);

	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	rcx, rax
	call	__std_exception_destroy

; 91   :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1exception@std@@UEAA@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 224
_Other$ = 232
??0exception@std@@QEAA@AEBV01@@Z PROC			; std::exception::exception, COMDAT

; 72   :     {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__B0A13A33_vcruntime_exception@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	lea	rcx, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rax], rcx

; 71   :         : _Data()

	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 16
	rep stosb

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	rcx, QWORD PTR _Other$[rbp]
	add	rcx, 8
	mov	rdx, rax
	call	__std_exception_copy

; 74   :     }

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0exception@std@@QEAA@AEBV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@QEBDH@Z
_TEXT	SEGMENT
this$ = 224
_Message$ = 232
__formal$ = 240
??0exception@std@@QEAA@QEBDH@Z PROC			; std::exception::exception, COMDAT

; 66   :     {

$LN3:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__B0A13A33_vcruntime_exception@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	lea	rcx, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rax], rcx

; 65   :         : _Data()

	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 16
	rep stosb

; 67   :         _Data._What = _Message;

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _Message$[rbp]
	mov	QWORD PTR [rax+8], rcx

; 68   :     }

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0exception@std@@QEAA@QEBDH@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@QEBD@Z
_TEXT	SEGMENT
_InitData$ = 8
__$ArrayPad$ = 232
this$ = 272
_Message$ = 280
??0exception@std@@QEAA@QEBD@Z PROC			; std::exception::exception, COMDAT

; 59   :     {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 280				; 00000118H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 14
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+312]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__B0A13A33_vcruntime_exception@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	lea	rcx, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rax], rcx

; 58   :         : _Data()

	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 16
	rep stosb

; 60   :         __std_exception_data _InitData = { _Message, true };

	mov	rax, QWORD PTR _Message$[rbp]
	mov	QWORD PTR _InitData$[rbp], rax
	mov	BYTE PTR _InitData$[rbp+8], 1

; 61   :         __std_exception_copy(&_InitData, &_Data);

	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	rdx, rax
	lea	rcx, QWORD PTR _InitData$[rbp]
	call	__std_exception_copy

; 62   :     }

	mov	rax, QWORD PTR this$[rbp]
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:??0exception@std@@QEAA@QEBD@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+248]
	pop	rdi
	pop	rbp
	ret	0
??0exception@std@@QEAA@QEBD@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\stdio.h
;	COMDAT _scprintf
_TEXT	SEGMENT
_Result$ = 4
_ArgList$ = 40
__$ArrayPad$ = 280
_Format$ = 320
_scprintf PROC						; COMDAT

; 2083 :     {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+32], r9
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 26
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+360]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__B5C48800_stdio@h
	call	__CheckForDebuggerJustMyCode

; 2084 :         int _Result;
; 2085 :         va_list _ArgList;
; 2086 :         __crt_va_start(_ArgList, _Format);

	lea	rax, QWORD PTR _Format$[rbp+8]
	mov	QWORD PTR _ArgList$[rbp], rax

; 2087 :         _Result = _vscprintf_l(_Format, NULL, _ArgList);

	mov	r8, QWORD PTR _ArgList$[rbp]
	xor	edx, edx
	mov	rcx, QWORD PTR _Format$[rbp]
	call	_vscprintf_l
	mov	DWORD PTR _Result$[rbp], eax

; 2088 :         __crt_va_end(_ArgList);

	mov	QWORD PTR _ArgList$[rbp], 0

; 2089 :         return _Result;

	mov	eax, DWORD PTR _Result$[rbp]

; 2090 :     }

	mov	edi, eax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:_scprintf$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
_scprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\stdio.h
;	COMDAT sprintf_s
_TEXT	SEGMENT
_Result$ = 4
_ArgList$ = 40
__$ArrayPad$ = 280
_Buffer$ = 320
_BufferCount$ = 328
_Format$ = 336
sprintf_s PROC						; COMDAT

; 1823 :         {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+32], r9
	push	rbp
	push	rdi
	sub	rsp, 344				; 00000158H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 26
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+376]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__B5C48800_stdio@h
	call	__CheckForDebuggerJustMyCode

; 1824 :             int _Result;
; 1825 :             va_list _ArgList;
; 1826 :             __crt_va_start(_ArgList, _Format);

	lea	rax, QWORD PTR _Format$[rbp+8]
	mov	QWORD PTR _ArgList$[rbp], rax

; 1827 :             _Result = _vsprintf_s_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);

	mov	rax, QWORD PTR _ArgList$[rbp]
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8, QWORD PTR _Format$[rbp]
	mov	rdx, QWORD PTR _BufferCount$[rbp]
	mov	rcx, QWORD PTR _Buffer$[rbp]
	call	_vsprintf_s_l
	mov	DWORD PTR _Result$[rbp], eax

; 1828 :             __crt_va_end(_ArgList);

	mov	QWORD PTR _ArgList$[rbp], 0

; 1829 :             return _Result;

	mov	eax, DWORD PTR _Result$[rbp]

; 1830 :         }

	mov	edi, eax
	lea	rcx, QWORD PTR [rbp-48]
	lea	rdx, OFFSET FLAT:sprintf_s$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
sprintf_s ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\stdio.h
;	COMDAT _vscprintf_l
_TEXT	SEGMENT
_Result$ = 4
tv74 = 212
_Format$ = 256
_Locale$ = 264
_ArgList$ = 272
_vscprintf_l PROC					; COMDAT

; 1651 :     {

$LN5:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 280				; 00000118H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__B5C48800_stdio@h
	call	__CheckForDebuggerJustMyCode

; 1652 :         int const _Result = __stdio_common_vsprintf(

	call	__local_stdio_printf_options
	mov	rax, QWORD PTR [rax]
	or	rax, 2
	mov	rcx, QWORD PTR _ArgList$[rbp]
	mov	QWORD PTR [rsp+40], rcx
	mov	rcx, QWORD PTR _Locale$[rbp]
	mov	QWORD PTR [rsp+32], rcx
	mov	r9, QWORD PTR _Format$[rbp]
	xor	r8d, r8d
	xor	edx, edx
	mov	rcx, rax
	call	QWORD PTR __imp___stdio_common_vsprintf
	mov	DWORD PTR _Result$[rbp], eax

; 1653 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_STANDARD_SNPRINTF_BEHAVIOR,
; 1654 :             NULL, 0, _Format, _Locale, _ArgList);
; 1655 : 
; 1656 :         return _Result < 0 ? -1 : _Result;

	cmp	DWORD PTR _Result$[rbp], 0
	jge	SHORT $LN3@vscprintf_
	mov	DWORD PTR tv74[rbp], -1
	jmp	SHORT $LN4@vscprintf_
$LN3@vscprintf_:
	mov	eax, DWORD PTR _Result$[rbp]
	mov	DWORD PTR tv74[rbp], eax
$LN4@vscprintf_:
	mov	eax, DWORD PTR tv74[rbp]

; 1657 :     }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
_vscprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\stdio.h
;	COMDAT _vsprintf_s_l
_TEXT	SEGMENT
_Result$ = 4
tv73 = 212
_Buffer$ = 256
_BufferCount$ = 264
_Format$ = 272
_Locale$ = 280
_ArgList$ = 288
_vsprintf_s_l PROC					; COMDAT

; 1490 :     {

$LN5:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 280				; 00000118H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__B5C48800_stdio@h
	call	__CheckForDebuggerJustMyCode

; 1491 :         int const _Result = __stdio_common_vsprintf_s(

	call	__local_stdio_printf_options
	mov	rcx, QWORD PTR _ArgList$[rbp]
	mov	QWORD PTR [rsp+40], rcx
	mov	rcx, QWORD PTR _Locale$[rbp]
	mov	QWORD PTR [rsp+32], rcx
	mov	r9, QWORD PTR _Format$[rbp]
	mov	r8, QWORD PTR _BufferCount$[rbp]
	mov	rdx, QWORD PTR _Buffer$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	QWORD PTR __imp___stdio_common_vsprintf_s
	mov	DWORD PTR _Result$[rbp], eax

; 1492 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1493 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1494 : 
; 1495 :         return _Result < 0 ? -1 : _Result;

	cmp	DWORD PTR _Result$[rbp], 0
	jge	SHORT $LN3@vsprintf_s
	mov	DWORD PTR tv73[rbp], -1
	jmp	SHORT $LN4@vsprintf_s
$LN3@vsprintf_s:
	mov	eax, DWORD PTR _Result$[rbp]
	mov	DWORD PTR tv73[rbp], eax
$LN4@vsprintf_s:
	mov	eax, DWORD PTR tv73[rbp]

; 1496 :     }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
_vsprintf_s_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_stdio_config.h
;	COMDAT __local_stdio_printf_options
_TEXT	SEGMENT
__local_stdio_printf_options PROC			; COMDAT

; 90   :     {

$LN3:
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__C44F8F6B_corecrt_stdio_config@h
	call	__CheckForDebuggerJustMyCode

; 91   :         static unsigned __int64 _OptionsStorage;
; 92   :         return &_OptionsStorage;

	lea	rax, OFFSET FLAT:?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 93   :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
__local_stdio_printf_options ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vcruntime_new.h
;	COMDAT ??2@YAPEAX_KPEAX@Z
_TEXT	SEGMENT
_Size$ = 224
_Where$ = 232
??2@YAPEAX_KPEAX@Z PROC					; operator new, COMDAT

; 167  :     {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__97D3638F_vcruntime_new@h
	call	__CheckForDebuggerJustMyCode

; 168  :         (void)_Size;
; 169  :         return _Where;

	mov	rax, QWORD PTR _Where$[rbp]

; 170  :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??2@YAPEAX_KPEAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\shtuk\Desktop\Files\EquationStringParser\EquationStringParser\EquationStringParser.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX_K@Z
_TEXT	SEGMENT
__formal$ = 224
__formal$ = 232
?__empty_global_delete@@YAXPEAX_K@Z PROC		; __empty_global_delete, COMDAT

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__C90439AA_EquationStringParser@cpp
	call	__CheckForDebuggerJustMyCode
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?__empty_global_delete@@YAXPEAX_K@Z ENDP		; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\shtuk\Desktop\Files\EquationStringParser\EquationStringParser\EquationStringParser.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX@Z
_TEXT	SEGMENT
__formal$ = 224
?__empty_global_delete@@YAXPEAX@Z PROC			; __empty_global_delete, COMDAT

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__C90439AA_EquationStringParser@cpp
	call	__CheckForDebuggerJustMyCode
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?__empty_global_delete@@YAXPEAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
